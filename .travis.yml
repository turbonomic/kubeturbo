language: go

env:
  global:
    - DOCKER_IMAGE_NAME=$TRAVIS_REPO_SLUG
    - PLATFORM_OS_ARCH_LIST="linux/amd64,linux/arm64,linux/ppc64le,linux/s390x"
    - KUBETURBO_VERSION=$TRAVIS_TAG
    - DOCKER_IMAGE_PATH=${PRIVATE_REGISTRY}/hyc-turbo-build-poc-team-primary-docker-virtual/turbonomic/kubeturbo
    - TEAM_TAG=8.Adina-SNAPSHOT

services:
  - docker

go:
  - 1.20.7
 
go_import_path: github.com/turbonomic/kubeturbo

before_install:
  - go install -v github.com/mattn/goveralls@HEAD
  - go mod vendor
 
script:
  - make fmtcheck
  - make vet
  - $HOME/gopath/bin/goveralls -v -race -service=travis-ci -package='github.com/turbonomic/kubeturbo/cmd/kubeturbo github.com/turbonomic/kubeturbo/cmd/kubeturbo/app github.com/turbonomic/kubeturbo/pkg github.com/turbonomic/kubeturbo/pkg/action github.com/turbonomic/kubeturbo/pkg/action/executor github.com/turbonomic/kubeturbo/pkg/action/util github.com/turbonomic/kubeturbo/pkg/cluster github.com/turbonomic/kubeturbo/pkg/discovery github.com/turbonomic/kubeturbo/pkg/discovery/configs github.com/turbonomic/kubeturbo/pkg/discovery/detectors github.com/turbonomic/kubeturbo/pkg/discovery/dtofactory github.com/turbonomic/kubeturbo/pkg/discovery/dtofactory/property github.com/turbonomic/kubeturbo/pkg/discovery/metrics github.com/turbonomic/kubeturbo/pkg/discovery/monitoring github.com/turbonomic/kubeturbo/pkg/discovery/monitoring/kubelet github.com/turbonomic/kubeturbo/pkg/discovery/monitoring/master github.com/turbonomic/kubeturbo/pkg/discovery/monitoring/types github.com/turbonomic/kubeturbo/pkg/discovery/processor github.com/turbonomic/kubeturbo/pkg/discovery/repository github.com/turbonomic/kubeturbo/pkg/discovery/stitching github.com/turbonomic/kubeturbo/pkg/discovery/task github.com/turbonomic/kubeturbo/pkg/discovery/util github.com/turbonomic/kubeturbo/pkg/discovery/worker github.com/turbonomic/kubeturbo/pkg/discovery/worker/aggregation github.com/turbonomic/kubeturbo/pkg/discovery/worker/compliance github.com/turbonomic/kubeturbo/pkg/kubeclient github.com/turbonomic/kubeturbo/pkg/registration github.com/turbonomic/kubeturbo/pkg/resourcemapping github.com/turbonomic/kubeturbo/pkg/turbostore github.com/turbonomic/kubeturbo/pkg/util github.com/turbonomic/kubeturbo/pkg/discovery/worker/k8sappcomponents'
  - ./hack/download_test_binaries.sh
  - ./hack/create_kind_cluster.sh
  - ./hack/deploy_istio.sh
  - ./hack/generate_ocp_context.sh
  - make integration
  - ./build/integration.test -k8s-kubeconfig=$HOME/.kube/config -k8s-context=kind-kind -docker-username=${DOCKER_USERNAME} -docker-password=${DOCKER_PASSWORD}
  - ./build/integration.test -k8s-kubeconfig=$HOME/.kube/config -k8s-context=kind-kind -istio-enabled=true -ginkgo.focus=Istio -ginkgo.focus=teardown -docker-username=${DOCKER_USERNAME} -docker-password=${DOCKER_PASSWORD}
  - ./build/integration.test -k8s-kubeconfig=$HOME/.kube/config -k8s-context=rosa -openshift-tests=true -docker-username=${DOCKER_USERNAME} -docker-password=${DOCKER_PASSWORD}
  

after_success:
  - |
    if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
      if [ "$TRAVIS_BRANCH" == "team/cloud-native-a" ]; then
        make product
        # Update docker
        sudo rm -rf /var/lib/apt/lists/*
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge"
        sudo apt-get update
        sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
        docker version
        # Install buildx plugin
        mkdir -vp ~/.docker/cli-plugins/
        curl --silent -L "https://github.com/docker/buildx/releases/download/v0.6.0/buildx-v0.6.0.linux-amd64" > ~/.docker/cli-plugins/docker-buildx
        chmod a+x ~/.docker/cli-plugins/docker-buildx
        # Login to docker
        echo "$PRIVATE_REGISTRY_PASSWORD" | docker login -u "$PRIVATE_REGISTRY_USERNAME" --password-stdin ${PRIVATE_REGISTRY}
        # Create and set a new buildx builder instance
        docker buildx create --use
        # Build and push the image
        # Push the latest image built from team branch
        docker buildx build -f build/Dockerfile --platform $PLATFORM_OS_ARCH_LIST --label "git-version=$TRAVIS_COMMIT" --tag ${DOCKER_IMAGE_PATH}:${TEAM_TAG} --push .
      fi
    fi
