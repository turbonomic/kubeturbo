// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: NonMarketEntityDTO.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enumerate non market entities
type NonMarketEntityDTO_NonMarketEntityType int32

const (
	NonMarketEntityDTO_CLOUD_SERVICE    NonMarketEntityDTO_NonMarketEntityType = 0
	NonMarketEntityDTO_ACCOUNT          NonMarketEntityDTO_NonMarketEntityType = 2
	NonMarketEntityDTO_PLAN_DESTINATION NonMarketEntityDTO_NonMarketEntityType = 3
	NonMarketEntityDTO_CLOUD_COMMITMENT NonMarketEntityDTO_NonMarketEntityType = 4
)

// Enum value maps for NonMarketEntityDTO_NonMarketEntityType.
var (
	NonMarketEntityDTO_NonMarketEntityType_name = map[int32]string{
		0: "CLOUD_SERVICE",
		2: "ACCOUNT",
		3: "PLAN_DESTINATION",
		4: "CLOUD_COMMITMENT",
	}
	NonMarketEntityDTO_NonMarketEntityType_value = map[string]int32{
		"CLOUD_SERVICE":    0,
		"ACCOUNT":          2,
		"PLAN_DESTINATION": 3,
		"CLOUD_COMMITMENT": 4,
	}
)

func (x NonMarketEntityDTO_NonMarketEntityType) Enum() *NonMarketEntityDTO_NonMarketEntityType {
	p := new(NonMarketEntityDTO_NonMarketEntityType)
	*p = x
	return p
}

func (x NonMarketEntityDTO_NonMarketEntityType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NonMarketEntityDTO_NonMarketEntityType) Descriptor() protoreflect.EnumDescriptor {
	return file_NonMarketEntityDTO_proto_enumTypes[0].Descriptor()
}

func (NonMarketEntityDTO_NonMarketEntityType) Type() protoreflect.EnumType {
	return &file_NonMarketEntityDTO_proto_enumTypes[0]
}

func (x NonMarketEntityDTO_NonMarketEntityType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NonMarketEntityDTO_NonMarketEntityType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NonMarketEntityDTO_NonMarketEntityType(num)
	return nil
}

// Deprecated: Use NonMarketEntityDTO_NonMarketEntityType.Descriptor instead.
func (NonMarketEntityDTO_NonMarketEntityType) EnumDescriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 0}
}

type NonMarketEntityDTO_CloudServiceData_PriceModel int32

const (
	// Pay for compute capacity by per hour or per second depending
	// on which instances are run.
	NonMarketEntityDTO_CloudServiceData_ON_DEMAND NonMarketEntityDTO_CloudServiceData_PriceModel = 0
	// Pay a discounted price for reserved instances with a significant
	// discount (up to 75%) compared to On-Demand instance pricing.
	NonMarketEntityDTO_CloudServiceData_RESERVED NonMarketEntityDTO_CloudServiceData_PriceModel = 1
	// Pay the Spot price that is in effect for the time period the
	// instances are running and prices are set by Amazon EC2 and
	// adjusted gradually based on long-term trends in supply and demand.
	NonMarketEntityDTO_CloudServiceData_SPOT NonMarketEntityDTO_CloudServiceData_PriceModel = 2
)

// Enum value maps for NonMarketEntityDTO_CloudServiceData_PriceModel.
var (
	NonMarketEntityDTO_CloudServiceData_PriceModel_name = map[int32]string{
		0: "ON_DEMAND",
		1: "RESERVED",
		2: "SPOT",
	}
	NonMarketEntityDTO_CloudServiceData_PriceModel_value = map[string]int32{
		"ON_DEMAND": 0,
		"RESERVED":  1,
		"SPOT":      2,
	}
)

func (x NonMarketEntityDTO_CloudServiceData_PriceModel) Enum() *NonMarketEntityDTO_CloudServiceData_PriceModel {
	p := new(NonMarketEntityDTO_CloudServiceData_PriceModel)
	*p = x
	return p
}

func (x NonMarketEntityDTO_CloudServiceData_PriceModel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NonMarketEntityDTO_CloudServiceData_PriceModel) Descriptor() protoreflect.EnumDescriptor {
	return file_NonMarketEntityDTO_proto_enumTypes[1].Descriptor()
}

func (NonMarketEntityDTO_CloudServiceData_PriceModel) Type() protoreflect.EnumType {
	return &file_NonMarketEntityDTO_proto_enumTypes[1]
}

func (x NonMarketEntityDTO_CloudServiceData_PriceModel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NonMarketEntityDTO_CloudServiceData_PriceModel) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NonMarketEntityDTO_CloudServiceData_PriceModel(num)
	return nil
}

// Deprecated: Use NonMarketEntityDTO_CloudServiceData_PriceModel.Descriptor instead.
func (NonMarketEntityDTO_CloudServiceData_PriceModel) EnumDescriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 0, 0}
}

// Types of Billing Data, based on the whether the discovering probe is also
// creating the main Entities or only BillingData or both.
type NonMarketEntityDTO_CloudServiceData_BillingData_Type int32

const (
	// Default implies that the discovering probe is capable of discovering BillingData
	// as well as the Entities being billed. For example, Probe 'X' discovers EntityDTOs
	// *and* BillingData for those EntityDTOs marks the BillingData as DEFAULT.
	NonMarketEntityDTO_CloudServiceData_BillingData_DEFAULT NonMarketEntityDTO_CloudServiceData_BillingData_Type = 0
	// Proxy implies that the discovering probe fetches BillingData but is not capable
	// of discovering Entities for which the BillingData is being discovered. For this
	// type of BillingData, DTOs in virtual_machines need to be marked proxy.
	// Optionally, mainTargetId can be set to the target id for which this discovery
	// probe is the acting proxy.
	// For example, Probe 'X' discovers EntityDTOs, Probe 'Y' discovers BillingData,
	// Probe 'Y' marks BillingData as PROXY.
	NonMarketEntityDTO_CloudServiceData_BillingData_PROXY NonMarketEntityDTO_CloudServiceData_BillingData_Type = 1
	// Stitching implies that the discovering probe is capable of discovering Entities
	// but not the BillingData for the Entities. This type of BillingData would contain
	// stitching information in the virtual_machines list.
	// For example, Probe 'X' discovers EntityDTOs, Probe 'Y' discovers BillingData,
	// Probe 'X' marks BillingData as STITCHING. virtual_machines in this BillingData
	// contain VM Billing Id in the entityProperties list.
	NonMarketEntityDTO_CloudServiceData_BillingData_STITCHING NonMarketEntityDTO_CloudServiceData_BillingData_Type = 2
)

// Enum value maps for NonMarketEntityDTO_CloudServiceData_BillingData_Type.
var (
	NonMarketEntityDTO_CloudServiceData_BillingData_Type_name = map[int32]string{
		0: "DEFAULT",
		1: "PROXY",
		2: "STITCHING",
	}
	NonMarketEntityDTO_CloudServiceData_BillingData_Type_value = map[string]int32{
		"DEFAULT":   0,
		"PROXY":     1,
		"STITCHING": 2,
	}
)

func (x NonMarketEntityDTO_CloudServiceData_BillingData_Type) Enum() *NonMarketEntityDTO_CloudServiceData_BillingData_Type {
	p := new(NonMarketEntityDTO_CloudServiceData_BillingData_Type)
	*p = x
	return p
}

func (x NonMarketEntityDTO_CloudServiceData_BillingData_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NonMarketEntityDTO_CloudServiceData_BillingData_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_NonMarketEntityDTO_proto_enumTypes[2].Descriptor()
}

func (NonMarketEntityDTO_CloudServiceData_BillingData_Type) Type() protoreflect.EnumType {
	return &file_NonMarketEntityDTO_proto_enumTypes[2]
}

func (x NonMarketEntityDTO_CloudServiceData_BillingData_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NonMarketEntityDTO_CloudServiceData_BillingData_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NonMarketEntityDTO_CloudServiceData_BillingData_Type(num)
	return nil
}

// Deprecated: Use NonMarketEntityDTO_CloudServiceData_BillingData_Type.Descriptor instead.
func (NonMarketEntityDTO_CloudServiceData_BillingData_Type) EnumDescriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 0, 0, 0}
}

type NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity int32

const (
	NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_HOURLY  NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity = 0
	NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_DAILY   NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity = 1
	NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_MONTHLY NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity = 2
)

// Enum value maps for NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity.
var (
	NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity_name = map[int32]string{
		0: "HOURLY",
		1: "DAILY",
		2: "MONTHLY",
	}
	NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity_value = map[string]int32{
		"HOURLY":  0,
		"DAILY":   1,
		"MONTHLY": 2,
	}
)

func (x NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity) Enum() *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity {
	p := new(NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity)
	*p = x
	return p
}

func (x NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity) Descriptor() protoreflect.EnumDescriptor {
	return file_NonMarketEntityDTO_proto_enumTypes[3].Descriptor()
}

func (NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity) Type() protoreflect.EnumType {
	return &file_NonMarketEntityDTO_proto_enumTypes[3]
}

func (x NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity(num)
	return nil
}

// Deprecated: Use NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity.Descriptor instead.
func (NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity) EnumDescriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

// The NonMarketEntityDTO message represents an Entity discovered in the target that your probe is
// monitoring and this entity does not participate in the market.
//
// Each entity must have a unique ID to identify it in the Operations Manager repository.
// Many targets provide unique IDs for their entities, or you can generate your own.
// To guarantee that it's unique, you can give the ID a prefix that identifies your
// probe and the given target.
//
// Specify entity type by setting a 'NonMarketEntityType' value to the 'entityType' field.
//
// The 'displayName' value appears in the product GUI and in reports to identify the entity.
//
type NonMarketEntityDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityType  *NonMarketEntityDTO_NonMarketEntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.NonMarketEntityDTO_NonMarketEntityType" json:"entityType,omitempty"`
	Id          *string                                 `protobuf:"bytes,2,req,name=id" json:"id,omitempty"` // e.g. UUID
	DisplayName *string                                 `protobuf:"bytes,3,opt,name=displayName" json:"displayName,omitempty"`
	Description *string                                 `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	// Notifications associated with the entity
	Notification []*NotificationDTO `protobuf:"bytes,5,rep,name=notification" json:"notification,omitempty"`
	// list of <string, string, string> namespace, key, value triplets
	EntityProperties []*EntityDTO_EntityProperty `protobuf:"bytes,6,rep,name=entityProperties" json:"entityProperties,omitempty"`
	// Collection of entity type's specific data.
	//
	// Types that are assignable to EntityData:
	//	*NonMarketEntityDTO_CloudServiceData_
	//	*NonMarketEntityDTO_PlanDestinationData_
	//	*NonMarketEntityDTO_CloudCommitmentData_
	EntityData isNonMarketEntityDTO_EntityData `protobuf_oneof:"entity_data"`
}

func (x *NonMarketEntityDTO) Reset() {
	*x = NonMarketEntityDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO) ProtoMessage() {}

func (x *NonMarketEntityDTO) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0}
}

func (x *NonMarketEntityDTO) GetEntityType() NonMarketEntityDTO_NonMarketEntityType {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return NonMarketEntityDTO_CLOUD_SERVICE
}

func (x *NonMarketEntityDTO) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *NonMarketEntityDTO) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *NonMarketEntityDTO) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *NonMarketEntityDTO) GetNotification() []*NotificationDTO {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *NonMarketEntityDTO) GetEntityProperties() []*EntityDTO_EntityProperty {
	if x != nil {
		return x.EntityProperties
	}
	return nil
}

func (m *NonMarketEntityDTO) GetEntityData() isNonMarketEntityDTO_EntityData {
	if m != nil {
		return m.EntityData
	}
	return nil
}

func (x *NonMarketEntityDTO) GetCloudServiceData() *NonMarketEntityDTO_CloudServiceData {
	if x, ok := x.GetEntityData().(*NonMarketEntityDTO_CloudServiceData_); ok {
		return x.CloudServiceData
	}
	return nil
}

func (x *NonMarketEntityDTO) GetPlanDestinationData() *NonMarketEntityDTO_PlanDestinationData {
	if x, ok := x.GetEntityData().(*NonMarketEntityDTO_PlanDestinationData_); ok {
		return x.PlanDestinationData
	}
	return nil
}

func (x *NonMarketEntityDTO) GetCloudCommitmentData() *NonMarketEntityDTO_CloudCommitmentData {
	if x, ok := x.GetEntityData().(*NonMarketEntityDTO_CloudCommitmentData_); ok {
		return x.CloudCommitmentData
	}
	return nil
}

type isNonMarketEntityDTO_EntityData interface {
	isNonMarketEntityDTO_EntityData()
}

type NonMarketEntityDTO_CloudServiceData_ struct {
	CloudServiceData *NonMarketEntityDTO_CloudServiceData `protobuf:"bytes,500,opt,name=cloud_service_data,json=cloudServiceData,oneof"`
}

type NonMarketEntityDTO_PlanDestinationData_ struct {
	// formerly WorkflowData workflow_data = 501; - reserved below
	PlanDestinationData *NonMarketEntityDTO_PlanDestinationData `protobuf:"bytes,502,opt,name=plan_destination_data,json=planDestinationData,oneof"`
}

type NonMarketEntityDTO_CloudCommitmentData_ struct {
	CloudCommitmentData *NonMarketEntityDTO_CloudCommitmentData `protobuf:"bytes,503,opt,name=cloud_commitment_data,json=cloudCommitmentData,oneof"`
}

func (*NonMarketEntityDTO_CloudServiceData_) isNonMarketEntityDTO_EntityData() {}

func (*NonMarketEntityDTO_PlanDestinationData_) isNonMarketEntityDTO_EntityData() {}

func (*NonMarketEntityDTO_CloudCommitmentData_) isNonMarketEntityDTO_EntityData() {}

// Generic cost data struct used for sending cost/spend from probe to the platform.
type CostDataDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID of the entity (Account/CloudService) or profile (VMTemplate/DBTemplate)
	Id *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	// Whether the cost applies to an entity (default), or a profile.
	AppliesProfile *bool `protobuf:"varint,2,req,name=applies_profile,json=appliesProfile" json:"applies_profile,omitempty"`
	// Type of the cost data entity or the entity that the profile applies to.
	EntityType *EntityDTO_EntityType `protobuf:"varint,3,req,name=entity_type,json=entityType,enum=common_dto.EntityDTO_EntityType" json:"entity_type,omitempty"`
	// Business account id
	AccountId *string `protobuf:"bytes,4,req,name=account_id,json=accountId" json:"account_id,omitempty"`
	// Cost of the associated entity (e.g template/VM etc.)
	// If representing spend (top-down), then how much was spent for this account/service/template,
	// parsed from the bill.
	Cost *float32 `protobuf:"fixed32,5,req,name=cost" json:"cost,omitempty"`
	// The date for which the spent captured in this costDTO is relevant
	// for example a 'Backup' service that was used for a specific date in the cloud
	UsageDate *int64 `protobuf:"varint,6,opt,name=usage_date,json=usageDate" json:"usage_date,omitempty"`
}

func (x *CostDataDTO) Reset() {
	*x = CostDataDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CostDataDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CostDataDTO) ProtoMessage() {}

func (x *CostDataDTO) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CostDataDTO.ProtoReflect.Descriptor instead.
func (*CostDataDTO) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{1}
}

func (x *CostDataDTO) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *CostDataDTO) GetAppliesProfile() bool {
	if x != nil && x.AppliesProfile != nil {
		return *x.AppliesProfile
	}
	return false
}

func (x *CostDataDTO) GetEntityType() EntityDTO_EntityType {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return EntityDTO_SWITCH
}

func (x *CostDataDTO) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *CostDataDTO) GetCost() float32 {
	if x != nil && x.Cost != nil {
		return *x.Cost
	}
	return 0
}

func (x *CostDataDTO) GetUsageDate() int64 {
	if x != nil && x.UsageDate != nil {
		return *x.UsageDate
	}
	return 0
}

type NonMarketEntityDTO_CloudServiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudProvider *string                                          `protobuf:"bytes,1,req,name=cloud_provider,json=cloudProvider" json:"cloud_provider,omitempty"`
	BillingData   *NonMarketEntityDTO_CloudServiceData_BillingData `protobuf:"bytes,3,opt,name=billing_data,json=billingData" json:"billing_data,omitempty"`
	AccountId     *string                                          `protobuf:"bytes,4,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	PriceModels   []NonMarketEntityDTO_CloudServiceData_PriceModel `protobuf:"varint,5,rep,name=price_models,json=priceModels,enum=common_dto.NonMarketEntityDTO_CloudServiceData_PriceModel" json:"price_models,omitempty"`
}

func (x *NonMarketEntityDTO_CloudServiceData) Reset() {
	*x = NonMarketEntityDTO_CloudServiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO_CloudServiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO_CloudServiceData) ProtoMessage() {}

func (x *NonMarketEntityDTO_CloudServiceData) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO_CloudServiceData.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO_CloudServiceData) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 0}
}

func (x *NonMarketEntityDTO_CloudServiceData) GetCloudProvider() string {
	if x != nil && x.CloudProvider != nil {
		return *x.CloudProvider
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudServiceData) GetBillingData() *NonMarketEntityDTO_CloudServiceData_BillingData {
	if x != nil {
		return x.BillingData
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudServiceData) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudServiceData) GetPriceModels() []NonMarketEntityDTO_CloudServiceData_PriceModel {
	if x != nil {
		return x.PriceModels
	}
	return nil
}

type NonMarketEntityDTO_PlanDestinationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set to true if Plan destination has exported data to Azure Migrate Project.
	HasExportedData *bool `protobuf:"varint,1,req,name=has_exported_data,json=hasExportedData" json:"has_exported_data,omitempty"`
}

func (x *NonMarketEntityDTO_PlanDestinationData) Reset() {
	*x = NonMarketEntityDTO_PlanDestinationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO_PlanDestinationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO_PlanDestinationData) ProtoMessage() {}

func (x *NonMarketEntityDTO_PlanDestinationData) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO_PlanDestinationData.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO_PlanDestinationData) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 1}
}

func (x *NonMarketEntityDTO_PlanDestinationData) GetHasExportedData() bool {
	if x != nil && x.HasExportedData != nil {
		return *x.HasExportedData
	}
	return false
}

// container for info related to cloud commitments.
type NonMarketEntityDTO_CloudCommitmentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UtilizationData []*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket `protobuf:"bytes,1,rep,name=utilization_data,json=utilizationData" json:"utilization_data,omitempty"`
	CoverageData    []*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket `protobuf:"bytes,2,rep,name=coverage_data,json=coverageData" json:"coverage_data,omitempty"`
}

func (x *NonMarketEntityDTO_CloudCommitmentData) Reset() {
	*x = NonMarketEntityDTO_CloudCommitmentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO_CloudCommitmentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO_CloudCommitmentData) ProtoMessage() {}

func (x *NonMarketEntityDTO_CloudCommitmentData) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO_CloudCommitmentData.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO_CloudCommitmentData) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 2}
}

func (x *NonMarketEntityDTO_CloudCommitmentData) GetUtilizationData() []*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket {
	if x != nil {
		return x.UtilizationData
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudCommitmentData) GetCoverageData() []*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket {
	if x != nil {
		return x.CoverageData
	}
	return nil
}

type NonMarketEntityDTO_CloudServiceData_BillingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VirtualMachines   []*EntityDTO `protobuf:"bytes,1,rep,name=virtual_machines,json=virtualMachines" json:"virtual_machines,omitempty"`
	ReservedInstances []*EntityDTO `protobuf:"bytes,2,rep,name=reserved_instances,json=reservedInstances" json:"reserved_instances,omitempty"`
	// Unique identifier for billing data. (Deprecated as it is not used in XL)
	//
	// Deprecated: Do not use.
	BillingDataUuid *string `protobuf:"bytes,3,opt,name=billingDataUuid" json:"billingDataUuid,omitempty"`
	// (Deprecated as it is not used in XL)
	//
	// Deprecated: Do not use.
	Type *NonMarketEntityDTO_CloudServiceData_BillingData_Type `protobuf:"varint,4,opt,name=type,enum=common_dto.NonMarketEntityDTO_CloudServiceData_BillingData_Type,def=0" json:"type,omitempty"`
	// Optionally set for Proxy Type BillingData. Represents the target id which is the
	// source of Entities whose BillingData is being fetched by the discovering probe. (Deprecated as it is not
	// used in XL)
	//
	// Deprecated: Do not use.
	MainTargetId *string `protobuf:"bytes,5,opt,name=mainTargetId" json:"mainTargetId,omitempty"`
	// the start date for the billing window
	BillingWindowStart *int64 `protobuf:"varint,6,opt,name=billing_window_start,json=billingWindowStart" json:"billing_window_start,omitempty"`
	BillingWindowEnd   *int64 `protobuf:"varint,7,opt,name=billing_window_end,json=billingWindowEnd" json:"billing_window_end,omitempty"`
}

// Default values for NonMarketEntityDTO_CloudServiceData_BillingData fields.
const (
	Default_NonMarketEntityDTO_CloudServiceData_BillingData_Type = NonMarketEntityDTO_CloudServiceData_BillingData_DEFAULT
)

func (x *NonMarketEntityDTO_CloudServiceData_BillingData) Reset() {
	*x = NonMarketEntityDTO_CloudServiceData_BillingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO_CloudServiceData_BillingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO_CloudServiceData_BillingData) ProtoMessage() {}

func (x *NonMarketEntityDTO_CloudServiceData_BillingData) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO_CloudServiceData_BillingData.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO_CloudServiceData_BillingData) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *NonMarketEntityDTO_CloudServiceData_BillingData) GetVirtualMachines() []*EntityDTO {
	if x != nil {
		return x.VirtualMachines
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudServiceData_BillingData) GetReservedInstances() []*EntityDTO {
	if x != nil {
		return x.ReservedInstances
	}
	return nil
}

// Deprecated: Do not use.
func (x *NonMarketEntityDTO_CloudServiceData_BillingData) GetBillingDataUuid() string {
	if x != nil && x.BillingDataUuid != nil {
		return *x.BillingDataUuid
	}
	return ""
}

// Deprecated: Do not use.
func (x *NonMarketEntityDTO_CloudServiceData_BillingData) GetType() NonMarketEntityDTO_CloudServiceData_BillingData_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_NonMarketEntityDTO_CloudServiceData_BillingData_Type
}

// Deprecated: Do not use.
func (x *NonMarketEntityDTO_CloudServiceData_BillingData) GetMainTargetId() string {
	if x != nil && x.MainTargetId != nil {
		return *x.MainTargetId
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudServiceData_BillingData) GetBillingWindowStart() int64 {
	if x != nil && x.BillingWindowStart != nil {
		return *x.BillingWindowStart
	}
	return 0
}

func (x *NonMarketEntityDTO_CloudServiceData_BillingData) GetBillingWindowEnd() int64 {
	if x != nil && x.BillingWindowEnd != nil {
		return *x.BillingWindowEnd
	}
	return 0
}

// container for coverage ***OR*** utilization data points from a particular time
type NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimestampMillis *int64                                                                                       `protobuf:"varint,1,opt,name=timestamp_millis,json=timestampMillis" json:"timestamp_millis,omitempty"`
	Samples         []*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint `protobuf:"bytes,2,rep,name=samples" json:"samples,omitempty"`
	Granularity     *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity                `protobuf:"varint,6,opt,name=granularity,enum=common_dto.NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity" json:"granularity,omitempty"`
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) Reset() {
	*x = NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) ProtoMessage() {}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 2, 0}
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) GetTimestampMillis() int64 {
	if x != nil && x.TimestampMillis != nil {
		return *x.TimestampMillis
	}
	return 0
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) GetSamples() []*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint {
	if x != nil {
		return x.Samples
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket) GetGranularity() NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity {
	if x != nil && x.Granularity != nil {
		return *x.Granularity
	}
	return NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_HOURLY
}

// one sample of cloud commitment coverage ***OR*** utilization data
type NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommitmentId *string `protobuf:"bytes,1,opt,name=commitment_id,json=commitmentId" json:"commitment_id,omitempty"`
	// entity to which the commitment applies
	EntityId *string `protobuf:"bytes,2,opt,name=entity_id,json=entityId" json:"entity_id,omitempty"`
	// service to which the commitment applies
	Service *string `protobuf:"bytes,3,opt,name=service" json:"service,omitempty"`
	// region to which the commitment applies
	Region *string `protobuf:"bytes,4,opt,name=region" json:"region,omitempty"`
	// must be populated or else this object has no meaning at all. both fields must
	// use the same unit(coupons or CurrencyAmount).
	Used     *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount `protobuf:"bytes,5,opt,name=used" json:"used,omitempty"`
	Capacity *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount `protobuf:"bytes,6,opt,name=capacity" json:"capacity,omitempty"`
	// The service provider id of the Cloud Commitment
	ServiceProviderId *string `protobuf:"bytes,7,opt,name=serviceProviderId" json:"serviceProviderId,omitempty"`
	// The account id which purchased the cloud commitment
	AccountId *string `protobuf:"bytes,8,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) Reset() {
	*x = NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) ProtoMessage() {
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 2, 0, 0}
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetCommitmentId() string {
	if x != nil && x.CommitmentId != nil {
		return *x.CommitmentId
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetEntityId() string {
	if x != nil && x.EntityId != nil {
		return *x.EntityId
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetService() string {
	if x != nil && x.Service != nil {
		return *x.Service
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetRegion() string {
	if x != nil && x.Region != nil {
		return *x.Region
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetUsed() *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount {
	if x != nil {
		return x.Used
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetCapacity() *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount {
	if x != nil {
		return x.Capacity
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetServiceProviderId() string {
	if x != nil && x.ServiceProviderId != nil {
		return *x.ServiceProviderId
	}
	return ""
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint) GetAccountId() string {
	if x != nil && x.AccountId != nil {
		return *x.AccountId
	}
	return ""
}

// a quantity of coupons or money
type NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//	*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Amount
	//	*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Coupons
	Value isNonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Value `protobuf_oneof:"value"`
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) Reset() {
	*x = NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_NonMarketEntityDTO_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) ProtoMessage() {
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) ProtoReflect() protoreflect.Message {
	mi := &file_NonMarketEntityDTO_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount.ProtoReflect.Descriptor instead.
func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) Descriptor() ([]byte, []int) {
	return file_NonMarketEntityDTO_proto_rawDescGZIP(), []int{0, 2, 0, 0, 0}
}

func (m *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) GetValue() isNonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) GetAmount() *CurrencyAmount {
	if x, ok := x.GetValue().(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Amount); ok {
		return x.Amount
	}
	return nil
}

func (x *NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount) GetCoupons() float32 {
	if x, ok := x.GetValue().(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Coupons); ok {
		return x.Coupons
	}
	return 0
}

type isNonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Value interface {
	isNonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Value()
}

type NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Amount struct {
	Amount *CurrencyAmount `protobuf:"bytes,1,opt,name=amount,oneof"`
}

type NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Coupons struct {
	Coupons float32 `protobuf:"fixed32,2,opt,name=coupons,oneof"`
}

func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Amount) isNonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Value() {
}

func (*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Coupons) isNonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Value() {
}

var File_NonMarketEntityDTO_proto protoreflect.FileDescriptor

var file_NonMarketEntityDTO_proto_rawDesc = []byte{
	0x0a, 0x18, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x54, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x1a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x54,
	0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x6f, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x17, 0x0a, 0x12, 0x4e, 0x6f,
	0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f,
	0x12, 0x52, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x54, 0x4f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x52, 0x0c, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x10, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x10, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x12, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x69, 0x0a,
	0x15, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0xf6, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x13, 0x70, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x69, 0x0a, 0x15, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0xf7, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x13,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0xac, 0x06, 0x0a, 0x10, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x5e, 0x0a, 0x0c, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64,
	0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0b, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x5d,
	0x0a, 0x0c, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x3a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74,
	0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x1a, 0xdd, 0x03,
	0x0a, 0x0b, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a,
	0x10, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x52, 0x0f,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x73, 0x12,
	0x44, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44,
	0x54, 0x4f, 0x52, 0x11, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x0f, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x55,
	0x75, 0x69, 0x64, 0x12, 0x61, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x40, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54,
	0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x3a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01,
	0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30,
	0x0a, 0x14, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x2c, 0x0a, 0x12, 0x62, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x62, 0x69,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x45, 0x6e, 0x64, 0x22, 0x2d,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c,
	0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x10, 0x01, 0x12, 0x0d,
	0x0a, 0x09, 0x53, 0x54, 0x49, 0x54, 0x43, 0x48, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x22, 0x33, 0x0a,
	0x0a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0d, 0x0a, 0x09, 0x4f,
	0x4e, 0x5f, 0x44, 0x45, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x50, 0x4f, 0x54,
	0x10, 0x02, 0x1a, 0x41, 0x0a, 0x13, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73,
	0x5f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xf8, 0x09, 0x0a, 0x13, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x77, 0x0a,
	0x10, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x71, 0x0a, 0x0d, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x4c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0c, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0xf4, 0x07, 0x0a, 0x19, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x5f, 0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x12, 0x7f, 0x0a, 0x07, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f,
	0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d,
	0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x73, 0x12, 0x7a, 0x0a, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x58, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x52, 0x0b, 0x67, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x1a,
	0xfb, 0x04, 0x0a, 0x18, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x12, 0x8f, 0x01, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x7b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e,
	0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x64, 0x12, 0x97, 0x01, 0x0a, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x7b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64,
	0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x08, 0x63, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x11,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x1a, 0x72, 0x0a, 0x15, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x31, 0x0a,
	0x0b, 0x47, 0x72, 0x61, 0x6e, 0x75, 0x6c, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06,
	0x48, 0x4f, 0x55, 0x52, 0x4c, 0x59, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x41, 0x49, 0x4c,
	0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x4c, 0x59, 0x10, 0x02,
	0x22, 0x71, 0x0a, 0x13, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x4f, 0x55, 0x44,
	0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4c, 0x41, 0x4e, 0x5f,
	0x44, 0x45, 0x53, 0x54, 0x49, 0x4e, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x04, 0x22, 0x04, 0x08, 0x01, 0x10, 0x01, 0x2a, 0x08, 0x57, 0x4f, 0x52, 0x4b, 0x46,
	0x4c, 0x4f, 0x57, 0x42, 0x0d, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x4a, 0x06, 0x08, 0xf5, 0x03, 0x10, 0xf6, 0x03, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x0b, 0x43, 0x6f,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x54, 0x4f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x08, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x02,
	0x28, 0x02, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x73,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x65, 0x42, 0x5d, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x76,
	0x6d, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x74, 0x6f, 0x42, 0x0c, 0x4e, 0x6f, 0x6e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x44, 0x54, 0x4f, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x2f,
	0x74, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_NonMarketEntityDTO_proto_rawDescOnce sync.Once
	file_NonMarketEntityDTO_proto_rawDescData = file_NonMarketEntityDTO_proto_rawDesc
)

func file_NonMarketEntityDTO_proto_rawDescGZIP() []byte {
	file_NonMarketEntityDTO_proto_rawDescOnce.Do(func() {
		file_NonMarketEntityDTO_proto_rawDescData = protoimpl.X.CompressGZIP(file_NonMarketEntityDTO_proto_rawDescData)
	})
	return file_NonMarketEntityDTO_proto_rawDescData
}

var file_NonMarketEntityDTO_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_NonMarketEntityDTO_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_NonMarketEntityDTO_proto_goTypes = []interface{}{
	(NonMarketEntityDTO_NonMarketEntityType)(0),                                                                             // 0: common_dto.NonMarketEntityDTO.NonMarketEntityType
	(NonMarketEntityDTO_CloudServiceData_PriceModel)(0),                                                                     // 1: common_dto.NonMarketEntityDTO.CloudServiceData.PriceModel
	(NonMarketEntityDTO_CloudServiceData_BillingData_Type)(0),                                                               // 2: common_dto.NonMarketEntityDTO.CloudServiceData.BillingData.Type
	(NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_Granularity)(0),                                       // 3: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.Granularity
	(*NonMarketEntityDTO)(nil),                                                                                              // 4: common_dto.NonMarketEntityDTO
	(*CostDataDTO)(nil),                                                                                                     // 5: common_dto.CostDataDTO
	(*NonMarketEntityDTO_CloudServiceData)(nil),                                                                             // 6: common_dto.NonMarketEntityDTO.CloudServiceData
	(*NonMarketEntityDTO_PlanDestinationData)(nil),                                                                          // 7: common_dto.NonMarketEntityDTO.PlanDestinationData
	(*NonMarketEntityDTO_CloudCommitmentData)(nil),                                                                          // 8: common_dto.NonMarketEntityDTO.CloudCommitmentData
	(*NonMarketEntityDTO_CloudServiceData_BillingData)(nil),                                                                 // 9: common_dto.NonMarketEntityDTO.CloudServiceData.BillingData
	(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket)(nil),                                                // 10: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket
	(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint)(nil),                       // 11: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint
	(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount)(nil), // 12: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint.CloudCommitmentAmount
	(*NotificationDTO)(nil),                                                                                                 // 13: common_dto.NotificationDTO
	(*EntityDTO_EntityProperty)(nil),                                                                                        // 14: common_dto.EntityDTO.EntityProperty
	(EntityDTO_EntityType)(0),                                                                                               // 15: common_dto.EntityDTO.EntityType
	(*EntityDTO)(nil),                                                                                                       // 16: common_dto.EntityDTO
	(*CurrencyAmount)(nil),                                                                                                  // 17: common_dto.CurrencyAmount
}
var file_NonMarketEntityDTO_proto_depIdxs = []int32{
	0,  // 0: common_dto.NonMarketEntityDTO.entityType:type_name -> common_dto.NonMarketEntityDTO.NonMarketEntityType
	13, // 1: common_dto.NonMarketEntityDTO.notification:type_name -> common_dto.NotificationDTO
	14, // 2: common_dto.NonMarketEntityDTO.entityProperties:type_name -> common_dto.EntityDTO.EntityProperty
	6,  // 3: common_dto.NonMarketEntityDTO.cloud_service_data:type_name -> common_dto.NonMarketEntityDTO.CloudServiceData
	7,  // 4: common_dto.NonMarketEntityDTO.plan_destination_data:type_name -> common_dto.NonMarketEntityDTO.PlanDestinationData
	8,  // 5: common_dto.NonMarketEntityDTO.cloud_commitment_data:type_name -> common_dto.NonMarketEntityDTO.CloudCommitmentData
	15, // 6: common_dto.CostDataDTO.entity_type:type_name -> common_dto.EntityDTO.EntityType
	9,  // 7: common_dto.NonMarketEntityDTO.CloudServiceData.billing_data:type_name -> common_dto.NonMarketEntityDTO.CloudServiceData.BillingData
	1,  // 8: common_dto.NonMarketEntityDTO.CloudServiceData.price_models:type_name -> common_dto.NonMarketEntityDTO.CloudServiceData.PriceModel
	10, // 9: common_dto.NonMarketEntityDTO.CloudCommitmentData.utilization_data:type_name -> common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket
	10, // 10: common_dto.NonMarketEntityDTO.CloudCommitmentData.coverage_data:type_name -> common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket
	16, // 11: common_dto.NonMarketEntityDTO.CloudServiceData.BillingData.virtual_machines:type_name -> common_dto.EntityDTO
	16, // 12: common_dto.NonMarketEntityDTO.CloudServiceData.BillingData.reserved_instances:type_name -> common_dto.EntityDTO
	2,  // 13: common_dto.NonMarketEntityDTO.CloudServiceData.BillingData.type:type_name -> common_dto.NonMarketEntityDTO.CloudServiceData.BillingData.Type
	11, // 14: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.samples:type_name -> common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint
	3,  // 15: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.granularity:type_name -> common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.Granularity
	12, // 16: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint.used:type_name -> common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint.CloudCommitmentAmount
	12, // 17: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint.capacity:type_name -> common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint.CloudCommitmentAmount
	17, // 18: common_dto.NonMarketEntityDTO.CloudCommitmentData.CloudCommitmentDataBucket.CloudCommitmentDataPoint.CloudCommitmentAmount.amount:type_name -> common_dto.CurrencyAmount
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_NonMarketEntityDTO_proto_init() }
func file_NonMarketEntityDTO_proto_init() {
	if File_NonMarketEntityDTO_proto != nil {
		return
	}
	file_CommonDTO_proto_init()
	file_CommonCost_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_NonMarketEntityDTO_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CostDataDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO_CloudServiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO_PlanDestinationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO_CloudCommitmentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO_CloudServiceData_BillingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_NonMarketEntityDTO_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_NonMarketEntityDTO_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*NonMarketEntityDTO_CloudServiceData_)(nil),
		(*NonMarketEntityDTO_PlanDestinationData_)(nil),
		(*NonMarketEntityDTO_CloudCommitmentData_)(nil),
	}
	file_NonMarketEntityDTO_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Amount)(nil),
		(*NonMarketEntityDTO_CloudCommitmentData_CloudCommitmentDataBucket_CloudCommitmentDataPoint_CloudCommitmentAmount_Coupons)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_NonMarketEntityDTO_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_NonMarketEntityDTO_proto_goTypes,
		DependencyIndexes: file_NonMarketEntityDTO_proto_depIdxs,
		EnumInfos:         file_NonMarketEntityDTO_proto_enumTypes,
		MessageInfos:      file_NonMarketEntityDTO_proto_msgTypes,
	}.Build()
	File_NonMarketEntityDTO_proto = out.File
	file_NonMarketEntityDTO_proto_rawDesc = nil
	file_NonMarketEntityDTO_proto_goTypes = nil
	file_NonMarketEntityDTO_proto_depIdxs = nil
}
