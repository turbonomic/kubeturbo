// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ActionExecution.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActionResponseState int32

const (
	ActionResponseState_PENDING_ACCEPT ActionResponseState = 0
	ActionResponseState_ACCEPTED       ActionResponseState = 1
	ActionResponseState_REJECTED       ActionResponseState = 2
	ActionResponseState_IN_PROGRESS    ActionResponseState = 3
	ActionResponseState_SUCCEEDED      ActionResponseState = 4
	ActionResponseState_FAILED         ActionResponseState = 5
	ActionResponseState_RECOMMENDED    ActionResponseState = 6
	ActionResponseState_DISABLED       ActionResponseState = 7
	ActionResponseState_QUEUED         ActionResponseState = 8
	ActionResponseState_CLEARED        ActionResponseState = 9
	ActionResponseState_FAILING        ActionResponseState = 10
)

var ActionResponseState_name = map[int32]string{
	0:  "PENDING_ACCEPT",
	1:  "ACCEPTED",
	2:  "REJECTED",
	3:  "IN_PROGRESS",
	4:  "SUCCEEDED",
	5:  "FAILED",
	6:  "RECOMMENDED",
	7:  "DISABLED",
	8:  "QUEUED",
	9:  "CLEARED",
	10: "FAILING",
}

var ActionResponseState_value = map[string]int32{
	"PENDING_ACCEPT": 0,
	"ACCEPTED":       1,
	"REJECTED":       2,
	"IN_PROGRESS":    3,
	"SUCCEEDED":      4,
	"FAILED":         5,
	"RECOMMENDED":    6,
	"DISABLED":       7,
	"QUEUED":         8,
	"CLEARED":        9,
	"FAILING":        10,
}

func (x ActionResponseState) Enum() *ActionResponseState {
	p := new(ActionResponseState)
	*p = x
	return p
}

func (x ActionResponseState) String() string {
	return proto.EnumName(ActionResponseState_name, int32(x))
}

func (x *ActionResponseState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionResponseState_value, data, "ActionResponseState")
	if err != nil {
		return err
	}
	*x = ActionResponseState(value)
	return nil
}

func (ActionResponseState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0}
}

// Defines how action can be executed by the probe
type ActionPolicyDTO_ActionCapability int32

const (
	// The action does not make sense for the probe. Actions of this type should not be shown
	// to the user.
	ActionPolicyDTO_NOT_SUPPORTED ActionPolicyDTO_ActionCapability = 1
	// The probe does not support executing the action, but it may still make sense to display
	// actions of this type to the user. For example, VSTORAGE resize is not supported in VCenter,
	// but many users still wish to see actions of this type.
	ActionPolicyDTO_NOT_EXECUTABLE ActionPolicyDTO_ActionCapability = 2
	// The probe supports execution of the action. Actions of this type are displayed to the user.
	ActionPolicyDTO_SUPPORTED ActionPolicyDTO_ActionCapability = 3
)

var ActionPolicyDTO_ActionCapability_name = map[int32]string{
	1: "NOT_SUPPORTED",
	2: "NOT_EXECUTABLE",
	3: "SUPPORTED",
}

var ActionPolicyDTO_ActionCapability_value = map[string]int32{
	"NOT_SUPPORTED":  1,
	"NOT_EXECUTABLE": 2,
	"SUPPORTED":      3,
}

func (x ActionPolicyDTO_ActionCapability) Enum() *ActionPolicyDTO_ActionCapability {
	p := new(ActionPolicyDTO_ActionCapability)
	*p = x
	return p
}

func (x ActionPolicyDTO_ActionCapability) String() string {
	return proto.EnumName(ActionPolicyDTO_ActionCapability_name, int32(x))
}

func (x *ActionPolicyDTO_ActionCapability) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionPolicyDTO_ActionCapability_value, data, "ActionPolicyDTO_ActionCapability")
	if err != nil {
		return err
	}
	*x = ActionPolicyDTO_ActionCapability(value)
	return nil
}

func (ActionPolicyDTO_ActionCapability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0, 0}
}

type ActionItemDTO_ActionType int32

const (
	ActionItemDTO_NONE              ActionItemDTO_ActionType = 0
	ActionItemDTO_START             ActionItemDTO_ActionType = 1
	ActionItemDTO_MOVE              ActionItemDTO_ActionType = 2
	ActionItemDTO_SUSPEND           ActionItemDTO_ActionType = 3
	ActionItemDTO_TERMINATE         ActionItemDTO_ActionType = 4
	ActionItemDTO_ADD_PROVIDER      ActionItemDTO_ActionType = 6
	ActionItemDTO_CHANGE            ActionItemDTO_ActionType = 7
	ActionItemDTO_PROVISION         ActionItemDTO_ActionType = 9
	ActionItemDTO_RECONFIGURE       ActionItemDTO_ActionType = 10
	ActionItemDTO_RESIZE            ActionItemDTO_ActionType = 11
	ActionItemDTO_RESIZE_CAPACITY   ActionItemDTO_ActionType = 12
	ActionItemDTO_DELETE            ActionItemDTO_ActionType = 15
	ActionItemDTO_RIGHT_SIZE        ActionItemDTO_ActionType = 16
	ActionItemDTO_CROSS_TARGET_MOVE ActionItemDTO_ActionType = 21
	ActionItemDTO_MOVE_TOGETHER     ActionItemDTO_ActionType = 22
	// Scale a workload. Currently this action type is used to represent Cloud Move actions
	// for workloads when they are moved from one template to another. Market doesn't generate
	// Scale actions but Action Orchestrator translates Cloud Moves to Scale actions. Cloud
	// Probes expect Scale type for moving VMs between compute tiers.
	ActionItemDTO_SCALE ActionItemDTO_ActionType = 24
)

var ActionItemDTO_ActionType_name = map[int32]string{
	0:  "NONE",
	1:  "START",
	2:  "MOVE",
	3:  "SUSPEND",
	4:  "TERMINATE",
	6:  "ADD_PROVIDER",
	7:  "CHANGE",
	9:  "PROVISION",
	10: "RECONFIGURE",
	11: "RESIZE",
	12: "RESIZE_CAPACITY",
	15: "DELETE",
	16: "RIGHT_SIZE",
	21: "CROSS_TARGET_MOVE",
	22: "MOVE_TOGETHER",
	24: "SCALE",
}

var ActionItemDTO_ActionType_value = map[string]int32{
	"NONE":              0,
	"START":             1,
	"MOVE":              2,
	"SUSPEND":           3,
	"TERMINATE":         4,
	"ADD_PROVIDER":      6,
	"CHANGE":            7,
	"PROVISION":         9,
	"RECONFIGURE":       10,
	"RESIZE":            11,
	"RESIZE_CAPACITY":   12,
	"DELETE":            15,
	"RIGHT_SIZE":        16,
	"CROSS_TARGET_MOVE": 21,
	"MOVE_TOGETHER":     22,
	"SCALE":             24,
}

func (x ActionItemDTO_ActionType) Enum() *ActionItemDTO_ActionType {
	p := new(ActionItemDTO_ActionType)
	*p = x
	return p
}

func (x ActionItemDTO_ActionType) String() string {
	return proto.EnumName(ActionItemDTO_ActionType_name, int32(x))
}

func (x *ActionItemDTO_ActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionItemDTO_ActionType_value, data, "ActionItemDTO_ActionType")
	if err != nil {
		return err
	}
	*x = ActionItemDTO_ActionType(value)
	return nil
}

func (ActionItemDTO_ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10, 0}
}

type ActionItemDTO_CommodityAttribute int32

const (
	ActionItemDTO_Capacity    ActionItemDTO_CommodityAttribute = 0
	ActionItemDTO_Limit       ActionItemDTO_CommodityAttribute = 1
	ActionItemDTO_Reservation ActionItemDTO_CommodityAttribute = 2
)

var ActionItemDTO_CommodityAttribute_name = map[int32]string{
	0: "Capacity",
	1: "Limit",
	2: "Reservation",
}

var ActionItemDTO_CommodityAttribute_value = map[string]int32{
	"Capacity":    0,
	"Limit":       1,
	"Reservation": 2,
}

func (x ActionItemDTO_CommodityAttribute) Enum() *ActionItemDTO_CommodityAttribute {
	p := new(ActionItemDTO_CommodityAttribute)
	*p = x
	return p
}

func (x ActionItemDTO_CommodityAttribute) String() string {
	return proto.EnumName(ActionItemDTO_CommodityAttribute_name, int32(x))
}

func (x *ActionItemDTO_CommodityAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionItemDTO_CommodityAttribute_value, data, "ActionItemDTO_CommodityAttribute")
	if err != nil {
		return err
	}
	*x = ActionItemDTO_CommodityAttribute(value)
	return nil
}

func (ActionItemDTO_CommodityAttribute) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10, 1}
}

// the category of risk
type ActionItemDTO_Risk_Category int32

const (
	ActionItemDTO_Risk_PERFORMANCE_ASSURANCE  ActionItemDTO_Risk_Category = 1
	ActionItemDTO_Risk_EFFICIENCY_IMPROVEMENT ActionItemDTO_Risk_Category = 2
	ActionItemDTO_Risk_PREVENTION             ActionItemDTO_Risk_Category = 3
	ActionItemDTO_Risk_COMPLIANCE             ActionItemDTO_Risk_Category = 4
)

var ActionItemDTO_Risk_Category_name = map[int32]string{
	1: "PERFORMANCE_ASSURANCE",
	2: "EFFICIENCY_IMPROVEMENT",
	3: "PREVENTION",
	4: "COMPLIANCE",
}

var ActionItemDTO_Risk_Category_value = map[string]int32{
	"PERFORMANCE_ASSURANCE":  1,
	"EFFICIENCY_IMPROVEMENT": 2,
	"PREVENTION":             3,
	"COMPLIANCE":             4,
}

func (x ActionItemDTO_Risk_Category) Enum() *ActionItemDTO_Risk_Category {
	p := new(ActionItemDTO_Risk_Category)
	*p = x
	return p
}

func (x ActionItemDTO_Risk_Category) String() string {
	return proto.EnumName(ActionItemDTO_Risk_Category_name, int32(x))
}

func (x *ActionItemDTO_Risk_Category) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionItemDTO_Risk_Category_value, data, "ActionItemDTO_Risk_Category")
	if err != nil {
		return err
	}
	*x = ActionItemDTO_Risk_Category(value)
	return nil
}

func (ActionItemDTO_Risk_Category) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10, 2, 0}
}

// the severity of risk
type ActionItemDTO_Risk_Severity int32

const (
	ActionItemDTO_Risk_UNKNOWN  ActionItemDTO_Risk_Severity = 0
	ActionItemDTO_Risk_NORMAL   ActionItemDTO_Risk_Severity = 1
	ActionItemDTO_Risk_MINOR    ActionItemDTO_Risk_Severity = 2
	ActionItemDTO_Risk_MAJOR    ActionItemDTO_Risk_Severity = 3
	ActionItemDTO_Risk_CRITICAL ActionItemDTO_Risk_Severity = 4
)

var ActionItemDTO_Risk_Severity_name = map[int32]string{
	0: "UNKNOWN",
	1: "NORMAL",
	2: "MINOR",
	3: "MAJOR",
	4: "CRITICAL",
}

var ActionItemDTO_Risk_Severity_value = map[string]int32{
	"UNKNOWN":  0,
	"NORMAL":   1,
	"MINOR":    2,
	"MAJOR":    3,
	"CRITICAL": 4,
}

func (x ActionItemDTO_Risk_Severity) Enum() *ActionItemDTO_Risk_Severity {
	p := new(ActionItemDTO_Risk_Severity)
	*p = x
	return p
}

func (x ActionItemDTO_Risk_Severity) String() string {
	return proto.EnumName(ActionItemDTO_Risk_Severity_name, int32(x))
}

func (x *ActionItemDTO_Risk_Severity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionItemDTO_Risk_Severity_value, data, "ActionItemDTO_Risk_Severity")
	if err != nil {
		return err
	}
	*x = ActionItemDTO_Risk_Severity(value)
	return nil
}

func (ActionItemDTO_Risk_Severity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10, 2, 1}
}

type Workflow_ActionScriptPhase int32

const (
	// Action has been generated by market, and action orchestration decided it does not need to
	// be filtered.
	Workflow_ON_GENERATION Workflow_ActionScriptPhase = 4
	// How an action should be approved.
	Workflow_APPROVAL Workflow_ActionScriptPhase = 5
	// PRE actions are performed prior to the primary action
	Workflow_PRE Workflow_ActionScriptPhase = 1
	// REPLACE actions are performed in place of the built-in action
	Workflow_REPLACE Workflow_ActionScriptPhase = 2
	// POST actions are performed after the primary action
	Workflow_POST Workflow_ActionScriptPhase = 3
	// When an action reaches SUCCEEDED or FAILED. For instance, auditing failed and succeeded
	// action in an external system. This is separate from POST because POST only deals with the
	// transition from a succeeded action.
	Workflow_AFTER_EXECUTION Workflow_ActionScriptPhase = 6
)

var Workflow_ActionScriptPhase_name = map[int32]string{
	4: "ON_GENERATION",
	5: "APPROVAL",
	1: "PRE",
	2: "REPLACE",
	3: "POST",
	6: "AFTER_EXECUTION",
}

var Workflow_ActionScriptPhase_value = map[string]int32{
	"ON_GENERATION":   4,
	"APPROVAL":        5,
	"PRE":             1,
	"REPLACE":         2,
	"POST":            3,
	"AFTER_EXECUTION": 6,
}

func (x Workflow_ActionScriptPhase) Enum() *Workflow_ActionScriptPhase {
	p := new(Workflow_ActionScriptPhase)
	*p = x
	return p
}

func (x Workflow_ActionScriptPhase) String() string {
	return proto.EnumName(Workflow_ActionScriptPhase_name, int32(x))
}

func (x *Workflow_ActionScriptPhase) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Workflow_ActionScriptPhase_value, data, "Workflow_ActionScriptPhase")
	if err != nil {
		return err
	}
	*x = Workflow_ActionScriptPhase(value)
	return nil
}

func (Workflow_ActionScriptPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{11, 0}
}

// ActionPolicyDTO defines action execution policy for an EntityType.
// Every EntityType can be associated with a list of actions and execution modes.
// E.g., 'Resize' action can be defined as 'Recommend' for Virtual Machines.
type ActionPolicyDTO struct {
	// Entity type which the policy is applied to
	EntityType *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// Action policy elements (for every supported action type)
	PolicyElement        []*ActionPolicyDTO_ActionPolicyElement `protobuf:"bytes,2,rep,name=policyElement" json:"policyElement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ActionPolicyDTO) Reset()         { *m = ActionPolicyDTO{} }
func (m *ActionPolicyDTO) String() string { return proto.CompactTextString(m) }
func (*ActionPolicyDTO) ProtoMessage()    {}
func (*ActionPolicyDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0}
}

func (m *ActionPolicyDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPolicyDTO.Unmarshal(m, b)
}
func (m *ActionPolicyDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPolicyDTO.Marshal(b, m, deterministic)
}
func (m *ActionPolicyDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPolicyDTO.Merge(m, src)
}
func (m *ActionPolicyDTO) XXX_Size() int {
	return xxx_messageInfo_ActionPolicyDTO.Size(m)
}
func (m *ActionPolicyDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPolicyDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPolicyDTO proto.InternalMessageInfo

func (m *ActionPolicyDTO) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *ActionPolicyDTO) GetPolicyElement() []*ActionPolicyDTO_ActionPolicyElement {
	if m != nil {
		return m.PolicyElement
	}
	return nil
}

// Policy applied to a particular action type
//
// If no value is sent for an EntityType/ActionCapability pair, the capability
// for that ActionCapability on that EntityType will be treated as NOT_EXECUTABLE.
//
// For example, if a probe sends a SUPPORTED value for VIRTUAL_MACHINE MOVE but no value
// for VIRTUAL_MACHINE SUSPEND, then VIRTUAL_MACHINE SUSPEND will be treated as NOT_EXECUTABLE.
type ActionPolicyDTO_ActionPolicyElement struct {
	// Action type
	ActionType *ActionItemDTO_ActionType `protobuf:"varint,1,req,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	// Action execution capability
	ActionCapability *ActionPolicyDTO_ActionCapability `protobuf:"varint,2,req,name=actionCapability,enum=common_dto.ActionPolicyDTO_ActionCapability" json:"actionCapability,omitempty"`
	// Action policy scope: either provider (Move/Scale type) or commodity (Resize/Scale type).
	// If no scope defined the policy is applied to all providers (Move/Scale) or commodities
	// (Resize/Scale). If probe defines 2 policies for the same action type so that one policy
	// has a scope and another one doesn't have it then the policy with a scope has higher
	// priority.
	//
	// Types that are valid to be assigned to Scope:
	//	*ActionPolicyDTO_ActionPolicyElement_ProviderScope_
	//	*ActionPolicyDTO_ActionPolicyElement_CommodityScope_
	Scope isActionPolicyDTO_ActionPolicyElement_Scope `protobuf_oneof:"scope"`
	// Defines if action is disruptive
	Disruptive *bool `protobuf:"varint,5,opt,name=disruptive,def=0" json:"disruptive,omitempty"`
	// Defines if action is reversible
	Reversible           *bool    `protobuf:"varint,6,opt,name=reversible,def=1" json:"reversible,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionPolicyDTO_ActionPolicyElement) Reset()         { *m = ActionPolicyDTO_ActionPolicyElement{} }
func (m *ActionPolicyDTO_ActionPolicyElement) String() string { return proto.CompactTextString(m) }
func (*ActionPolicyDTO_ActionPolicyElement) ProtoMessage()    {}
func (*ActionPolicyDTO_ActionPolicyElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0, 0}
}

func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Unmarshal(m, b)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Marshal(b, m, deterministic)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Merge(m, src)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Size() int {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Size(m)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement proto.InternalMessageInfo

const Default_ActionPolicyDTO_ActionPolicyElement_Disruptive bool = false
const Default_ActionPolicyDTO_ActionPolicyElement_Reversible bool = true

func (m *ActionPolicyDTO_ActionPolicyElement) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *ActionPolicyDTO_ActionPolicyElement) GetActionCapability() ActionPolicyDTO_ActionCapability {
	if m != nil && m.ActionCapability != nil {
		return *m.ActionCapability
	}
	return ActionPolicyDTO_NOT_SUPPORTED
}

type isActionPolicyDTO_ActionPolicyElement_Scope interface {
	isActionPolicyDTO_ActionPolicyElement_Scope()
}

type ActionPolicyDTO_ActionPolicyElement_ProviderScope_ struct {
	ProviderScope *ActionPolicyDTO_ActionPolicyElement_ProviderScope `protobuf:"bytes,3,opt,name=providerScope,oneof"`
}

type ActionPolicyDTO_ActionPolicyElement_CommodityScope_ struct {
	CommodityScope *ActionPolicyDTO_ActionPolicyElement_CommodityScope `protobuf:"bytes,4,opt,name=commodityScope,oneof"`
}

func (*ActionPolicyDTO_ActionPolicyElement_ProviderScope_) isActionPolicyDTO_ActionPolicyElement_Scope() {
}

func (*ActionPolicyDTO_ActionPolicyElement_CommodityScope_) isActionPolicyDTO_ActionPolicyElement_Scope() {
}

func (m *ActionPolicyDTO_ActionPolicyElement) GetScope() isActionPolicyDTO_ActionPolicyElement_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *ActionPolicyDTO_ActionPolicyElement) GetProviderScope() *ActionPolicyDTO_ActionPolicyElement_ProviderScope {
	if x, ok := m.GetScope().(*ActionPolicyDTO_ActionPolicyElement_ProviderScope_); ok {
		return x.ProviderScope
	}
	return nil
}

func (m *ActionPolicyDTO_ActionPolicyElement) GetCommodityScope() *ActionPolicyDTO_ActionPolicyElement_CommodityScope {
	if x, ok := m.GetScope().(*ActionPolicyDTO_ActionPolicyElement_CommodityScope_); ok {
		return x.CommodityScope
	}
	return nil
}

func (m *ActionPolicyDTO_ActionPolicyElement) GetDisruptive() bool {
	if m != nil && m.Disruptive != nil {
		return *m.Disruptive
	}
	return Default_ActionPolicyDTO_ActionPolicyElement_Disruptive
}

func (m *ActionPolicyDTO_ActionPolicyElement) GetReversible() bool {
	if m != nil && m.Reversible != nil {
		return *m.Reversible
	}
	return Default_ActionPolicyDTO_ActionPolicyElement_Reversible
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ActionPolicyDTO_ActionPolicyElement) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ActionPolicyDTO_ActionPolicyElement_ProviderScope_)(nil),
		(*ActionPolicyDTO_ActionPolicyElement_CommodityScope_)(nil),
	}
}

// Provider scope means that policy is applied to actions moving to certain providers.
// It is relevant to Move/Scale actions.
type ActionPolicyDTO_ActionPolicyElement_ProviderScope struct {
	ProviderType         *EntityDTO_EntityType `protobuf:"varint,1,req,name=providerType,enum=common_dto.EntityDTO_EntityType" json:"providerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) Reset() {
	*m = ActionPolicyDTO_ActionPolicyElement_ProviderScope{}
}
func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) String() string {
	return proto.CompactTextString(m)
}
func (*ActionPolicyDTO_ActionPolicyElement_ProviderScope) ProtoMessage() {}
func (*ActionPolicyDTO_ActionPolicyElement_ProviderScope) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0, 0, 0}
}

func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_ProviderScope.Unmarshal(m, b)
}
func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_ProviderScope.Marshal(b, m, deterministic)
}
func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_ProviderScope.Merge(m, src)
}
func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) XXX_Size() int {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_ProviderScope.Size(m)
}
func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_ProviderScope.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_ProviderScope proto.InternalMessageInfo

func (m *ActionPolicyDTO_ActionPolicyElement_ProviderScope) GetProviderType() EntityDTO_EntityType {
	if m != nil && m.ProviderType != nil {
		return *m.ProviderType
	}
	return EntityDTO_SWITCH
}

// Commodity scope means that policy is applied to actions resizing certain commodities.
// It is relevant to Resize/Scale actions.
type ActionPolicyDTO_ActionPolicyElement_CommodityScope struct {
	CommodityType        *CommodityDTO_CommodityType `protobuf:"varint,1,req,name=commodityType,enum=common_dto.CommodityDTO_CommodityType" json:"commodityType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) Reset() {
	*m = ActionPolicyDTO_ActionPolicyElement_CommodityScope{}
}
func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) String() string {
	return proto.CompactTextString(m)
}
func (*ActionPolicyDTO_ActionPolicyElement_CommodityScope) ProtoMessage() {}
func (*ActionPolicyDTO_ActionPolicyElement_CommodityScope) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0, 0, 1}
}

func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_CommodityScope.Unmarshal(m, b)
}
func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_CommodityScope.Marshal(b, m, deterministic)
}
func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_CommodityScope.Merge(m, src)
}
func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) XXX_Size() int {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_CommodityScope.Size(m)
}
func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_CommodityScope.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement_CommodityScope proto.InternalMessageInfo

func (m *ActionPolicyDTO_ActionPolicyElement_CommodityScope) GetCommodityType() CommodityDTO_CommodityType {
	if m != nil && m.CommodityType != nil {
		return *m.CommodityType
	}
	return CommodityDTO_CLUSTER
}

// ActionMergePolicyDTO defines metadata for merging actions
// and identifying the execution target for an EntityType.
type ActionMergePolicyDTO struct {
	// Entity type to which the policy is applied to
	EntityType *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// List of connection metadata to get to the entity that will execute the merged actions.
	//
	// Entities of the same entity type from certain probes,such as the Terraform,
	// are connected to the different types of execution targets, either directly
	// or via a series of connections.
	// For example, a set of VMs are directly controlled by workload controller and
	// some VMs are associated with VM specs which are controlled by workload controllers.
	// VMs VM1, VM2, VM3 --> aggregated by -> VMSpecs VMS1 --> controlled by --> WorkloadController W1
	// VMs VM4, VM5, VM6 --> controlled by -->  WorkloadController W2
	// Having a list of execution target metadata allows specifying all the possible connections
	// of an entity to its action merge execution target.
	//
	// ActionMergeExecutionTarget list will be searched for in the order provided in this list
	// until one is found. If no ActionMergeExecutionTarget is found from the list
	// action merge will not be performed for the entity.
	ExecutionTargets []*ActionMergeExecutionTarget `protobuf:"bytes,2,rep,name=executionTargets" json:"executionTargets,omitempty"`
	// Metadata for merging actions
	//
	// Types that are valid to be assigned to ActionSpec:
	//	*ActionMergePolicyDTO_ResizeSpec
	//	*ActionMergePolicyDTO_ScaleSpec
	//	*ActionMergePolicyDTO_MoveSpec
	//	*ActionMergePolicyDTO_ProvisionSpec
	ActionSpec           isActionMergePolicyDTO_ActionSpec `protobuf_oneof:"actionSpec"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ActionMergePolicyDTO) Reset()         { *m = ActionMergePolicyDTO{} }
func (m *ActionMergePolicyDTO) String() string { return proto.CompactTextString(m) }
func (*ActionMergePolicyDTO) ProtoMessage()    {}
func (*ActionMergePolicyDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{1}
}

func (m *ActionMergePolicyDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionMergePolicyDTO.Unmarshal(m, b)
}
func (m *ActionMergePolicyDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionMergePolicyDTO.Marshal(b, m, deterministic)
}
func (m *ActionMergePolicyDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionMergePolicyDTO.Merge(m, src)
}
func (m *ActionMergePolicyDTO) XXX_Size() int {
	return xxx_messageInfo_ActionMergePolicyDTO.Size(m)
}
func (m *ActionMergePolicyDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionMergePolicyDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionMergePolicyDTO proto.InternalMessageInfo

func (m *ActionMergePolicyDTO) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *ActionMergePolicyDTO) GetExecutionTargets() []*ActionMergeExecutionTarget {
	if m != nil {
		return m.ExecutionTargets
	}
	return nil
}

type isActionMergePolicyDTO_ActionSpec interface {
	isActionMergePolicyDTO_ActionSpec()
}

type ActionMergePolicyDTO_ResizeSpec struct {
	ResizeSpec *ResizeMergeSpec `protobuf:"bytes,3,opt,name=resizeSpec,oneof"`
}

type ActionMergePolicyDTO_ScaleSpec struct {
	ScaleSpec *ScaleMergeSpec `protobuf:"bytes,4,opt,name=scaleSpec,oneof"`
}

type ActionMergePolicyDTO_MoveSpec struct {
	MoveSpec *MoveMergeSpec `protobuf:"bytes,5,opt,name=moveSpec,oneof"`
}

type ActionMergePolicyDTO_ProvisionSpec struct {
	ProvisionSpec *ProvisionMergeSpec `protobuf:"bytes,6,opt,name=provisionSpec,oneof"`
}

func (*ActionMergePolicyDTO_ResizeSpec) isActionMergePolicyDTO_ActionSpec() {}

func (*ActionMergePolicyDTO_ScaleSpec) isActionMergePolicyDTO_ActionSpec() {}

func (*ActionMergePolicyDTO_MoveSpec) isActionMergePolicyDTO_ActionSpec() {}

func (*ActionMergePolicyDTO_ProvisionSpec) isActionMergePolicyDTO_ActionSpec() {}

func (m *ActionMergePolicyDTO) GetActionSpec() isActionMergePolicyDTO_ActionSpec {
	if m != nil {
		return m.ActionSpec
	}
	return nil
}

func (m *ActionMergePolicyDTO) GetResizeSpec() *ResizeMergeSpec {
	if x, ok := m.GetActionSpec().(*ActionMergePolicyDTO_ResizeSpec); ok {
		return x.ResizeSpec
	}
	return nil
}

func (m *ActionMergePolicyDTO) GetScaleSpec() *ScaleMergeSpec {
	if x, ok := m.GetActionSpec().(*ActionMergePolicyDTO_ScaleSpec); ok {
		return x.ScaleSpec
	}
	return nil
}

func (m *ActionMergePolicyDTO) GetMoveSpec() *MoveMergeSpec {
	if x, ok := m.GetActionSpec().(*ActionMergePolicyDTO_MoveSpec); ok {
		return x.MoveSpec
	}
	return nil
}

func (m *ActionMergePolicyDTO) GetProvisionSpec() *ProvisionMergeSpec {
	if x, ok := m.GetActionSpec().(*ActionMergePolicyDTO_ProvisionSpec); ok {
		return x.ProvisionSpec
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ActionMergePolicyDTO) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ActionMergePolicyDTO_ResizeSpec)(nil),
		(*ActionMergePolicyDTO_ScaleSpec)(nil),
		(*ActionMergePolicyDTO_MoveSpec)(nil),
		(*ActionMergePolicyDTO_ProvisionSpec)(nil),
	}
}

// Metadata to get to the entity that will execute the merged actions
type ActionMergeExecutionTarget struct {
	// Description of the target, for purposes of debug or display in UI
	TargetDescription *string `protobuf:"bytes,1,opt,name=targetDescription" json:"targetDescription,omitempty"`
	// Types that are valid to be assigned to ExecutionTarget:
	//	*ActionMergeExecutionTarget_MergeTarget
	//	*ActionMergeExecutionTarget_ChainedMergeTarget
	ExecutionTarget      isActionMergeExecutionTarget_ExecutionTarget `protobuf_oneof:"executionTarget"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *ActionMergeExecutionTarget) Reset()         { *m = ActionMergeExecutionTarget{} }
func (m *ActionMergeExecutionTarget) String() string { return proto.CompactTextString(m) }
func (*ActionMergeExecutionTarget) ProtoMessage()    {}
func (*ActionMergeExecutionTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{2}
}

func (m *ActionMergeExecutionTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionMergeExecutionTarget.Unmarshal(m, b)
}
func (m *ActionMergeExecutionTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionMergeExecutionTarget.Marshal(b, m, deterministic)
}
func (m *ActionMergeExecutionTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionMergeExecutionTarget.Merge(m, src)
}
func (m *ActionMergeExecutionTarget) XXX_Size() int {
	return xxx_messageInfo_ActionMergeExecutionTarget.Size(m)
}
func (m *ActionMergeExecutionTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionMergeExecutionTarget.DiscardUnknown(m)
}

var xxx_messageInfo_ActionMergeExecutionTarget proto.InternalMessageInfo

func (m *ActionMergeExecutionTarget) GetTargetDescription() string {
	if m != nil && m.TargetDescription != nil {
		return *m.TargetDescription
	}
	return ""
}

type isActionMergeExecutionTarget_ExecutionTarget interface {
	isActionMergeExecutionTarget_ExecutionTarget()
}

type ActionMergeExecutionTarget_MergeTarget struct {
	MergeTarget *ActionMergeTargetData `protobuf:"bytes,2,opt,name=mergeTarget,oneof"`
}

type ActionMergeExecutionTarget_ChainedMergeTarget struct {
	ChainedMergeTarget *ChainedActionMergeTargetData `protobuf:"bytes,3,opt,name=chainedMergeTarget,oneof"`
}

func (*ActionMergeExecutionTarget_MergeTarget) isActionMergeExecutionTarget_ExecutionTarget() {}

func (*ActionMergeExecutionTarget_ChainedMergeTarget) isActionMergeExecutionTarget_ExecutionTarget() {
}

func (m *ActionMergeExecutionTarget) GetExecutionTarget() isActionMergeExecutionTarget_ExecutionTarget {
	if m != nil {
		return m.ExecutionTarget
	}
	return nil
}

func (m *ActionMergeExecutionTarget) GetMergeTarget() *ActionMergeTargetData {
	if x, ok := m.GetExecutionTarget().(*ActionMergeExecutionTarget_MergeTarget); ok {
		return x.MergeTarget
	}
	return nil
}

func (m *ActionMergeExecutionTarget) GetChainedMergeTarget() *ChainedActionMergeTargetData {
	if x, ok := m.GetExecutionTarget().(*ActionMergeExecutionTarget_ChainedMergeTarget); ok {
		return x.ChainedMergeTarget
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ActionMergeExecutionTarget) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ActionMergeExecutionTarget_MergeTarget)(nil),
		(*ActionMergeExecutionTarget_ChainedMergeTarget)(nil),
	}
}

// Metadata to get to the action execution using a relationship
// For example, to get to the ContainerSpec from Container via the AggregatedBy relationship
// or to get to Workload Controller from ContainerSpec via the Controlled/OwnedBy relationship
type ActionMergeTargetData struct {
	// Entity type for the related entity
	RelatedTo *EntityDTO_EntityType `protobuf:"varint,1,opt,name=relatedTo,enum=common_dto.EntityDTO_EntityType" json:"relatedTo,omitempty"`
	// Connection to the related entity
	RelatedBy            *ActionMergeTargetData_EntityRelationship `protobuf:"bytes,2,opt,name=relatedBy" json:"relatedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *ActionMergeTargetData) Reset()         { *m = ActionMergeTargetData{} }
func (m *ActionMergeTargetData) String() string { return proto.CompactTextString(m) }
func (*ActionMergeTargetData) ProtoMessage()    {}
func (*ActionMergeTargetData) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{3}
}

func (m *ActionMergeTargetData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionMergeTargetData.Unmarshal(m, b)
}
func (m *ActionMergeTargetData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionMergeTargetData.Marshal(b, m, deterministic)
}
func (m *ActionMergeTargetData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionMergeTargetData.Merge(m, src)
}
func (m *ActionMergeTargetData) XXX_Size() int {
	return xxx_messageInfo_ActionMergeTargetData.Size(m)
}
func (m *ActionMergeTargetData) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionMergeTargetData.DiscardUnknown(m)
}

var xxx_messageInfo_ActionMergeTargetData proto.InternalMessageInfo

func (m *ActionMergeTargetData) GetRelatedTo() EntityDTO_EntityType {
	if m != nil && m.RelatedTo != nil {
		return *m.RelatedTo
	}
	return EntityDTO_SWITCH
}

func (m *ActionMergeTargetData) GetRelatedBy() *ActionMergeTargetData_EntityRelationship {
	if m != nil {
		return m.RelatedBy
	}
	return nil
}

type ActionMergeTargetData_EntityRelationship struct {
	// Types that are valid to be assigned to EntityRelationship:
	//	*ActionMergeTargetData_EntityRelationship_ConnectionType
	EntityRelationship   isActionMergeTargetData_EntityRelationship_EntityRelationship `protobuf_oneof:"entityRelationship"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *ActionMergeTargetData_EntityRelationship) Reset() {
	*m = ActionMergeTargetData_EntityRelationship{}
}
func (m *ActionMergeTargetData_EntityRelationship) String() string { return proto.CompactTextString(m) }
func (*ActionMergeTargetData_EntityRelationship) ProtoMessage()    {}
func (*ActionMergeTargetData_EntityRelationship) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{3, 0}
}

func (m *ActionMergeTargetData_EntityRelationship) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionMergeTargetData_EntityRelationship.Unmarshal(m, b)
}
func (m *ActionMergeTargetData_EntityRelationship) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionMergeTargetData_EntityRelationship.Marshal(b, m, deterministic)
}
func (m *ActionMergeTargetData_EntityRelationship) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionMergeTargetData_EntityRelationship.Merge(m, src)
}
func (m *ActionMergeTargetData_EntityRelationship) XXX_Size() int {
	return xxx_messageInfo_ActionMergeTargetData_EntityRelationship.Size(m)
}
func (m *ActionMergeTargetData_EntityRelationship) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionMergeTargetData_EntityRelationship.DiscardUnknown(m)
}

var xxx_messageInfo_ActionMergeTargetData_EntityRelationship proto.InternalMessageInfo

type isActionMergeTargetData_EntityRelationship_EntityRelationship interface {
	isActionMergeTargetData_EntityRelationship_EntityRelationship()
}

type ActionMergeTargetData_EntityRelationship_ConnectionType struct {
	ConnectionType ConnectedEntity_ConnectionType `protobuf:"varint,1,opt,name=connectionType,enum=common_dto.ConnectedEntity_ConnectionType,oneof"`
}

func (*ActionMergeTargetData_EntityRelationship_ConnectionType) isActionMergeTargetData_EntityRelationship_EntityRelationship() {
}

func (m *ActionMergeTargetData_EntityRelationship) GetEntityRelationship() isActionMergeTargetData_EntityRelationship_EntityRelationship {
	if m != nil {
		return m.EntityRelationship
	}
	return nil
}

func (m *ActionMergeTargetData_EntityRelationship) GetConnectionType() ConnectedEntity_ConnectionType {
	if x, ok := m.GetEntityRelationship().(*ActionMergeTargetData_EntityRelationship_ConnectionType); ok {
		return x.ConnectionType
	}
	return ConnectedEntity_NORMAL_CONNECTION
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ActionMergeTargetData_EntityRelationship) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ActionMergeTargetData_EntityRelationship_ConnectionType)(nil),
	}
}

// Metadata that specifies the path to the execution target by traversing a set of connections.
type ChainedActionMergeTargetData struct {
	// Example, to get WorkloadController associated with Containers,
	// need to go from Container -> ContainerSpec -> WorkloadController
	// Entity connections are traversed in the order they appear in the list.
	// E.g. first find ContainerSpec instance from a Container
	// Then find WorkloadController from ContainerSpec instance found from the first link
	// WorkloadController W1 --> owns -> ContainerSpecs CS1
	// CS1 --> aggregates --> Containers C1, C2, C3
	TargetLinks          []*ChainedActionMergeTargetData_TargetDataLink `protobuf:"bytes,1,rep,name=targetLinks" json:"targetLinks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *ChainedActionMergeTargetData) Reset()         { *m = ChainedActionMergeTargetData{} }
func (m *ChainedActionMergeTargetData) String() string { return proto.CompactTextString(m) }
func (*ChainedActionMergeTargetData) ProtoMessage()    {}
func (*ChainedActionMergeTargetData) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{4}
}

func (m *ChainedActionMergeTargetData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainedActionMergeTargetData.Unmarshal(m, b)
}
func (m *ChainedActionMergeTargetData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainedActionMergeTargetData.Marshal(b, m, deterministic)
}
func (m *ChainedActionMergeTargetData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainedActionMergeTargetData.Merge(m, src)
}
func (m *ChainedActionMergeTargetData) XXX_Size() int {
	return xxx_messageInfo_ChainedActionMergeTargetData.Size(m)
}
func (m *ChainedActionMergeTargetData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainedActionMergeTargetData.DiscardUnknown(m)
}

var xxx_messageInfo_ChainedActionMergeTargetData proto.InternalMessageInfo

func (m *ChainedActionMergeTargetData) GetTargetLinks() []*ChainedActionMergeTargetData_TargetDataLink {
	if m != nil {
		return m.TargetLinks
	}
	return nil
}

type ChainedActionMergeTargetData_TargetDataLink struct {
	MergeTarget *ActionMergeTargetData `protobuf:"bytes,2,req,name=merge_target,json=mergeTarget" json:"merge_target,omitempty"`
	// The intermediate entity can be a target for de-duplicating the entity actions
	// In the example of Container -> ContainerSpec -> WorkloadController,
	// the Container_Spec will additionally serve as the entity to de-duplicate the actions
	// of all the containers associated with it.
	// WorkloadController W1 --> owns -> ContainerSpecs CS1
	// CS1 --> aggregates --> Containers C1, C2, C3
	// Then the actions of C1,C2,C3 will be de-duplicated by CS1 and created as one action item
	DeDuplicate          *bool    `protobuf:"varint,3,opt,name=de_duplicate,json=deDuplicate,def=0" json:"de_duplicate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainedActionMergeTargetData_TargetDataLink) Reset() {
	*m = ChainedActionMergeTargetData_TargetDataLink{}
}
func (m *ChainedActionMergeTargetData_TargetDataLink) String() string {
	return proto.CompactTextString(m)
}
func (*ChainedActionMergeTargetData_TargetDataLink) ProtoMessage() {}
func (*ChainedActionMergeTargetData_TargetDataLink) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{4, 0}
}

func (m *ChainedActionMergeTargetData_TargetDataLink) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainedActionMergeTargetData_TargetDataLink.Unmarshal(m, b)
}
func (m *ChainedActionMergeTargetData_TargetDataLink) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainedActionMergeTargetData_TargetDataLink.Marshal(b, m, deterministic)
}
func (m *ChainedActionMergeTargetData_TargetDataLink) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainedActionMergeTargetData_TargetDataLink.Merge(m, src)
}
func (m *ChainedActionMergeTargetData_TargetDataLink) XXX_Size() int {
	return xxx_messageInfo_ChainedActionMergeTargetData_TargetDataLink.Size(m)
}
func (m *ChainedActionMergeTargetData_TargetDataLink) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainedActionMergeTargetData_TargetDataLink.DiscardUnknown(m)
}

var xxx_messageInfo_ChainedActionMergeTargetData_TargetDataLink proto.InternalMessageInfo

const Default_ChainedActionMergeTargetData_TargetDataLink_DeDuplicate bool = false

func (m *ChainedActionMergeTargetData_TargetDataLink) GetMergeTarget() *ActionMergeTargetData {
	if m != nil {
		return m.MergeTarget
	}
	return nil
}

func (m *ChainedActionMergeTargetData_TargetDataLink) GetDeDuplicate() bool {
	if m != nil && m.DeDuplicate != nil {
		return *m.DeDuplicate
	}
	return Default_ChainedActionMergeTargetData_TargetDataLink_DeDuplicate
}

type ResizeMergeSpec struct {
	// Specifies the commodity resize to merge
	CommodityData        []*ResizeMergeSpec_CommodityMergeData `protobuf:"bytes,1,rep,name=commodityData" json:"commodityData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *ResizeMergeSpec) Reset()         { *m = ResizeMergeSpec{} }
func (m *ResizeMergeSpec) String() string { return proto.CompactTextString(m) }
func (*ResizeMergeSpec) ProtoMessage()    {}
func (*ResizeMergeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{5}
}

func (m *ResizeMergeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResizeMergeSpec.Unmarshal(m, b)
}
func (m *ResizeMergeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResizeMergeSpec.Marshal(b, m, deterministic)
}
func (m *ResizeMergeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResizeMergeSpec.Merge(m, src)
}
func (m *ResizeMergeSpec) XXX_Size() int {
	return xxx_messageInfo_ResizeMergeSpec.Size(m)
}
func (m *ResizeMergeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ResizeMergeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ResizeMergeSpec proto.InternalMessageInfo

func (m *ResizeMergeSpec) GetCommodityData() []*ResizeMergeSpec_CommodityMergeData {
	if m != nil {
		return m.CommodityData
	}
	return nil
}

type ResizeMergeSpec_CommodityMergeData struct {
	// The type of the commodity
	CommodityType *CommodityDTO_CommodityType `protobuf:"varint,1,opt,name=commodity_type,json=commodityType,enum=common_dto.CommodityDTO_CommodityType" json:"commodity_type,omitempty"`
	// The type of the changed attribute.
	ChangedAttr          *ActionItemDTO_CommodityAttribute `protobuf:"varint,2,opt,name=changed_attr,json=changedAttr,enum=common_dto.ActionItemDTO_CommodityAttribute" json:"changed_attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ResizeMergeSpec_CommodityMergeData) Reset()         { *m = ResizeMergeSpec_CommodityMergeData{} }
func (m *ResizeMergeSpec_CommodityMergeData) String() string { return proto.CompactTextString(m) }
func (*ResizeMergeSpec_CommodityMergeData) ProtoMessage()    {}
func (*ResizeMergeSpec_CommodityMergeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{5, 0}
}

func (m *ResizeMergeSpec_CommodityMergeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResizeMergeSpec_CommodityMergeData.Unmarshal(m, b)
}
func (m *ResizeMergeSpec_CommodityMergeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResizeMergeSpec_CommodityMergeData.Marshal(b, m, deterministic)
}
func (m *ResizeMergeSpec_CommodityMergeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResizeMergeSpec_CommodityMergeData.Merge(m, src)
}
func (m *ResizeMergeSpec_CommodityMergeData) XXX_Size() int {
	return xxx_messageInfo_ResizeMergeSpec_CommodityMergeData.Size(m)
}
func (m *ResizeMergeSpec_CommodityMergeData) XXX_DiscardUnknown() {
	xxx_messageInfo_ResizeMergeSpec_CommodityMergeData.DiscardUnknown(m)
}

var xxx_messageInfo_ResizeMergeSpec_CommodityMergeData proto.InternalMessageInfo

func (m *ResizeMergeSpec_CommodityMergeData) GetCommodityType() CommodityDTO_CommodityType {
	if m != nil && m.CommodityType != nil {
		return *m.CommodityType
	}
	return CommodityDTO_CLUSTER
}

func (m *ResizeMergeSpec_CommodityMergeData) GetChangedAttr() ActionItemDTO_CommodityAttribute {
	if m != nil && m.ChangedAttr != nil {
		return *m.ChangedAttr
	}
	return ActionItemDTO_Capacity
}

type ScaleMergeSpec struct {
	// Specifies the commodity resize to merge
	CommodityData        []*ScaleMergeSpec_CommodityMergeData `protobuf:"bytes,1,rep,name=commodityData" json:"commodityData,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *ScaleMergeSpec) Reset()         { *m = ScaleMergeSpec{} }
func (m *ScaleMergeSpec) String() string { return proto.CompactTextString(m) }
func (*ScaleMergeSpec) ProtoMessage()    {}
func (*ScaleMergeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{6}
}

func (m *ScaleMergeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleMergeSpec.Unmarshal(m, b)
}
func (m *ScaleMergeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleMergeSpec.Marshal(b, m, deterministic)
}
func (m *ScaleMergeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleMergeSpec.Merge(m, src)
}
func (m *ScaleMergeSpec) XXX_Size() int {
	return xxx_messageInfo_ScaleMergeSpec.Size(m)
}
func (m *ScaleMergeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleMergeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleMergeSpec proto.InternalMessageInfo

func (m *ScaleMergeSpec) GetCommodityData() []*ScaleMergeSpec_CommodityMergeData {
	if m != nil {
		return m.CommodityData
	}
	return nil
}

type ScaleMergeSpec_CommodityMergeData struct {
	// The type of the commodity
	CommodityType *CommodityDTO_CommodityType `protobuf:"varint,1,opt,name=commodity_type,json=commodityType,enum=common_dto.CommodityDTO_CommodityType" json:"commodity_type,omitempty"`
	// The type of the changed attribute.
	ChangedAttr          *ActionItemDTO_CommodityAttribute `protobuf:"varint,2,opt,name=changed_attr,json=changedAttr,enum=common_dto.ActionItemDTO_CommodityAttribute" json:"changed_attr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ScaleMergeSpec_CommodityMergeData) Reset()         { *m = ScaleMergeSpec_CommodityMergeData{} }
func (m *ScaleMergeSpec_CommodityMergeData) String() string { return proto.CompactTextString(m) }
func (*ScaleMergeSpec_CommodityMergeData) ProtoMessage()    {}
func (*ScaleMergeSpec_CommodityMergeData) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{6, 0}
}

func (m *ScaleMergeSpec_CommodityMergeData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScaleMergeSpec_CommodityMergeData.Unmarshal(m, b)
}
func (m *ScaleMergeSpec_CommodityMergeData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScaleMergeSpec_CommodityMergeData.Marshal(b, m, deterministic)
}
func (m *ScaleMergeSpec_CommodityMergeData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScaleMergeSpec_CommodityMergeData.Merge(m, src)
}
func (m *ScaleMergeSpec_CommodityMergeData) XXX_Size() int {
	return xxx_messageInfo_ScaleMergeSpec_CommodityMergeData.Size(m)
}
func (m *ScaleMergeSpec_CommodityMergeData) XXX_DiscardUnknown() {
	xxx_messageInfo_ScaleMergeSpec_CommodityMergeData.DiscardUnknown(m)
}

var xxx_messageInfo_ScaleMergeSpec_CommodityMergeData proto.InternalMessageInfo

func (m *ScaleMergeSpec_CommodityMergeData) GetCommodityType() CommodityDTO_CommodityType {
	if m != nil && m.CommodityType != nil {
		return *m.CommodityType
	}
	return CommodityDTO_CLUSTER
}

func (m *ScaleMergeSpec_CommodityMergeData) GetChangedAttr() ActionItemDTO_CommodityAttribute {
	if m != nil && m.ChangedAttr != nil {
		return *m.ChangedAttr
	}
	return ActionItemDTO_Capacity
}

type ProvisionMergeSpec struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProvisionMergeSpec) Reset()         { *m = ProvisionMergeSpec{} }
func (m *ProvisionMergeSpec) String() string { return proto.CompactTextString(m) }
func (*ProvisionMergeSpec) ProtoMessage()    {}
func (*ProvisionMergeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{7}
}

func (m *ProvisionMergeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProvisionMergeSpec.Unmarshal(m, b)
}
func (m *ProvisionMergeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProvisionMergeSpec.Marshal(b, m, deterministic)
}
func (m *ProvisionMergeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProvisionMergeSpec.Merge(m, src)
}
func (m *ProvisionMergeSpec) XXX_Size() int {
	return xxx_messageInfo_ProvisionMergeSpec.Size(m)
}
func (m *ProvisionMergeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ProvisionMergeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ProvisionMergeSpec proto.InternalMessageInfo

type MoveMergeSpec struct {
	// provider for the move
	ProviderType         *EntityDTO_EntityType `protobuf:"varint,1,req,name=providerType,enum=common_dto.EntityDTO_EntityType" json:"providerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MoveMergeSpec) Reset()         { *m = MoveMergeSpec{} }
func (m *MoveMergeSpec) String() string { return proto.CompactTextString(m) }
func (*MoveMergeSpec) ProtoMessage()    {}
func (*MoveMergeSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{8}
}

func (m *MoveMergeSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveMergeSpec.Unmarshal(m, b)
}
func (m *MoveMergeSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveMergeSpec.Marshal(b, m, deterministic)
}
func (m *MoveMergeSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveMergeSpec.Merge(m, src)
}
func (m *MoveMergeSpec) XXX_Size() int {
	return xxx_messageInfo_MoveMergeSpec.Size(m)
}
func (m *MoveMergeSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveMergeSpec.DiscardUnknown(m)
}

var xxx_messageInfo_MoveMergeSpec proto.InternalMessageInfo

func (m *MoveMergeSpec) GetProviderType() EntityDTO_EntityType {
	if m != nil && m.ProviderType != nil {
		return *m.ProviderType
	}
	return EntityDTO_SWITCH
}

// ActionExecutionDTO may contain one or more action items related to the overall action to be
// executed.
type ActionExecutionDTO struct {
	// Overall action type.  In most cases this action type will be the same as the action type
	// specified in the action items contained within this.
	ActionType *ActionItemDTO_ActionType `protobuf:"varint,1,req,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	// One or more action items related to the overall action to be executed
	ActionItem []*ActionItemDTO `protobuf:"bytes,2,rep,name=actionItem" json:"actionItem,omitempty"`
	// Action Execution Progress
	Progress *int64 `protobuf:"varint,3,opt,name=progress" json:"progress,omitempty"`
	// There may be an action orchestration workflow
	// associated with the execution of an action
	Workflow *Workflow `protobuf:"bytes,4,opt,name=workflow" json:"workflow,omitempty"`
	// Action OID generated by the platform side. It identifies an action uniquely
	// TODO make the field required as soon as we implement OIDs for actions
	ActionOid *uint64 `protobuf:"varint,5,opt,name=actionOid" json:"actionOid,omitempty"`
	// Action severity
	Severity *string `protobuf:"bytes,6,opt,name=severity" json:"severity,omitempty"`
	// Action subCategory (received from relatedProblems in ActionItem)
	SubCategory *string `protobuf:"bytes,7,opt,name=subCategory" json:"subCategory,omitempty"`
	// Action description
	Explanation *string `protobuf:"bytes,8,opt,name=explanation" json:"explanation,omitempty"`
	// The state of action execution.
	ActionState *ActionResponseState `protobuf:"varint,9,opt,name=actionState,enum=common_dto.ActionResponseState" json:"actionState,omitempty"`
	// The time that action was created
	CreateTime *int64 `protobuf:"varint,10,opt,name=createTime" json:"createTime,omitempty"`
	// The time that action execution updated (action started executing)
	UpdateTime *int64 `protobuf:"varint,11,opt,name=updateTime" json:"updateTime,omitempty"`
	// The name of the user that has accepted an action.
	AcceptedBy           *string  `protobuf:"bytes,12,opt,name=acceptedBy" json:"acceptedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionExecutionDTO) Reset()         { *m = ActionExecutionDTO{} }
func (m *ActionExecutionDTO) String() string { return proto.CompactTextString(m) }
func (*ActionExecutionDTO) ProtoMessage()    {}
func (*ActionExecutionDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{9}
}

func (m *ActionExecutionDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionExecutionDTO.Unmarshal(m, b)
}
func (m *ActionExecutionDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionExecutionDTO.Marshal(b, m, deterministic)
}
func (m *ActionExecutionDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionExecutionDTO.Merge(m, src)
}
func (m *ActionExecutionDTO) XXX_Size() int {
	return xxx_messageInfo_ActionExecutionDTO.Size(m)
}
func (m *ActionExecutionDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionExecutionDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionExecutionDTO proto.InternalMessageInfo

func (m *ActionExecutionDTO) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *ActionExecutionDTO) GetActionItem() []*ActionItemDTO {
	if m != nil {
		return m.ActionItem
	}
	return nil
}

func (m *ActionExecutionDTO) GetProgress() int64 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *ActionExecutionDTO) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

func (m *ActionExecutionDTO) GetActionOid() uint64 {
	if m != nil && m.ActionOid != nil {
		return *m.ActionOid
	}
	return 0
}

func (m *ActionExecutionDTO) GetSeverity() string {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return ""
}

func (m *ActionExecutionDTO) GetSubCategory() string {
	if m != nil && m.SubCategory != nil {
		return *m.SubCategory
	}
	return ""
}

func (m *ActionExecutionDTO) GetExplanation() string {
	if m != nil && m.Explanation != nil {
		return *m.Explanation
	}
	return ""
}

func (m *ActionExecutionDTO) GetActionState() ActionResponseState {
	if m != nil && m.ActionState != nil {
		return *m.ActionState
	}
	return ActionResponseState_PENDING_ACCEPT
}

func (m *ActionExecutionDTO) GetCreateTime() int64 {
	if m != nil && m.CreateTime != nil {
		return *m.CreateTime
	}
	return 0
}

func (m *ActionExecutionDTO) GetUpdateTime() int64 {
	if m != nil && m.UpdateTime != nil {
		return *m.UpdateTime
	}
	return 0
}

func (m *ActionExecutionDTO) GetAcceptedBy() string {
	if m != nil && m.AcceptedBy != nil {
		return *m.AcceptedBy
	}
	return ""
}

// This message holds values necessary for executing actions on Service Entity discovered with SDK probe
type ActionItemDTO struct {
	// ActionType of the action
	ActionType *ActionItemDTO_ActionType `protobuf:"varint,1,req,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	// ActionItem's uuid
	Uuid *string `protobuf:"bytes,2,req,name=uuid" json:"uuid,omitempty"`
	// EntityDTO for the Target ServiceEntity on which the action should be applied
	TargetSE *EntityDTO `protobuf:"bytes,3,req,name=targetSE" json:"targetSE,omitempty"`
	// EntityDTO for the service entity which hosts the targetSE
	HostedBySE *EntityDTO `protobuf:"bytes,4,opt,name=hostedBySE" json:"hostedBySE,omitempty"`
	// EntityDTO for the ServiceEntity by which the Target ServiceEntity is hosted now (for Move action only)
	CurrentSE *EntityDTO `protobuf:"bytes,5,opt,name=currentSE" json:"currentSE,omitempty"`
	// EntityDTO for the ServiceEntity by which the Target ServiceEntity will be hosted
	// after applied the action (for Move action only)
	NewSE *EntityDTO `protobuf:"bytes,6,opt,name=newSE" json:"newSE,omitempty"`
	// CommodityDTO for the commodity on which the action
	// should be applied (current values)
	CurrentComm *CommodityDTO `protobuf:"bytes,7,opt,name=currentComm" json:"currentComm,omitempty"`
	// CommodityDTO for the commodity on which the action
	// should be applied (after the action is applied)
	NewComm *CommodityDTO `protobuf:"bytes,8,opt,name=newComm" json:"newComm,omitempty"`
	// CommodityAttribute enum notifying type of changed attribute
	CommodityAttribute *ActionItemDTO_CommodityAttribute `protobuf:"varint,10,opt,name=commodityAttribute,enum=common_dto.ActionItemDTO_CommodityAttribute" json:"commodityAttribute,omitempty"`
	// Information for providers of the targetSE.
	Providers []*ActionItemDTO_ProviderInfo `protobuf:"bytes,11,rep,name=providers" json:"providers,omitempty"`
	// Profile related information used in executing a deploy action
	EntityProfileDTO *EntityProfileDTO `protobuf:"bytes,12,opt,name=entityProfileDTO" json:"entityProfileDTO,omitempty"`
	// Context data used in executing actions
	ContextData []*ContextData `protobuf:"bytes,13,rep,name=contextData" json:"contextData,omitempty"`
	// The Reserved Instance, if any, associated with the action, eg
	// if a move or resize is taking advantage of an RI.
	RelatedRI *EntityDTO `protobuf:"bytes,14,opt,name=relatedRI" json:"relatedRI,omitempty"`
	// Whether the action item is related to consistent scaling
	ConsistentScalingCompliance *bool `protobuf:"varint,15,opt,name=consistentScalingCompliance" json:"consistentScalingCompliance,omitempty"`
	// Action savings
	Savings *float32 `protobuf:"fixed32,17,opt,name=savings" json:"savings,omitempty"`
	// Action saving unit
	SavingUnit *string `protobuf:"bytes,18,opt,name=savingUnit" json:"savingUnit,omitempty"`
	// The human readable description for an action.
	Description *string `protobuf:"bytes,19,opt,name=description" json:"description,omitempty"`
	// The information about characteristics of an action
	Characteristics *ActionItemDTO_ExecutionCharacteristics `protobuf:"bytes,20,opt,name=characteristics" json:"characteristics,omitempty"`
	// The risk that this action is responding to
	Risk                 *ActionItemDTO_Risk `protobuf:"bytes,21,opt,name=risk" json:"risk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ActionItemDTO) Reset()         { *m = ActionItemDTO{} }
func (m *ActionItemDTO) String() string { return proto.CompactTextString(m) }
func (*ActionItemDTO) ProtoMessage()    {}
func (*ActionItemDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10}
}

func (m *ActionItemDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionItemDTO.Unmarshal(m, b)
}
func (m *ActionItemDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionItemDTO.Marshal(b, m, deterministic)
}
func (m *ActionItemDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionItemDTO.Merge(m, src)
}
func (m *ActionItemDTO) XXX_Size() int {
	return xxx_messageInfo_ActionItemDTO.Size(m)
}
func (m *ActionItemDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionItemDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionItemDTO proto.InternalMessageInfo

func (m *ActionItemDTO) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *ActionItemDTO) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ActionItemDTO) GetTargetSE() *EntityDTO {
	if m != nil {
		return m.TargetSE
	}
	return nil
}

func (m *ActionItemDTO) GetHostedBySE() *EntityDTO {
	if m != nil {
		return m.HostedBySE
	}
	return nil
}

func (m *ActionItemDTO) GetCurrentSE() *EntityDTO {
	if m != nil {
		return m.CurrentSE
	}
	return nil
}

func (m *ActionItemDTO) GetNewSE() *EntityDTO {
	if m != nil {
		return m.NewSE
	}
	return nil
}

func (m *ActionItemDTO) GetCurrentComm() *CommodityDTO {
	if m != nil {
		return m.CurrentComm
	}
	return nil
}

func (m *ActionItemDTO) GetNewComm() *CommodityDTO {
	if m != nil {
		return m.NewComm
	}
	return nil
}

func (m *ActionItemDTO) GetCommodityAttribute() ActionItemDTO_CommodityAttribute {
	if m != nil && m.CommodityAttribute != nil {
		return *m.CommodityAttribute
	}
	return ActionItemDTO_Capacity
}

func (m *ActionItemDTO) GetProviders() []*ActionItemDTO_ProviderInfo {
	if m != nil {
		return m.Providers
	}
	return nil
}

func (m *ActionItemDTO) GetEntityProfileDTO() *EntityProfileDTO {
	if m != nil {
		return m.EntityProfileDTO
	}
	return nil
}

func (m *ActionItemDTO) GetContextData() []*ContextData {
	if m != nil {
		return m.ContextData
	}
	return nil
}

func (m *ActionItemDTO) GetRelatedRI() *EntityDTO {
	if m != nil {
		return m.RelatedRI
	}
	return nil
}

func (m *ActionItemDTO) GetConsistentScalingCompliance() bool {
	if m != nil && m.ConsistentScalingCompliance != nil {
		return *m.ConsistentScalingCompliance
	}
	return false
}

func (m *ActionItemDTO) GetSavings() float32 {
	if m != nil && m.Savings != nil {
		return *m.Savings
	}
	return 0
}

func (m *ActionItemDTO) GetSavingUnit() string {
	if m != nil && m.SavingUnit != nil {
		return *m.SavingUnit
	}
	return ""
}

func (m *ActionItemDTO) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ActionItemDTO) GetCharacteristics() *ActionItemDTO_ExecutionCharacteristics {
	if m != nil {
		return m.Characteristics
	}
	return nil
}

func (m *ActionItemDTO) GetRisk() *ActionItemDTO_Risk {
	if m != nil {
		return m.Risk
	}
	return nil
}

// This message holds provider information for the target SE of this ActionItem.
type ActionItemDTO_ProviderInfo struct {
	EntityType           *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	Ids                  []string              `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ActionItemDTO_ProviderInfo) Reset()         { *m = ActionItemDTO_ProviderInfo{} }
func (m *ActionItemDTO_ProviderInfo) String() string { return proto.CompactTextString(m) }
func (*ActionItemDTO_ProviderInfo) ProtoMessage()    {}
func (*ActionItemDTO_ProviderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10, 0}
}

func (m *ActionItemDTO_ProviderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionItemDTO_ProviderInfo.Unmarshal(m, b)
}
func (m *ActionItemDTO_ProviderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionItemDTO_ProviderInfo.Marshal(b, m, deterministic)
}
func (m *ActionItemDTO_ProviderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionItemDTO_ProviderInfo.Merge(m, src)
}
func (m *ActionItemDTO_ProviderInfo) XXX_Size() int {
	return xxx_messageInfo_ActionItemDTO_ProviderInfo.Size(m)
}
func (m *ActionItemDTO_ProviderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionItemDTO_ProviderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ActionItemDTO_ProviderInfo proto.InternalMessageInfo

func (m *ActionItemDTO_ProviderInfo) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *ActionItemDTO_ProviderInfo) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

// The information about characteristics of action execution.
type ActionItemDTO_ExecutionCharacteristics struct {
	// The reversibility of the action execution.
	Reversible *bool `protobuf:"varint,1,opt,name=reversible" json:"reversible,omitempty"`
	// THe disruptiveness of the action.
	Disruptive           *bool    `protobuf:"varint,2,opt,name=disruptive" json:"disruptive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionItemDTO_ExecutionCharacteristics) Reset() {
	*m = ActionItemDTO_ExecutionCharacteristics{}
}
func (m *ActionItemDTO_ExecutionCharacteristics) String() string { return proto.CompactTextString(m) }
func (*ActionItemDTO_ExecutionCharacteristics) ProtoMessage()    {}
func (*ActionItemDTO_ExecutionCharacteristics) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10, 1}
}

func (m *ActionItemDTO_ExecutionCharacteristics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionItemDTO_ExecutionCharacteristics.Unmarshal(m, b)
}
func (m *ActionItemDTO_ExecutionCharacteristics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionItemDTO_ExecutionCharacteristics.Marshal(b, m, deterministic)
}
func (m *ActionItemDTO_ExecutionCharacteristics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionItemDTO_ExecutionCharacteristics.Merge(m, src)
}
func (m *ActionItemDTO_ExecutionCharacteristics) XXX_Size() int {
	return xxx_messageInfo_ActionItemDTO_ExecutionCharacteristics.Size(m)
}
func (m *ActionItemDTO_ExecutionCharacteristics) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionItemDTO_ExecutionCharacteristics.DiscardUnknown(m)
}

var xxx_messageInfo_ActionItemDTO_ExecutionCharacteristics proto.InternalMessageInfo

func (m *ActionItemDTO_ExecutionCharacteristics) GetReversible() bool {
	if m != nil && m.Reversible != nil {
		return *m.Reversible
	}
	return false
}

func (m *ActionItemDTO_ExecutionCharacteristics) GetDisruptive() bool {
	if m != nil && m.Disruptive != nil {
		return *m.Disruptive
	}
	return false
}

// The information about the risk resulting in the action.
type ActionItemDTO_Risk struct {
	// The severity of the risk
	Severity *ActionItemDTO_Risk_Severity `protobuf:"varint,1,opt,name=severity,enum=common_dto.ActionItemDTO_Risk_Severity,def=0" json:"severity,omitempty"`
	// category of risk
	Category *ActionItemDTO_Risk_Category `protobuf:"varint,2,opt,name=category,enum=common_dto.ActionItemDTO_Risk_Category" json:"category,omitempty"`
	// the commodities affected by the risk
	AffectedCommodity []CommodityDTO_CommodityType `protobuf:"varint,3,rep,name=affectedCommodity,enum=common_dto.CommodityDTO_CommodityType" json:"affectedCommodity,omitempty"`
	// description of risk
	Description          *string  `protobuf:"bytes,4,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionItemDTO_Risk) Reset()         { *m = ActionItemDTO_Risk{} }
func (m *ActionItemDTO_Risk) String() string { return proto.CompactTextString(m) }
func (*ActionItemDTO_Risk) ProtoMessage()    {}
func (*ActionItemDTO_Risk) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{10, 2}
}

func (m *ActionItemDTO_Risk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionItemDTO_Risk.Unmarshal(m, b)
}
func (m *ActionItemDTO_Risk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionItemDTO_Risk.Marshal(b, m, deterministic)
}
func (m *ActionItemDTO_Risk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionItemDTO_Risk.Merge(m, src)
}
func (m *ActionItemDTO_Risk) XXX_Size() int {
	return xxx_messageInfo_ActionItemDTO_Risk.Size(m)
}
func (m *ActionItemDTO_Risk) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionItemDTO_Risk.DiscardUnknown(m)
}

var xxx_messageInfo_ActionItemDTO_Risk proto.InternalMessageInfo

const Default_ActionItemDTO_Risk_Severity ActionItemDTO_Risk_Severity = ActionItemDTO_Risk_UNKNOWN

func (m *ActionItemDTO_Risk) GetSeverity() ActionItemDTO_Risk_Severity {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return Default_ActionItemDTO_Risk_Severity
}

func (m *ActionItemDTO_Risk) GetCategory() ActionItemDTO_Risk_Category {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ActionItemDTO_Risk_PERFORMANCE_ASSURANCE
}

func (m *ActionItemDTO_Risk) GetAffectedCommodity() []CommodityDTO_CommodityType {
	if m != nil {
		return m.AffectedCommodity
	}
	return nil
}

func (m *ActionItemDTO_Risk) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type Workflow struct {
	Id          *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	DisplayName *string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// parameters describe values that will be conveyed to the workflow at execution time
	Param []*Workflow_Parameter `protobuf:"bytes,4,rep,name=param" json:"param,omitempty"`
	// property field used for AWS catalogs modeled as workflows. It is
	// not used in other cases
	Property   []*Workflow_Property  `protobuf:"bytes,5,rep,name=property" json:"property,omitempty"`
	EntityType *EntityDTO_EntityType `protobuf:"varint,6,opt,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// Remaining fields are unused in classic OpsManager.
	// scriptPath is used for action scripts in XL, and in that context
	// it is required.
	ScriptPath *string                     `protobuf:"bytes,7,opt,name=scriptPath" json:"scriptPath,omitempty"`
	ActionType *ActionItemDTO_ActionType   `protobuf:"varint,8,opt,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	Phase      *Workflow_ActionScriptPhase `protobuf:"varint,9,opt,name=phase,enum=common_dto.Workflow_ActionScriptPhase" json:"phase,omitempty"`
	// max seconds to allow action script to execute before attemting to terminate
	// it by sending a TERM signal (a default is used if missing)
	TimeLimitSeconds *int64 `protobuf:"varint,10,opt,name=timeLimitSeconds" json:"timeLimitSeconds,omitempty"`
	// this indicates if the API message format should be used to send the action to the target
	ApiMessageFormatEnabled *bool    `protobuf:"varint,11,opt,name=apiMessageFormatEnabled" json:"apiMessageFormatEnabled,omitempty"`
	XXX_NoUnkeyedLiteral    struct{} `json:"-"`
	XXX_unrecognized        []byte   `json:"-"`
	XXX_sizecache           int32    `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{11}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Workflow) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *Workflow) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Workflow) GetParam() []*Workflow_Parameter {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *Workflow) GetProperty() []*Workflow_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *Workflow) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *Workflow) GetScriptPath() string {
	if m != nil && m.ScriptPath != nil {
		return *m.ScriptPath
	}
	return ""
}

func (m *Workflow) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *Workflow) GetPhase() Workflow_ActionScriptPhase {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return Workflow_ON_GENERATION
}

func (m *Workflow) GetTimeLimitSeconds() int64 {
	if m != nil && m.TimeLimitSeconds != nil {
		return *m.TimeLimitSeconds
	}
	return 0
}

func (m *Workflow) GetApiMessageFormatEnabled() bool {
	if m != nil && m.ApiMessageFormatEnabled != nil {
		return *m.ApiMessageFormatEnabled
	}
	return false
}

type Workflow_Parameter struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Description          *string  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Type                 *string  `protobuf:"bytes,3,req,name=type,def=String" json:"type,omitempty"`
	Mandatory            *bool    `protobuf:"varint,4,opt,name=mandatory,def=1" json:"mandatory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow_Parameter) Reset()         { *m = Workflow_Parameter{} }
func (m *Workflow_Parameter) String() string { return proto.CompactTextString(m) }
func (*Workflow_Parameter) ProtoMessage()    {}
func (*Workflow_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{11, 0}
}

func (m *Workflow_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow_Parameter.Unmarshal(m, b)
}
func (m *Workflow_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow_Parameter.Marshal(b, m, deterministic)
}
func (m *Workflow_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow_Parameter.Merge(m, src)
}
func (m *Workflow_Parameter) XXX_Size() int {
	return xxx_messageInfo_Workflow_Parameter.Size(m)
}
func (m *Workflow_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow_Parameter proto.InternalMessageInfo

const Default_Workflow_Parameter_Type string = "String"
const Default_Workflow_Parameter_Mandatory bool = true

func (m *Workflow_Parameter) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Workflow_Parameter) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Workflow_Parameter) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Workflow_Parameter_Type
}

func (m *Workflow_Parameter) GetMandatory() bool {
	if m != nil && m.Mandatory != nil {
		return *m.Mandatory
	}
	return Default_Workflow_Parameter_Mandatory
}

type Workflow_Property struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow_Property) Reset()         { *m = Workflow_Property{} }
func (m *Workflow_Property) String() string { return proto.CompactTextString(m) }
func (*Workflow_Property) ProtoMessage()    {}
func (*Workflow_Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{11, 1}
}

func (m *Workflow_Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow_Property.Unmarshal(m, b)
}
func (m *Workflow_Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow_Property.Marshal(b, m, deterministic)
}
func (m *Workflow_Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow_Property.Merge(m, src)
}
func (m *Workflow_Property) XXX_Size() int {
	return xxx_messageInfo_Workflow_Property.Size(m)
}
func (m *Workflow_Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow_Property proto.InternalMessageInfo

func (m *Workflow_Property) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Workflow_Property) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Errpr describing some problems in reporting action to action approval backend.
type ActionErrorDTO struct {
	// OID of the action error is reported for.
	ActionOid *int64 `protobuf:"varint,1,req,name=actionOid" json:"actionOid,omitempty"`
	// Error message (description)
	Message              *string  `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionErrorDTO) Reset()         { *m = ActionErrorDTO{} }
func (m *ActionErrorDTO) String() string { return proto.CompactTextString(m) }
func (*ActionErrorDTO) ProtoMessage()    {}
func (*ActionErrorDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{12}
}

func (m *ActionErrorDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionErrorDTO.Unmarshal(m, b)
}
func (m *ActionErrorDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionErrorDTO.Marshal(b, m, deterministic)
}
func (m *ActionErrorDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionErrorDTO.Merge(m, src)
}
func (m *ActionErrorDTO) XXX_Size() int {
	return xxx_messageInfo_ActionErrorDTO.Size(m)
}
func (m *ActionErrorDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionErrorDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionErrorDTO proto.InternalMessageInfo

func (m *ActionErrorDTO) GetActionOid() int64 {
	if m != nil && m.ActionOid != nil {
		return *m.ActionOid
	}
	return 0
}

func (m *ActionErrorDTO) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// Description of action event to audit. It holds action representation to external world (3rd-party
// software), action state transition and event timestamp.
type ActionEventDTO struct {
	// Action representation for 3rd-party software.
	Action *ActionExecutionDTO `protobuf:"bytes,1,req,name=action" json:"action,omitempty"`
	// Previous action state - before the event.
	OldState *ActionResponseState `protobuf:"varint,2,req,name=oldState,enum=common_dto.ActionResponseState" json:"oldState,omitempty"`
	// New action state - after the event.
	NewState *ActionResponseState `protobuf:"varint,3,req,name=newState,enum=common_dto.ActionResponseState" json:"newState,omitempty"`
	// Timestamp of action event.
	Timestamp *int64 `protobuf:"varint,4,req,name=timestamp" json:"timestamp,omitempty"`
	// Information about who accepted the action.
	// Maybe accepted :
	// 1. manually in Turbonomic
	// 2. automated in Turbonomic
	// 3. in third-party platform (ServiceNow)
	AcceptedBy           *string  `protobuf:"bytes,5,opt,name=acceptedBy" json:"acceptedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionEventDTO) Reset()         { *m = ActionEventDTO{} }
func (m *ActionEventDTO) String() string { return proto.CompactTextString(m) }
func (*ActionEventDTO) ProtoMessage()    {}
func (*ActionEventDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{13}
}

func (m *ActionEventDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionEventDTO.Unmarshal(m, b)
}
func (m *ActionEventDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionEventDTO.Marshal(b, m, deterministic)
}
func (m *ActionEventDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionEventDTO.Merge(m, src)
}
func (m *ActionEventDTO) XXX_Size() int {
	return xxx_messageInfo_ActionEventDTO.Size(m)
}
func (m *ActionEventDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionEventDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionEventDTO proto.InternalMessageInfo

func (m *ActionEventDTO) GetAction() *ActionExecutionDTO {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ActionEventDTO) GetOldState() ActionResponseState {
	if m != nil && m.OldState != nil {
		return *m.OldState
	}
	return ActionResponseState_PENDING_ACCEPT
}

func (m *ActionEventDTO) GetNewState() ActionResponseState {
	if m != nil && m.NewState != nil {
		return *m.NewState
	}
	return ActionResponseState_PENDING_ACCEPT
}

func (m *ActionEventDTO) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ActionEventDTO) GetAcceptedBy() string {
	if m != nil && m.AcceptedBy != nil {
		return *m.AcceptedBy
	}
	return ""
}

// This class holds response information about executing action via a third party integration.
type ExternalActionInfo struct {
	// URL to actual change request in thirdParty
	Url *string `protobuf:"bytes,2,req,name=url" json:"url,omitempty"`
	// short name or ID of change request in thirdParty
	ShortName            *string  `protobuf:"bytes,3,req,name=shortName" json:"shortName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalActionInfo) Reset()         { *m = ExternalActionInfo{} }
func (m *ExternalActionInfo) String() string { return proto.CompactTextString(m) }
func (*ExternalActionInfo) ProtoMessage()    {}
func (*ExternalActionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{14}
}

func (m *ExternalActionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalActionInfo.Unmarshal(m, b)
}
func (m *ExternalActionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalActionInfo.Marshal(b, m, deterministic)
}
func (m *ExternalActionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalActionInfo.Merge(m, src)
}
func (m *ExternalActionInfo) XXX_Size() int {
	return xxx_messageInfo_ExternalActionInfo.Size(m)
}
func (m *ExternalActionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalActionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalActionInfo proto.InternalMessageInfo

func (m *ExternalActionInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *ExternalActionInfo) GetShortName() string {
	if m != nil && m.ShortName != nil {
		return *m.ShortName
	}
	return ""
}

func init() {
	proto.RegisterEnum("common_dto.ActionResponseState", ActionResponseState_name, ActionResponseState_value)
	proto.RegisterEnum("common_dto.ActionPolicyDTO_ActionCapability", ActionPolicyDTO_ActionCapability_name, ActionPolicyDTO_ActionCapability_value)
	proto.RegisterEnum("common_dto.ActionItemDTO_ActionType", ActionItemDTO_ActionType_name, ActionItemDTO_ActionType_value)
	proto.RegisterEnum("common_dto.ActionItemDTO_CommodityAttribute", ActionItemDTO_CommodityAttribute_name, ActionItemDTO_CommodityAttribute_value)
	proto.RegisterEnum("common_dto.ActionItemDTO_Risk_Category", ActionItemDTO_Risk_Category_name, ActionItemDTO_Risk_Category_value)
	proto.RegisterEnum("common_dto.ActionItemDTO_Risk_Severity", ActionItemDTO_Risk_Severity_name, ActionItemDTO_Risk_Severity_value)
	proto.RegisterEnum("common_dto.Workflow_ActionScriptPhase", Workflow_ActionScriptPhase_name, Workflow_ActionScriptPhase_value)
	proto.RegisterType((*ActionPolicyDTO)(nil), "common_dto.ActionPolicyDTO")
	proto.RegisterType((*ActionPolicyDTO_ActionPolicyElement)(nil), "common_dto.ActionPolicyDTO.ActionPolicyElement")
	proto.RegisterType((*ActionPolicyDTO_ActionPolicyElement_ProviderScope)(nil), "common_dto.ActionPolicyDTO.ActionPolicyElement.ProviderScope")
	proto.RegisterType((*ActionPolicyDTO_ActionPolicyElement_CommodityScope)(nil), "common_dto.ActionPolicyDTO.ActionPolicyElement.CommodityScope")
	proto.RegisterType((*ActionMergePolicyDTO)(nil), "common_dto.ActionMergePolicyDTO")
	proto.RegisterType((*ActionMergeExecutionTarget)(nil), "common_dto.ActionMergeExecutionTarget")
	proto.RegisterType((*ActionMergeTargetData)(nil), "common_dto.ActionMergeTargetData")
	proto.RegisterType((*ActionMergeTargetData_EntityRelationship)(nil), "common_dto.ActionMergeTargetData.EntityRelationship")
	proto.RegisterType((*ChainedActionMergeTargetData)(nil), "common_dto.ChainedActionMergeTargetData")
	proto.RegisterType((*ChainedActionMergeTargetData_TargetDataLink)(nil), "common_dto.ChainedActionMergeTargetData.TargetDataLink")
	proto.RegisterType((*ResizeMergeSpec)(nil), "common_dto.ResizeMergeSpec")
	proto.RegisterType((*ResizeMergeSpec_CommodityMergeData)(nil), "common_dto.ResizeMergeSpec.CommodityMergeData")
	proto.RegisterType((*ScaleMergeSpec)(nil), "common_dto.ScaleMergeSpec")
	proto.RegisterType((*ScaleMergeSpec_CommodityMergeData)(nil), "common_dto.ScaleMergeSpec.CommodityMergeData")
	proto.RegisterType((*ProvisionMergeSpec)(nil), "common_dto.ProvisionMergeSpec")
	proto.RegisterType((*MoveMergeSpec)(nil), "common_dto.MoveMergeSpec")
	proto.RegisterType((*ActionExecutionDTO)(nil), "common_dto.ActionExecutionDTO")
	proto.RegisterType((*ActionItemDTO)(nil), "common_dto.ActionItemDTO")
	proto.RegisterType((*ActionItemDTO_ProviderInfo)(nil), "common_dto.ActionItemDTO.ProviderInfo")
	proto.RegisterType((*ActionItemDTO_ExecutionCharacteristics)(nil), "common_dto.ActionItemDTO.ExecutionCharacteristics")
	proto.RegisterType((*ActionItemDTO_Risk)(nil), "common_dto.ActionItemDTO.Risk")
	proto.RegisterType((*Workflow)(nil), "common_dto.Workflow")
	proto.RegisterType((*Workflow_Parameter)(nil), "common_dto.Workflow.Parameter")
	proto.RegisterType((*Workflow_Property)(nil), "common_dto.Workflow.Property")
	proto.RegisterType((*ActionErrorDTO)(nil), "common_dto.ActionErrorDTO")
	proto.RegisterType((*ActionEventDTO)(nil), "common_dto.ActionEventDTO")
	proto.RegisterType((*ExternalActionInfo)(nil), "common_dto.ExternalActionInfo")
}

func init() {
	proto.RegisterFile("ActionExecution.proto", fileDescriptor_01258f62f785f2d6)
}

var fileDescriptor_01258f62f785f2d6 = []byte{
	// 2470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0xcd, 0x6f, 0xdb, 0xc8,
	0x15, 0xb7, 0xbe, 0x6c, 0xe9, 0xc9, 0x1f, 0xf4, 0xc4, 0xde, 0x65, 0xb4, 0x69, 0xd6, 0x15, 0xb6,
	0xa9, 0x91, 0x26, 0x4e, 0xeb, 0xa6, 0xdd, 0x26, 0xed, 0x06, 0x4b, 0x53, 0x63, 0x5b, 0x5b, 0x89,
	0x52, 0x87, 0x54, 0x76, 0x13, 0x2c, 0xaa, 0xd2, 0xe4, 0x58, 0x26, 0x2c, 0x91, 0x04, 0x39, 0x72,
	0xe2, 0x9e, 0x52, 0xa0, 0xa7, 0x5e, 0x7b, 0x2d, 0xfa, 0x27, 0xf4, 0x54, 0xec, 0xad, 0x40, 0xff,
	0xa1, 0x9e, 0x7b, 0xe9, 0xa1, 0x98, 0x21, 0x29, 0x52, 0x92, 0xe5, 0xd8, 0x45, 0x4e, 0xbd, 0x0d,
	0xdf, 0xfc, 0x7e, 0xbf, 0xf9, 0x7a, 0xf3, 0xde, 0x1b, 0x09, 0xb6, 0x15, 0x8b, 0x39, 0x9e, 0x8b,
	0xdf, 0x52, 0x6b, 0xcc, 0x1b, 0x7b, 0x7e, 0xe0, 0x31, 0x0f, 0x81, 0xe5, 0x8d, 0x46, 0x9e, 0xdb,
	0xb7, 0x99, 0x57, 0xdb, 0x50, 0x45, 0xbb, 0x61, 0x74, 0xa2, 0xce, 0x9a, 0xd4, 0x0d, 0xbc, 0x53,
	0x67, 0x48, 0x27, 0x96, 0xfa, 0x9f, 0x56, 0x60, 0x23, 0x12, 0xea, 0x7a, 0x43, 0xc7, 0xba, 0x6c,
	0x18, 0x1d, 0xf4, 0x25, 0x00, 0x75, 0x99, 0xc3, 0x2e, 0x8d, 0x4b, 0x9f, 0xca, 0xb9, 0x9d, 0xfc,
	0xee, 0xfa, 0xfe, 0xce, 0x5e, 0xaa, 0xbb, 0x87, 0x45, 0x2f, 0x17, 0xc1, 0x13, 0x1c, 0xc9, 0x70,
	0x50, 0x0f, 0xd6, 0x7c, 0x21, 0x87, 0x87, 0x74, 0x44, 0x5d, 0x26, 0xe7, 0x77, 0x0a, 0xbb, 0xd5,
	0xfd, 0x27, 0x59, 0x91, 0x99, 0x51, 0xa7, 0xbe, 0x63, 0x1a, 0x99, 0x56, 0xa9, 0xfd, 0xb9, 0x04,
	0x77, 0xae, 0x80, 0xa1, 0x06, 0x80, 0x29, 0xcc, 0x99, 0x09, 0x7f, 0x36, 0x3f, 0x56, 0x93, 0xd1,
	0x51, 0x3a, 0x52, 0x34, 0xe9, 0x94, 0x87, 0xbe, 0x01, 0x29, 0xfa, 0x52, 0x4d, 0xdf, 0x3c, 0x71,
	0x86, 0x0e, 0xbb, 0x94, 0xf3, 0x42, 0xeb, 0xd1, 0xfb, 0xe7, 0x9d, 0x72, 0xc8, 0x9c, 0x0a, 0xa2,
	0xb0, 0xe6, 0x07, 0xde, 0x85, 0x63, 0xd3, 0x40, 0xb7, 0x3c, 0x9f, 0xca, 0x85, 0x9d, 0xdc, 0x6e,
	0x75, 0xff, 0x8b, 0x5b, 0x6e, 0xc7, 0x5e, 0x37, 0x2b, 0x72, 0xbc, 0x44, 0xa6, 0x55, 0xd1, 0x19,
	0xac, 0x0b, 0x41, 0xdb, 0x61, 0x97, 0xd1, 0x38, 0x45, 0x31, 0xce, 0x8b, 0xdb, 0x8e, 0xa3, 0x4e,
	0xa9, 0x1c, 0x2f, 0x91, 0x19, 0x5d, 0xf4, 0x03, 0x00, 0xdb, 0x09, 0x83, 0xb1, 0xcf, 0x9c, 0x0b,
	0x2a, 0x97, 0x76, 0x72, 0xbb, 0xe5, 0xe7, 0xa5, 0x53, 0x73, 0x18, 0x52, 0x92, 0xe9, 0x40, 0x9f,
	0x01, 0x04, 0xf4, 0x82, 0x06, 0xa1, 0x73, 0x32, 0xa4, 0xf2, 0xb2, 0x80, 0x15, 0x59, 0x30, 0xa6,
	0x24, 0x63, 0xaf, 0xf5, 0x60, 0x6d, 0x6a, 0x61, 0xa8, 0x01, 0xab, 0xc9, 0xc2, 0x6e, 0xe5, 0x81,
	0x53, 0xac, 0xda, 0x6f, 0x61, 0x7d, 0x7a, 0x1d, 0xa8, 0x05, 0x6b, 0x93, 0x75, 0x64, 0x84, 0x1f,
	0x64, 0x85, 0x27, 0x14, 0xae, 0xad, 0x66, 0xd1, 0x64, 0x9a, 0x7c, 0xb0, 0x02, 0xa5, 0x90, 0xcb,
	0xd6, 0x8f, 0x41, 0x9a, 0xf5, 0x01, 0xb4, 0x09, 0x6b, 0x5a, 0xc7, 0xe8, 0xeb, 0xbd, 0x6e, 0xb7,
	0x43, 0x0c, 0xdc, 0x90, 0x72, 0x08, 0xc1, 0x3a, 0x37, 0xe1, 0x6f, 0xb0, 0xda, 0x33, 0x94, 0x83,
	0x16, 0x96, 0xf2, 0x68, 0x0d, 0x2a, 0x29, 0xa4, 0x50, 0xff, 0xae, 0x00, 0x5b, 0x91, 0x54, 0x9b,
	0x06, 0x03, 0xfa, 0x21, 0x6f, 0x24, 0x01, 0x89, 0x26, 0x91, 0xc2, 0x30, 0x83, 0x01, 0x65, 0x61,
	0x7c, 0x29, 0x1f, 0xcc, 0x7b, 0x87, 0x18, 0x1d, 0x4f, 0xc3, 0xc9, 0x1c, 0x1f, 0x7d, 0xc1, 0x8f,
	0x37, 0x74, 0x7e, 0x4f, 0x75, 0x9f, 0x5a, 0xb1, 0x4f, 0x7f, 0x92, 0x55, 0x23, 0xa2, 0x57, 0xa8,
	0x71, 0xc8, 0xf1, 0x12, 0xc9, 0x10, 0xd0, 0x73, 0xa8, 0x84, 0x96, 0x39, 0x8c, 0xd8, 0x91, 0xa7,
	0xd6, 0xb2, 0x6c, 0x9d, 0x77, 0x66, 0xc9, 0x29, 0x1c, 0x7d, 0x0e, 0xe5, 0x91, 0x77, 0x11, 0x51,
	0x4b, 0x82, 0x7a, 0x37, 0x4b, 0x6d, 0x7b, 0x17, 0x53, 0xcc, 0x09, 0x18, 0x1d, 0xc6, 0x57, 0x31,
	0x74, 0x3c, 0x57, 0xb0, 0x97, 0x05, 0xfb, 0x7e, 0x96, 0xdd, 0x4d, 0x00, 0x59, 0x89, 0x69, 0xda,
	0xc1, 0x6a, 0x12, 0x72, 0xf8, 0x57, 0xfd, 0x5d, 0x1e, 0x6a, 0x8b, 0xb7, 0x0e, 0x3d, 0x82, 0x4d,
	0x26, 0x5a, 0x0d, 0x1a, 0x5a, 0x81, 0xe3, 0xf3, 0x2e, 0x39, 0xb7, 0x93, 0xdb, 0xad, 0x90, 0xf9,
	0x0e, 0x84, 0xa1, 0x3a, 0xe2, 0x2a, 0x11, 0x59, 0xce, 0x8b, 0x09, 0x7e, 0x7f, 0xc1, 0x29, 0x45,
	0xa0, 0x86, 0xc9, 0xcc, 0xe3, 0x25, 0x92, 0xe5, 0xa1, 0xd7, 0x80, 0xac, 0x33, 0xd3, 0x71, 0xa9,
	0x9d, 0x01, 0xc6, 0xa7, 0xb4, 0x3b, 0xe5, 0xf2, 0x11, 0x6a, 0x91, 0xe8, 0x15, 0x2a, 0x07, 0x9b,
	0xb0, 0x31, 0xe3, 0x0d, 0xf5, 0xbf, 0xe5, 0x93, 0x8c, 0x34, 0x23, 0x81, 0x5e, 0x40, 0x25, 0xa0,
	0x43, 0x93, 0x51, 0xdb, 0xf0, 0xc4, 0xaa, 0x6f, 0xe2, 0xbb, 0x29, 0x05, 0x91, 0x09, 0xff, 0xe0,
	0x32, 0xde, 0x8d, 0xa7, 0xef, 0xdd, 0x8d, 0x58, 0x8b, 0x70, 0xa2, 0xe3, 0xb9, 0xe1, 0x99, 0xe3,
	0x93, 0x54, 0xa6, 0xf6, 0x2e, 0x07, 0x68, 0x1e, 0x81, 0x0c, 0x1e, 0x41, 0x5d, 0x97, 0x66, 0x93,
	0x09, 0x9f, 0xef, 0xc3, 0xe9, 0x10, 0x21, 0x10, 0xd4, 0x8e, 0x04, 0x92, 0xef, 0x98, 0x11, 0x45,
	0xcb, 0xac, 0xe5, 0x60, 0x0b, 0x10, 0x9d, 0x1b, 0xab, 0xfe, 0x9f, 0x1c, 0xdc, 0xbb, 0x6e, 0xeb,
	0xd1, 0x2b, 0xa8, 0x46, 0xce, 0xd1, 0x72, 0xdc, 0xf3, 0x50, 0xce, 0x89, 0xdb, 0xfa, 0xf9, 0x4d,
	0x4f, 0x6e, 0x2f, 0x6d, 0x72, 0x3e, 0xc9, 0x6a, 0xf1, 0xe5, 0xaf, 0x4f, 0xf7, 0xf3, 0xa0, 0x2b,
	0xbc, 0xa7, 0xcf, 0x12, 0xb7, 0xcb, 0xdf, 0xc8, 0xed, 0xa6, 0x9d, 0x6e, 0x17, 0x56, 0x6d, 0xda,
	0xb7, 0xc7, 0xfe, 0xd0, 0xb1, 0x4c, 0x16, 0x25, 0xba, 0x49, 0x6a, 0xa8, 0xda, 0xb4, 0x91, 0xf4,
	0xd4, 0xff, 0x9a, 0x87, 0x8d, 0x99, 0xf8, 0x80, 0x8c, 0x4c, 0x80, 0xe6, 0xda, 0xf1, 0x9a, 0xf7,
	0xae, 0x89, 0x29, 0x69, 0x8c, 0x16, 0x26, 0x31, 0xa3, 0x69, 0x91, 0xda, 0xdf, 0x73, 0x80, 0xe6,
	0x51, 0xa8, 0x9d, 0xc9, 0x96, 0x7d, 0x96, 0x9e, 0xf5, 0xff, 0x96, 0x0e, 0x50, 0x07, 0x56, 0xad,
	0x33, 0xd3, 0x1d, 0x50, 0xbb, 0x6f, 0x32, 0x16, 0x08, 0x47, 0xbd, 0xb2, 0x72, 0x48, 0xaa, 0x90,
	0x89, 0x9a, 0xc2, 0x58, 0xe0, 0x9c, 0x8c, 0x19, 0x25, 0xd5, 0x58, 0x81, 0x5b, 0xea, 0x7f, 0xc9,
	0xc3, 0xfa, 0x74, 0x08, 0x44, 0xfa, 0xd5, 0xfb, 0xf3, 0x78, 0x71, 0xd4, 0xfc, 0xff, 0xdd, 0x9e,
	0x2d, 0x40, 0xf3, 0x71, 0xba, 0xde, 0x83, 0xb5, 0xa9, 0xd8, 0xff, 0x61, 0x6a, 0x89, 0xfa, 0x1f,
	0x8b, 0x80, 0x66, 0xca, 0x6d, 0x9e, 0x96, 0x3f, 0x4c, 0xdd, 0xf9, 0x2c, 0x51, 0xe1, 0xb8, 0x38,
	0x29, 0xdf, 0x5d, 0xa8, 0x42, 0x32, 0x60, 0x54, 0x83, 0xb2, 0x1f, 0x78, 0x83, 0x80, 0x86, 0xa1,
	0xb8, 0x6a, 0x05, 0x32, 0xf9, 0x46, 0x3f, 0x86, 0xf2, 0x1b, 0x2f, 0x38, 0x3f, 0x1d, 0x7a, 0x6f,
	0xe2, 0xec, 0xba, 0x95, 0x15, 0xfd, 0x3a, 0xee, 0x23, 0x13, 0x14, 0xba, 0x07, 0x95, 0x48, 0xbb,
	0xe3, 0xd8, 0x22, 0xab, 0x16, 0x49, 0x6a, 0xe0, 0x63, 0x85, 0xbc, 0x68, 0xe3, 0x65, 0xf1, 0xb2,
	0xc8, 0x5d, 0x93, 0x6f, 0xb4, 0x03, 0xd5, 0x70, 0x7c, 0xa2, 0x9a, 0x8c, 0x0e, 0xbc, 0xe0, 0x52,
	0x5e, 0x11, 0xdd, 0x59, 0x13, 0x47, 0xd0, 0xb7, 0xfe, 0xd0, 0x74, 0x45, 0x00, 0x94, 0xcb, 0x11,
	0x22, 0x63, 0x42, 0x0a, 0x54, 0xe3, 0x8c, 0xca, 0x78, 0xe4, 0xa8, 0x08, 0x07, 0xf9, 0x74, 0x7e,
	0x1f, 0x08, 0x0d, 0x7d, 0xcf, 0x0d, 0xa9, 0x80, 0x91, 0x2c, 0x07, 0xdd, 0x07, 0xb0, 0x02, 0x6a,
	0x32, 0x6a, 0x38, 0x23, 0x2a, 0x83, 0xd8, 0x90, 0x8c, 0x85, 0xf7, 0x8f, 0x7d, 0x3b, 0xe9, 0xaf,
	0x46, 0xfd, 0xa9, 0x85, 0xf7, 0x9b, 0x96, 0x45, 0xfd, 0x28, 0xd5, 0xac, 0x8a, 0x39, 0x66, 0x2c,
	0xf5, 0x7f, 0x6d, 0xc0, 0xda, 0xd4, 0x61, 0x7c, 0x20, 0x0f, 0x40, 0x50, 0x1c, 0x8f, 0x1d, 0x5b,
	0xc4, 0xdc, 0x0a, 0x11, 0x6d, 0xf4, 0x13, 0x28, 0x47, 0x91, 0x58, 0xc7, 0x72, 0x41, 0xc4, 0xe2,
	0xed, 0x2b, 0x9d, 0x96, 0x4c, 0x60, 0xe8, 0x67, 0x00, 0x67, 0x5e, 0x28, 0xa6, 0xaa, 0xe3, 0xf8,
	0xcc, 0x17, 0x90, 0x32, 0x40, 0xf4, 0x53, 0xa8, 0x58, 0xe3, 0x20, 0xa0, 0x2e, 0x1f, 0xaa, 0x74,
	0x1d, 0x2b, 0xc5, 0xa1, 0x1f, 0x41, 0xc9, 0xa5, 0x6f, 0x74, 0x1c, 0xd7, 0x4f, 0x0b, 0x08, 0x11,
	0x06, 0x3d, 0x87, 0x6a, 0xcc, 0xe4, 0xb7, 0x5a, 0xb8, 0x47, 0x75, 0x5f, 0x5e, 0x14, 0x48, 0x48,
	0x16, 0x8c, 0xf6, 0x61, 0xc5, 0xa5, 0x6f, 0x04, 0xaf, 0xfc, 0x1e, 0x5e, 0x02, 0x44, 0xdf, 0x02,
	0xb2, 0xe6, 0xc2, 0x87, 0xf0, 0x87, 0xdb, 0x86, 0x9c, 0x2b, 0x74, 0x50, 0x03, 0x2a, 0x49, 0x70,
	0x08, 0xe5, 0xea, 0xa2, 0x1a, 0x3a, 0x11, 0x4d, 0x9e, 0x36, 0x4d, 0xf7, 0xd4, 0x23, 0x29, 0x11,
	0x1d, 0x83, 0x14, 0x15, 0x05, 0xe9, 0x93, 0x5c, 0x78, 0x5c, 0x75, 0xff, 0xde, 0xfc, 0x5e, 0xa6,
	0x18, 0x32, 0xc7, 0x42, 0xcf, 0xa0, 0x6a, 0x79, 0x2e, 0xa3, 0x6f, 0x45, 0x3e, 0x96, 0xd7, 0xc4,
	0x8c, 0x3e, 0x9e, 0xa9, 0x58, 0x92, 0x6e, 0x92, 0xc5, 0xf2, 0xa3, 0x8f, 0x6b, 0x22, 0xd2, 0x94,
	0xd7, 0xaf, 0x3d, 0xfa, 0x09, 0x0e, 0x7d, 0x09, 0x9f, 0x58, 0x9e, 0x1b, 0x3a, 0x21, 0xe3, 0xae,
	0x60, 0x99, 0x43, 0xc7, 0x1d, 0xa8, 0xde, 0xc8, 0x1f, 0x3a, 0xa6, 0x6b, 0x51, 0x79, 0x83, 0xa7,
	0x7c, 0x72, 0x1d, 0x04, 0xc9, 0xb0, 0x12, 0x9a, 0x17, 0x8e, 0x3b, 0x08, 0xe5, 0xcd, 0x9d, 0xdc,
	0x6e, 0x9e, 0x24, 0x9f, 0xfc, 0x06, 0x46, 0xcd, 0x9e, 0xeb, 0x30, 0x19, 0x45, 0x37, 0x30, 0xb5,
	0xf0, 0x30, 0x62, 0x67, 0x6a, 0xe8, 0x3b, 0x51, 0x18, 0xc9, 0x98, 0xd0, 0xb7, 0xb0, 0x61, 0x9d,
	0x99, 0x81, 0x69, 0x31, 0x1a, 0x38, 0x21, 0x73, 0xac, 0x50, 0xde, 0x12, 0x0b, 0xdb, 0x5f, 0x7c,
	0x46, 0x93, 0xa0, 0xae, 0x4e, 0x33, 0xc9, 0xac, 0x14, 0xda, 0x87, 0x62, 0xe0, 0x84, 0xe7, 0xf2,
	0xf6, 0xfc, 0xab, 0x61, 0x5a, 0x92, 0x38, 0xe1, 0x39, 0x11, 0xd8, 0xda, 0x09, 0xac, 0x66, 0x9d,
	0xe0, 0x03, 0x3c, 0xe6, 0x24, 0x28, 0x38, 0x76, 0xf4, 0x7e, 0xab, 0x10, 0xde, 0xac, 0xbd, 0x06,
	0x79, 0xd1, 0x22, 0xf8, 0x9e, 0x66, 0x5e, 0xe1, 0x39, 0x71, 0x3c, 0x19, 0x0b, 0xef, 0xcf, 0x3c,
	0xe6, 0xf3, 0x51, 0x7f, 0x6a, 0xa9, 0xfd, 0xa3, 0x00, 0x45, 0xbe, 0x1c, 0xd4, 0xca, 0x64, 0x80,
	0xa8, 0x18, 0xf8, 0xe1, 0xf5, 0x1b, 0xb0, 0xa7, 0xc7, 0xf0, 0xe7, 0x2b, 0x3d, 0xed, 0xd7, 0x5a,
	0xe7, 0x6b, 0x2d, 0x93, 0x33, 0x54, 0x28, 0x5b, 0x49, 0xc2, 0xc8, 0xdf, 0x48, 0x2d, 0x49, 0x26,
	0x64, 0x42, 0x44, 0x06, 0x6c, 0x9a, 0xa7, 0xa7, 0xa2, 0x1a, 0x9f, 0xdc, 0x5e, 0xb9, 0xb0, 0x53,
	0xb8, 0x45, 0xa1, 0x32, 0x2f, 0x30, 0xeb, 0x65, 0xc5, 0x39, 0x2f, 0xab, 0x9b, 0x50, 0x9e, 0xa4,
	0xb6, 0xbb, 0xb0, 0xdd, 0xc5, 0xe4, 0xb0, 0x43, 0xda, 0x8a, 0xa6, 0xe2, 0xbe, 0xa2, 0xeb, 0x3d,
	0xc2, 0x5b, 0x52, 0x0e, 0xd5, 0xe0, 0x23, 0x7c, 0x78, 0xd8, 0x54, 0x9b, 0x58, 0x53, 0x5f, 0xf5,
	0x9b, 0xed, 0x2e, 0xe9, 0xbc, 0xc4, 0x6d, 0xac, 0x19, 0x52, 0x1e, 0xad, 0x03, 0x74, 0x09, 0x7e,
	0x89, 0x35, 0xa3, 0xd9, 0xd1, 0xa4, 0x02, 0xff, 0x56, 0x3b, 0xed, 0x6e, 0xab, 0x29, 0xb8, 0xc5,
	0xfa, 0x11, 0x94, 0x93, 0xed, 0x43, 0x55, 0x48, 0x36, 0x50, 0x5a, 0x42, 0x00, 0xcb, 0x1a, 0x1f,
	0xac, 0x25, 0xe5, 0x50, 0x05, 0x4a, 0xed, 0xa6, 0xd6, 0x21, 0x52, 0x5e, 0x34, 0x95, 0xaf, 0x3a,
	0x44, 0x2a, 0xa0, 0x55, 0x28, 0xab, 0xa4, 0x69, 0x34, 0x55, 0xa5, 0x25, 0x15, 0xeb, 0xff, 0xce,
	0x01, 0xa4, 0x89, 0x07, 0x95, 0xa1, 0xa8, 0x75, 0x34, 0x2c, 0x2d, 0x71, 0x86, 0x6e, 0x28, 0xc4,
	0x90, 0x72, 0xdc, 0xd8, 0xee, 0xbc, 0xc4, 0x52, 0x9e, 0x0f, 0xa5, 0xf7, 0xf4, 0x2e, 0xd6, 0x1a,
	0x52, 0x01, 0xad, 0x41, 0xc5, 0xc0, 0xa4, 0xdd, 0xd4, 0x14, 0x03, 0x4b, 0x45, 0x24, 0xc1, 0xaa,
	0xd2, 0x68, 0xf4, 0xf9, 0x2a, 0x9a, 0x0d, 0x4c, 0xa4, 0x65, 0x3e, 0x17, 0xf5, 0x58, 0xd1, 0x8e,
	0xb0, 0xb4, 0xc2, 0xc1, 0xa2, 0x47, 0xe7, 0xeb, 0xa9, 0xa0, 0x0d, 0xa8, 0x12, 0xac, 0x76, 0xb4,
	0xc3, 0xe6, 0x51, 0x8f, 0x60, 0x09, 0x38, 0x96, 0x60, 0xbd, 0xf9, 0x1a, 0x4b, 0x55, 0x74, 0x07,
	0x36, 0xa2, 0x76, 0x5f, 0x55, 0xba, 0x8a, 0xda, 0x34, 0x5e, 0x49, 0xab, 0x1c, 0xd0, 0xc0, 0x2d,
	0x6c, 0x60, 0x69, 0x83, 0xef, 0x06, 0x69, 0x1e, 0x1d, 0x1b, 0x7d, 0x41, 0x90, 0xd0, 0x36, 0x6c,
	0xaa, 0xa4, 0xa3, 0xeb, 0x7d, 0x43, 0x21, 0x47, 0xd8, 0xe8, 0x8b, 0xd9, 0x6e, 0xa3, 0x4d, 0x58,
	0xe3, 0xad, 0xbe, 0xd1, 0x39, 0xc2, 0xc6, 0x31, 0x26, 0xd2, 0x47, 0x62, 0x55, 0xaa, 0xd2, 0xc2,
	0x92, 0x5c, 0x7f, 0x91, 0xa9, 0x6c, 0xd3, 0xf8, 0xcd, 0x77, 0xc7, 0xf4, 0x4d, 0xcb, 0x61, 0x97,
	0xd1, 0x26, 0xb4, 0x9c, 0x91, 0xc3, 0xa4, 0x9c, 0x98, 0x31, 0x0d, 0x69, 0x70, 0x21, 0x0a, 0x12,
	0x29, 0x5f, 0xff, 0xe7, 0x32, 0x94, 0x93, 0x3a, 0x09, 0xad, 0x43, 0xde, 0xb1, 0xc5, 0x75, 0xad,
	0x90, 0xbc, 0x63, 0x0b, 0x27, 0x71, 0x42, 0x7f, 0x68, 0x5e, 0x6a, 0xe6, 0x28, 0xba, 0x37, 0xdc,
	0x49, 0x52, 0xd3, 0xac, 0x1b, 0x15, 0xe6, 0x83, 0xd5, 0x53, 0x28, 0xf9, 0x66, 0x60, 0x8e, 0xe4,
	0xa2, 0x08, 0xda, 0xf7, 0xaf, 0x2a, 0xd0, 0xf6, 0xba, 0x1c, 0x41, 0x19, 0x0d, 0x48, 0x04, 0x46,
	0xcf, 0x44, 0xd5, 0xe7, 0xd3, 0x80, 0x5d, 0xca, 0x25, 0x41, 0xfc, 0xde, 0xd5, 0xc4, 0x18, 0x44,
	0x26, 0xf0, 0x99, 0xd8, 0xb3, 0x7c, 0xc3, 0xc7, 0x78, 0x36, 0xf6, 0xf0, 0x08, 0x2d, 0xe6, 0xdf,
	0x35, 0xd9, 0x59, 0x5c, 0xe9, 0x65, 0x2c, 0x33, 0x15, 0x51, 0x59, 0x8c, 0x70, 0xfb, 0x8a, 0xe8,
	0x57, 0x50, 0xf2, 0xcf, 0xcc, 0x30, 0x29, 0x03, 0x1f, 0x5c, 0xb9, 0xbe, 0x88, 0xab, 0x47, 0x63,
	0x73, 0x34, 0x89, 0x48, 0xe8, 0x21, 0x48, 0xcc, 0x19, 0x51, 0x71, 0xae, 0x3a, 0xb5, 0x3c, 0xd7,
	0x0e, 0xe3, 0x6a, 0x70, 0xce, 0x8e, 0x7e, 0x01, 0x1f, 0x9b, 0xbe, 0xd3, 0xa6, 0x61, 0x68, 0x0e,
	0xe8, 0xa1, 0x17, 0x8c, 0x4c, 0x86, 0x5d, 0xf3, 0x64, 0x48, 0x6d, 0x51, 0x20, 0x96, 0xc9, 0xa2,
	0xee, 0xda, 0x1f, 0x72, 0x50, 0x99, 0x9c, 0x0d, 0xaf, 0xe1, 0x5c, 0xee, 0x07, 0x91, 0x83, 0x88,
	0xf6, 0xac, 0x03, 0xe4, 0xe7, 0x1d, 0xa0, 0x06, 0x45, 0xf1, 0xb6, 0xe2, 0x15, 0x5e, 0xe5, 0xf9,
	0xb2, 0xce, 0x02, 0xc7, 0x1d, 0x10, 0x61, 0x43, 0x75, 0xa8, 0x8c, 0x4c, 0xd7, 0x36, 0x19, 0x8f,
	0x90, 0xc5, 0xcc, 0x8f, 0xa7, 0xa9, 0xb9, 0xf6, 0x14, 0xca, 0xc9, 0x29, 0x5f, 0x39, 0x83, 0x2d,
	0x28, 0x5d, 0x98, 0xc3, 0x31, 0x8d, 0x4b, 0xcb, 0xe8, 0xa3, 0xee, 0xc0, 0xe6, 0xdc, 0xde, 0xf1,
	0xab, 0xd4, 0xd1, 0xfa, 0x47, 0x58, 0xc3, 0x44, 0x11, 0x21, 0xa9, 0xc8, 0x6f, 0x8a, 0xd2, 0xe5,
	0x77, 0x5a, 0x69, 0x49, 0x25, 0xb4, 0x02, 0x85, 0x2e, 0xe1, 0x51, 0xad, 0x0a, 0x2b, 0x04, 0x77,
	0x5b, 0x8a, 0xca, 0xe3, 0x45, 0x19, 0x8a, 0xdd, 0x8e, 0x6e, 0x48, 0x05, 0x7e, 0xa7, 0x95, 0x43,
	0x03, 0x93, 0xf8, 0x27, 0x4e, 0x2e, 0xb1, 0x5c, 0x3f, 0x86, 0xf5, 0xf8, 0xe1, 0x14, 0x04, 0x5e,
	0xc0, 0xcb, 0x95, 0xa9, 0x57, 0x06, 0x9f, 0x6b, 0x21, 0xfb, 0xca, 0x90, 0x61, 0x65, 0x14, 0x6d,
	0x76, 0x3c, 0xe5, 0xe4, 0xb3, 0xfe, 0x2e, 0x3f, 0x91, 0xba, 0xa0, 0x2e, 0xe3, 0x52, 0x3f, 0x87,
	0xe5, 0x88, 0x29, 0x74, 0xae, 0xcc, 0xc7, 0xd9, 0xf7, 0x1a, 0x89, 0xd1, 0xe8, 0x97, 0x50, 0xf6,
	0x86, 0x76, 0xf4, 0xce, 0x88, 0x7e, 0xe1, 0x7f, 0xef, 0x3b, 0x63, 0x42, 0xe0, 0x64, 0x5e, 0xd5,
	0xb2, 0xe8, 0xe7, 0x8d, 0x9b, 0x91, 0x13, 0x02, 0x5f, 0x3c, 0xf7, 0xc0, 0x90, 0x99, 0x23, 0x5f,
	0x2e, 0x46, 0x8b, 0x9f, 0x18, 0x66, 0xde, 0x1f, 0xa5, 0xb9, 0xf7, 0x47, 0x03, 0x10, 0x7e, 0xcb,
	0x68, 0xe0, 0x9a, 0xc3, 0xf8, 0x16, 0xf1, 0x7a, 0x42, 0x82, 0xc2, 0x38, 0x18, 0xc6, 0xdb, 0xc5,
	0x9b, 0x7c, 0x94, 0xf0, 0xcc, 0x0b, 0x98, 0x08, 0x4c, 0xc2, 0xb5, 0x48, 0x6a, 0x78, 0xf8, 0x5d,
	0x2e, 0xf9, 0x17, 0x65, 0x6a, 0x96, 0x08, 0xc1, 0x3a, 0x0f, 0xfb, 0x4d, 0xed, 0xa8, 0xaf, 0xa8,
	0x2a, 0xee, 0x1a, 0xd2, 0x92, 0xf0, 0x00, 0xd1, 0x16, 0x3f, 0x61, 0xaf, 0x42, 0x99, 0xe0, 0xaf,
	0xb0, 0xca, 0xbf, 0xf2, 0x3c, 0x5c, 0x36, 0x35, 0x9e, 0x0c, 0x8e, 0x08, 0xd6, 0xf5, 0x28, 0x5b,
	0xe8, 0x3d, 0x55, 0xc5, 0xb8, 0x81, 0x1b, 0x52, 0x91, 0x87, 0xf3, 0x43, 0xa5, 0xd9, 0xc2, 0x0d,
	0xa9, 0x94, 0x24, 0x83, 0x76, 0x1b, 0x6b, 0xbc, 0x73, 0x99, 0x4b, 0x35, 0x9a, 0xba, 0x72, 0xc0,
	0xbb, 0x57, 0x38, 0xf4, 0x37, 0x3d, 0xdc, 0xc3, 0x0d, 0xa9, 0xcc, 0xbd, 0x4b, 0x6d, 0x61, 0x85,
	0xe0, 0x86, 0x54, 0xe1, 0x1f, 0x5c, 0xa3, 0xa9, 0x1d, 0x49, 0x70, 0xf0, 0x3b, 0xf8, 0xd4, 0xf2,
	0x46, 0x7b, 0x17, 0x23, 0x36, 0x0e, 0x4e, 0xbc, 0x3d, 0x7f, 0x68, 0xb2, 0x53, 0x2f, 0x18, 0xc5,
	0xbb, 0xbf, 0x67, 0x33, 0xef, 0x60, 0x63, 0xe6, 0xd4, 0x5f, 0x3f, 0x1a, 0x38, 0xec, 0x6c, 0x7c,
	0xc2, 0x31, 0x4f, 0x04, 0xcd, 0xf5, 0x46, 0x8e, 0x15, 0x35, 0x1f, 0x0f, 0xbc, 0xc7, 0xa1, 0x7d,
	0xfe, 0xc4, 0x3f, 0x1f, 0x3c, 0x11, 0xff, 0x86, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0xf7, 0x9e,
	0xd6, 0x44, 0x54, 0x1b, 0x00, 0x00,
}
