// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ActionExecution.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ActionResponseState int32

const (
	ActionResponseState_PENDING_ACCEPT ActionResponseState = 0
	ActionResponseState_ACCEPTED       ActionResponseState = 1
	ActionResponseState_REJECTED       ActionResponseState = 2
	ActionResponseState_IN_PROGRESS    ActionResponseState = 3
	ActionResponseState_SUCCEEDED      ActionResponseState = 4
	ActionResponseState_FAILED         ActionResponseState = 5
	ActionResponseState_RECOMMENDED    ActionResponseState = 6
	ActionResponseState_DISABLED       ActionResponseState = 7
	ActionResponseState_QUEUED         ActionResponseState = 8
	ActionResponseState_CLEARED        ActionResponseState = 9
)

var ActionResponseState_name = map[int32]string{
	0: "PENDING_ACCEPT",
	1: "ACCEPTED",
	2: "REJECTED",
	3: "IN_PROGRESS",
	4: "SUCCEEDED",
	5: "FAILED",
	6: "RECOMMENDED",
	7: "DISABLED",
	8: "QUEUED",
	9: "CLEARED",
}

var ActionResponseState_value = map[string]int32{
	"PENDING_ACCEPT": 0,
	"ACCEPTED":       1,
	"REJECTED":       2,
	"IN_PROGRESS":    3,
	"SUCCEEDED":      4,
	"FAILED":         5,
	"RECOMMENDED":    6,
	"DISABLED":       7,
	"QUEUED":         8,
	"CLEARED":        9,
}

func (x ActionResponseState) Enum() *ActionResponseState {
	p := new(ActionResponseState)
	*p = x
	return p
}

func (x ActionResponseState) String() string {
	return proto.EnumName(ActionResponseState_name, int32(x))
}

func (x *ActionResponseState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionResponseState_value, data, "ActionResponseState")
	if err != nil {
		return err
	}
	*x = ActionResponseState(value)
	return nil
}

func (ActionResponseState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0}
}

// Defines how action can be executed by the probe
type ActionPolicyDTO_ActionCapability int32

const (
	// The action does not make sense for the probe. Actions of this type should not be shown
	// to the user.
	ActionPolicyDTO_NOT_SUPPORTED ActionPolicyDTO_ActionCapability = 1
	// The probe does not support executing the action, but it may still make sense to display
	// actions of this type to the user. For example, VSTORAGE resize is not supported in VCenter,
	// but many users still wish to see actions of this type.
	ActionPolicyDTO_NOT_EXECUTABLE ActionPolicyDTO_ActionCapability = 2
	// The probe supports execution of the action. Actions of this type are displayed to the user.
	ActionPolicyDTO_SUPPORTED ActionPolicyDTO_ActionCapability = 3
)

var ActionPolicyDTO_ActionCapability_name = map[int32]string{
	1: "NOT_SUPPORTED",
	2: "NOT_EXECUTABLE",
	3: "SUPPORTED",
}

var ActionPolicyDTO_ActionCapability_value = map[string]int32{
	"NOT_SUPPORTED":  1,
	"NOT_EXECUTABLE": 2,
	"SUPPORTED":      3,
}

func (x ActionPolicyDTO_ActionCapability) Enum() *ActionPolicyDTO_ActionCapability {
	p := new(ActionPolicyDTO_ActionCapability)
	*p = x
	return p
}

func (x ActionPolicyDTO_ActionCapability) String() string {
	return proto.EnumName(ActionPolicyDTO_ActionCapability_name, int32(x))
}

func (x *ActionPolicyDTO_ActionCapability) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionPolicyDTO_ActionCapability_value, data, "ActionPolicyDTO_ActionCapability")
	if err != nil {
		return err
	}
	*x = ActionPolicyDTO_ActionCapability(value)
	return nil
}

func (ActionPolicyDTO_ActionCapability) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0, 0}
}

type ActionItemDTO_ActionType int32

const (
	ActionItemDTO_NONE              ActionItemDTO_ActionType = 0
	ActionItemDTO_START             ActionItemDTO_ActionType = 1
	ActionItemDTO_MOVE              ActionItemDTO_ActionType = 2
	ActionItemDTO_SUSPEND           ActionItemDTO_ActionType = 3
	ActionItemDTO_TERMINATE         ActionItemDTO_ActionType = 4
	ActionItemDTO_ADD_PROVIDER      ActionItemDTO_ActionType = 6
	ActionItemDTO_CHANGE            ActionItemDTO_ActionType = 7
	ActionItemDTO_PROVISION         ActionItemDTO_ActionType = 9
	ActionItemDTO_RECONFIGURE       ActionItemDTO_ActionType = 10
	ActionItemDTO_RESIZE            ActionItemDTO_ActionType = 11
	ActionItemDTO_RESIZE_CAPACITY   ActionItemDTO_ActionType = 12
	ActionItemDTO_DELETE            ActionItemDTO_ActionType = 15
	ActionItemDTO_RIGHT_SIZE        ActionItemDTO_ActionType = 16
	ActionItemDTO_CROSS_TARGET_MOVE ActionItemDTO_ActionType = 21
	ActionItemDTO_MOVE_TOGETHER     ActionItemDTO_ActionType = 22
	// Scale a workload. Currently this action type is used to represent Cloud Move actions
	// for workloads when they are moved from one template to another. Market doesn't generate
	// Scale actions but Action Orchestrator translates Cloud Moves to Scale actions. Cloud
	// Probes expect Scale type for moving VMs between compute tiers.
	ActionItemDTO_SCALE ActionItemDTO_ActionType = 24
)

var ActionItemDTO_ActionType_name = map[int32]string{
	0:  "NONE",
	1:  "START",
	2:  "MOVE",
	3:  "SUSPEND",
	4:  "TERMINATE",
	6:  "ADD_PROVIDER",
	7:  "CHANGE",
	9:  "PROVISION",
	10: "RECONFIGURE",
	11: "RESIZE",
	12: "RESIZE_CAPACITY",
	15: "DELETE",
	16: "RIGHT_SIZE",
	21: "CROSS_TARGET_MOVE",
	22: "MOVE_TOGETHER",
	24: "SCALE",
}

var ActionItemDTO_ActionType_value = map[string]int32{
	"NONE":              0,
	"START":             1,
	"MOVE":              2,
	"SUSPEND":           3,
	"TERMINATE":         4,
	"ADD_PROVIDER":      6,
	"CHANGE":            7,
	"PROVISION":         9,
	"RECONFIGURE":       10,
	"RESIZE":            11,
	"RESIZE_CAPACITY":   12,
	"DELETE":            15,
	"RIGHT_SIZE":        16,
	"CROSS_TARGET_MOVE": 21,
	"MOVE_TOGETHER":     22,
	"SCALE":             24,
}

func (x ActionItemDTO_ActionType) Enum() *ActionItemDTO_ActionType {
	p := new(ActionItemDTO_ActionType)
	*p = x
	return p
}

func (x ActionItemDTO_ActionType) String() string {
	return proto.EnumName(ActionItemDTO_ActionType_name, int32(x))
}

func (x *ActionItemDTO_ActionType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionItemDTO_ActionType_value, data, "ActionItemDTO_ActionType")
	if err != nil {
		return err
	}
	*x = ActionItemDTO_ActionType(value)
	return nil
}

func (ActionItemDTO_ActionType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{2, 0}
}

type ActionItemDTO_CommodityAttribute int32

const (
	ActionItemDTO_Capacity    ActionItemDTO_CommodityAttribute = 0
	ActionItemDTO_Limit       ActionItemDTO_CommodityAttribute = 1
	ActionItemDTO_Reservation ActionItemDTO_CommodityAttribute = 2
)

var ActionItemDTO_CommodityAttribute_name = map[int32]string{
	0: "Capacity",
	1: "Limit",
	2: "Reservation",
}

var ActionItemDTO_CommodityAttribute_value = map[string]int32{
	"Capacity":    0,
	"Limit":       1,
	"Reservation": 2,
}

func (x ActionItemDTO_CommodityAttribute) Enum() *ActionItemDTO_CommodityAttribute {
	p := new(ActionItemDTO_CommodityAttribute)
	*p = x
	return p
}

func (x ActionItemDTO_CommodityAttribute) String() string {
	return proto.EnumName(ActionItemDTO_CommodityAttribute_name, int32(x))
}

func (x *ActionItemDTO_CommodityAttribute) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ActionItemDTO_CommodityAttribute_value, data, "ActionItemDTO_CommodityAttribute")
	if err != nil {
		return err
	}
	*x = ActionItemDTO_CommodityAttribute(value)
	return nil
}

func (ActionItemDTO_CommodityAttribute) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{2, 1}
}

type Workflow_ActionScriptPhase int32

const (
	// PRE actions are performed prior to the primary action
	Workflow_PRE Workflow_ActionScriptPhase = 1
	// REPLACE actions are performed in place of the built-in action
	Workflow_REPLACE Workflow_ActionScriptPhase = 2
	// POST actions are performed after the primary action
	Workflow_POST Workflow_ActionScriptPhase = 3
)

var Workflow_ActionScriptPhase_name = map[int32]string{
	1: "PRE",
	2: "REPLACE",
	3: "POST",
}

var Workflow_ActionScriptPhase_value = map[string]int32{
	"PRE":     1,
	"REPLACE": 2,
	"POST":    3,
}

func (x Workflow_ActionScriptPhase) Enum() *Workflow_ActionScriptPhase {
	p := new(Workflow_ActionScriptPhase)
	*p = x
	return p
}

func (x Workflow_ActionScriptPhase) String() string {
	return proto.EnumName(Workflow_ActionScriptPhase_name, int32(x))
}

func (x *Workflow_ActionScriptPhase) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Workflow_ActionScriptPhase_value, data, "Workflow_ActionScriptPhase")
	if err != nil {
		return err
	}
	*x = Workflow_ActionScriptPhase(value)
	return nil
}

func (Workflow_ActionScriptPhase) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{3, 0}
}

// ActionPolicyDTO defines action execution policy for an EntityType.
// Every EntityType can be associated with a list of actions and execution modes.
// E.g., 'Resize' action can be defined as 'Recommend' for Virtual Machines.
type ActionPolicyDTO struct {
	// Entity type which the policy is applied to
	EntityType *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// Action policy elements (for every supported action type)
	PolicyElement        []*ActionPolicyDTO_ActionPolicyElement `protobuf:"bytes,2,rep,name=policyElement" json:"policyElement,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *ActionPolicyDTO) Reset()         { *m = ActionPolicyDTO{} }
func (m *ActionPolicyDTO) String() string { return proto.CompactTextString(m) }
func (*ActionPolicyDTO) ProtoMessage()    {}
func (*ActionPolicyDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0}
}

func (m *ActionPolicyDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPolicyDTO.Unmarshal(m, b)
}
func (m *ActionPolicyDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPolicyDTO.Marshal(b, m, deterministic)
}
func (m *ActionPolicyDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPolicyDTO.Merge(m, src)
}
func (m *ActionPolicyDTO) XXX_Size() int {
	return xxx_messageInfo_ActionPolicyDTO.Size(m)
}
func (m *ActionPolicyDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPolicyDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPolicyDTO proto.InternalMessageInfo

func (m *ActionPolicyDTO) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *ActionPolicyDTO) GetPolicyElement() []*ActionPolicyDTO_ActionPolicyElement {
	if m != nil {
		return m.PolicyElement
	}
	return nil
}

// Policy applied to a particular action type
//
// If no value is sent for an EntityType/ActionCapability pair, the capability
// for that ActionCapability on that EntityType will be treated as NOT_EXECUTABLE.
//
// For example, if a probe sends a SUPPORTED value for VIRTUAL_MACHINE MOVE but no value
// for VIRTUAL_MACHINE SUSPEND, then VIRTUAL_MACHINE SUSPEND will be treated as NOT_EXECUTABLE.
type ActionPolicyDTO_ActionPolicyElement struct {
	// Action type
	ActionType *ActionItemDTO_ActionType `protobuf:"varint,1,req,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	// Action execution capability
	ActionCapability     *ActionPolicyDTO_ActionCapability `protobuf:"varint,2,req,name=actionCapability,enum=common_dto.ActionPolicyDTO_ActionCapability" json:"actionCapability,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ActionPolicyDTO_ActionPolicyElement) Reset()         { *m = ActionPolicyDTO_ActionPolicyElement{} }
func (m *ActionPolicyDTO_ActionPolicyElement) String() string { return proto.CompactTextString(m) }
func (*ActionPolicyDTO_ActionPolicyElement) ProtoMessage()    {}
func (*ActionPolicyDTO_ActionPolicyElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{0, 0}
}

func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Unmarshal(m, b)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Marshal(b, m, deterministic)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Merge(m, src)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_Size() int {
	return xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.Size(m)
}
func (m *ActionPolicyDTO_ActionPolicyElement) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement.DiscardUnknown(m)
}

var xxx_messageInfo_ActionPolicyDTO_ActionPolicyElement proto.InternalMessageInfo

func (m *ActionPolicyDTO_ActionPolicyElement) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *ActionPolicyDTO_ActionPolicyElement) GetActionCapability() ActionPolicyDTO_ActionCapability {
	if m != nil && m.ActionCapability != nil {
		return *m.ActionCapability
	}
	return ActionPolicyDTO_NOT_SUPPORTED
}

// ActionExecutionDTO may contain one or more action items related to the overall action to be
// executed.
type ActionExecutionDTO struct {
	// Overall action type.  In most cases this action type will be the same as the action type
	// specified in the action items contained within this.
	ActionType *ActionItemDTO_ActionType `protobuf:"varint,1,req,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	// One or more action items related to the overall action to be executed
	ActionItem []*ActionItemDTO `protobuf:"bytes,2,rep,name=actionItem" json:"actionItem,omitempty"`
	// Action Execution Progress
	Progress *int64 `protobuf:"varint,3,opt,name=progress" json:"progress,omitempty"`
	// There may be an action orchestration workflow
	// associated with the execution of an action
	Workflow *Workflow `protobuf:"bytes,4,opt,name=workflow" json:"workflow,omitempty"`
	// Action OID generated by the platform side. It identifies an action uniquely
	// TODO make the field required as soon as we implement OIDs for actions
	ActionOid *uint64 `protobuf:"varint,5,opt,name=actionOid" json:"actionOid,omitempty"`
	// Action severity
	Severity *string `protobuf:"bytes,6,opt,name=severity" json:"severity,omitempty"`
	// Action subCategory (received from relatedProblems in ActionItem)
	SubCategory *string `protobuf:"bytes,7,opt,name=subCategory" json:"subCategory,omitempty"`
	// Action description
	Explanation          *string  `protobuf:"bytes,8,opt,name=explanation" json:"explanation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionExecutionDTO) Reset()         { *m = ActionExecutionDTO{} }
func (m *ActionExecutionDTO) String() string { return proto.CompactTextString(m) }
func (*ActionExecutionDTO) ProtoMessage()    {}
func (*ActionExecutionDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{1}
}

func (m *ActionExecutionDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionExecutionDTO.Unmarshal(m, b)
}
func (m *ActionExecutionDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionExecutionDTO.Marshal(b, m, deterministic)
}
func (m *ActionExecutionDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionExecutionDTO.Merge(m, src)
}
func (m *ActionExecutionDTO) XXX_Size() int {
	return xxx_messageInfo_ActionExecutionDTO.Size(m)
}
func (m *ActionExecutionDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionExecutionDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionExecutionDTO proto.InternalMessageInfo

func (m *ActionExecutionDTO) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *ActionExecutionDTO) GetActionItem() []*ActionItemDTO {
	if m != nil {
		return m.ActionItem
	}
	return nil
}

func (m *ActionExecutionDTO) GetProgress() int64 {
	if m != nil && m.Progress != nil {
		return *m.Progress
	}
	return 0
}

func (m *ActionExecutionDTO) GetWorkflow() *Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

func (m *ActionExecutionDTO) GetActionOid() uint64 {
	if m != nil && m.ActionOid != nil {
		return *m.ActionOid
	}
	return 0
}

func (m *ActionExecutionDTO) GetSeverity() string {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return ""
}

func (m *ActionExecutionDTO) GetSubCategory() string {
	if m != nil && m.SubCategory != nil {
		return *m.SubCategory
	}
	return ""
}

func (m *ActionExecutionDTO) GetExplanation() string {
	if m != nil && m.Explanation != nil {
		return *m.Explanation
	}
	return ""
}

// This message holds values necessary for executing actions on Service Entity discovered with SDK probe
type ActionItemDTO struct {
	// ActionType of the action
	ActionType *ActionItemDTO_ActionType `protobuf:"varint,1,req,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	// ActionItem's uuid
	Uuid *string `protobuf:"bytes,2,req,name=uuid" json:"uuid,omitempty"`
	// EntityDTO for the Target ServiceEntity on which the action should be applied
	TargetSE *EntityDTO `protobuf:"bytes,3,req,name=targetSE" json:"targetSE,omitempty"`
	// EntityDTO for the service entity which hosts the targetSE
	HostedBySE *EntityDTO `protobuf:"bytes,4,opt,name=hostedBySE" json:"hostedBySE,omitempty"`
	// EntityDTO for the ServiceEntity by which the Target ServiceEntity is hosted now (for Move action only)
	CurrentSE *EntityDTO `protobuf:"bytes,5,opt,name=currentSE" json:"currentSE,omitempty"`
	// EntityDTO for the ServiceEntity by which the Target ServiceEntity will be hosted
	// after applied the action (for Move action only)
	NewSE *EntityDTO `protobuf:"bytes,6,opt,name=newSE" json:"newSE,omitempty"`
	// CommodityDTO for the commodity on which the action
	// should be applied (current values)
	CurrentComm *CommodityDTO `protobuf:"bytes,7,opt,name=currentComm" json:"currentComm,omitempty"`
	// CommodityDTO for the commodity on which the action
	// should be applied (after the action is applied)
	NewComm *CommodityDTO `protobuf:"bytes,8,opt,name=newComm" json:"newComm,omitempty"`
	// CommodityAttribute enum notifying type of changed attribute
	CommodityAttribute *ActionItemDTO_CommodityAttribute `protobuf:"varint,10,opt,name=commodityAttribute,enum=common_dto.ActionItemDTO_CommodityAttribute" json:"commodityAttribute,omitempty"`
	// Information for providers of the targetSE.
	Providers []*ActionItemDTO_ProviderInfo `protobuf:"bytes,11,rep,name=providers" json:"providers,omitempty"`
	// Profile related information used in executing a deploy action
	EntityProfileDTO *EntityProfileDTO `protobuf:"bytes,12,opt,name=entityProfileDTO" json:"entityProfileDTO,omitempty"`
	// Context data used in executing actions
	ContextData []*ContextData `protobuf:"bytes,13,rep,name=contextData" json:"contextData,omitempty"`
	// The Reserved Instance, if any, associated with the action, eg
	// if a move or resize is taking advantage of an RI.
	RelatedRI *EntityDTO `protobuf:"bytes,14,opt,name=relatedRI" json:"relatedRI,omitempty"`
	// Whether the action item is related to consistent scaling
	ConsistentScalingCompliance *bool `protobuf:"varint,15,opt,name=consistentScalingCompliance" json:"consistentScalingCompliance,omitempty"`
	// Action savings
	Savings *float32 `protobuf:"fixed32,17,opt,name=savings" json:"savings,omitempty"`
	// Action saving unit
	SavingUnit           *string  `protobuf:"bytes,18,opt,name=savingUnit" json:"savingUnit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionItemDTO) Reset()         { *m = ActionItemDTO{} }
func (m *ActionItemDTO) String() string { return proto.CompactTextString(m) }
func (*ActionItemDTO) ProtoMessage()    {}
func (*ActionItemDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{2}
}

func (m *ActionItemDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionItemDTO.Unmarshal(m, b)
}
func (m *ActionItemDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionItemDTO.Marshal(b, m, deterministic)
}
func (m *ActionItemDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionItemDTO.Merge(m, src)
}
func (m *ActionItemDTO) XXX_Size() int {
	return xxx_messageInfo_ActionItemDTO.Size(m)
}
func (m *ActionItemDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionItemDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionItemDTO proto.InternalMessageInfo

func (m *ActionItemDTO) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *ActionItemDTO) GetUuid() string {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return ""
}

func (m *ActionItemDTO) GetTargetSE() *EntityDTO {
	if m != nil {
		return m.TargetSE
	}
	return nil
}

func (m *ActionItemDTO) GetHostedBySE() *EntityDTO {
	if m != nil {
		return m.HostedBySE
	}
	return nil
}

func (m *ActionItemDTO) GetCurrentSE() *EntityDTO {
	if m != nil {
		return m.CurrentSE
	}
	return nil
}

func (m *ActionItemDTO) GetNewSE() *EntityDTO {
	if m != nil {
		return m.NewSE
	}
	return nil
}

func (m *ActionItemDTO) GetCurrentComm() *CommodityDTO {
	if m != nil {
		return m.CurrentComm
	}
	return nil
}

func (m *ActionItemDTO) GetNewComm() *CommodityDTO {
	if m != nil {
		return m.NewComm
	}
	return nil
}

func (m *ActionItemDTO) GetCommodityAttribute() ActionItemDTO_CommodityAttribute {
	if m != nil && m.CommodityAttribute != nil {
		return *m.CommodityAttribute
	}
	return ActionItemDTO_Capacity
}

func (m *ActionItemDTO) GetProviders() []*ActionItemDTO_ProviderInfo {
	if m != nil {
		return m.Providers
	}
	return nil
}

func (m *ActionItemDTO) GetEntityProfileDTO() *EntityProfileDTO {
	if m != nil {
		return m.EntityProfileDTO
	}
	return nil
}

func (m *ActionItemDTO) GetContextData() []*ContextData {
	if m != nil {
		return m.ContextData
	}
	return nil
}

func (m *ActionItemDTO) GetRelatedRI() *EntityDTO {
	if m != nil {
		return m.RelatedRI
	}
	return nil
}

func (m *ActionItemDTO) GetConsistentScalingCompliance() bool {
	if m != nil && m.ConsistentScalingCompliance != nil {
		return *m.ConsistentScalingCompliance
	}
	return false
}

func (m *ActionItemDTO) GetSavings() float32 {
	if m != nil && m.Savings != nil {
		return *m.Savings
	}
	return 0
}

func (m *ActionItemDTO) GetSavingUnit() string {
	if m != nil && m.SavingUnit != nil {
		return *m.SavingUnit
	}
	return ""
}

// This message holds provider information for the target SE of this ActionItem.
type ActionItemDTO_ProviderInfo struct {
	EntityType           *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	Ids                  []string              `protobuf:"bytes,2,rep,name=ids" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ActionItemDTO_ProviderInfo) Reset()         { *m = ActionItemDTO_ProviderInfo{} }
func (m *ActionItemDTO_ProviderInfo) String() string { return proto.CompactTextString(m) }
func (*ActionItemDTO_ProviderInfo) ProtoMessage()    {}
func (*ActionItemDTO_ProviderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{2, 0}
}

func (m *ActionItemDTO_ProviderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionItemDTO_ProviderInfo.Unmarshal(m, b)
}
func (m *ActionItemDTO_ProviderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionItemDTO_ProviderInfo.Marshal(b, m, deterministic)
}
func (m *ActionItemDTO_ProviderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionItemDTO_ProviderInfo.Merge(m, src)
}
func (m *ActionItemDTO_ProviderInfo) XXX_Size() int {
	return xxx_messageInfo_ActionItemDTO_ProviderInfo.Size(m)
}
func (m *ActionItemDTO_ProviderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionItemDTO_ProviderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ActionItemDTO_ProviderInfo proto.InternalMessageInfo

func (m *ActionItemDTO_ProviderInfo) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *ActionItemDTO_ProviderInfo) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

type Workflow struct {
	Id          *string `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	DisplayName *string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	// parameters describe values that will be conveyed to the workflow at execution time
	Param []*Workflow_Parameter `protobuf:"bytes,4,rep,name=param" json:"param,omitempty"`
	// property field used for AWS catalogs modeled as workflows. It is
	// not used in other cases
	Property   []*Workflow_Property  `protobuf:"bytes,5,rep,name=property" json:"property,omitempty"`
	EntityType *EntityDTO_EntityType `protobuf:"varint,6,opt,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// Remaining fields are unused in classic OpsManager.
	// scriptPath is used for action scripts in XL, and in that context
	// it is required.
	ScriptPath *string                     `protobuf:"bytes,7,opt,name=scriptPath" json:"scriptPath,omitempty"`
	ActionType *ActionItemDTO_ActionType   `protobuf:"varint,8,opt,name=actionType,enum=common_dto.ActionItemDTO_ActionType" json:"actionType,omitempty"`
	Phase      *Workflow_ActionScriptPhase `protobuf:"varint,9,opt,name=phase,enum=common_dto.Workflow_ActionScriptPhase" json:"phase,omitempty"`
	// max seconds to allow action script to execute before attemting to terminate
	// it by sending a TERM signal (a default is used if missing)
	TimeLimitSeconds     *int64   `protobuf:"varint,10,opt,name=timeLimitSeconds" json:"timeLimitSeconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{3}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetId() string {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return ""
}

func (m *Workflow) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *Workflow) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Workflow) GetParam() []*Workflow_Parameter {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *Workflow) GetProperty() []*Workflow_Property {
	if m != nil {
		return m.Property
	}
	return nil
}

func (m *Workflow) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *Workflow) GetScriptPath() string {
	if m != nil && m.ScriptPath != nil {
		return *m.ScriptPath
	}
	return ""
}

func (m *Workflow) GetActionType() ActionItemDTO_ActionType {
	if m != nil && m.ActionType != nil {
		return *m.ActionType
	}
	return ActionItemDTO_NONE
}

func (m *Workflow) GetPhase() Workflow_ActionScriptPhase {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return Workflow_PRE
}

func (m *Workflow) GetTimeLimitSeconds() int64 {
	if m != nil && m.TimeLimitSeconds != nil {
		return *m.TimeLimitSeconds
	}
	return 0
}

type Workflow_Parameter struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Description          *string  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Type                 *string  `protobuf:"bytes,3,req,name=type,def=String" json:"type,omitempty"`
	Mandatory            *bool    `protobuf:"varint,4,opt,name=mandatory,def=1" json:"mandatory,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow_Parameter) Reset()         { *m = Workflow_Parameter{} }
func (m *Workflow_Parameter) String() string { return proto.CompactTextString(m) }
func (*Workflow_Parameter) ProtoMessage()    {}
func (*Workflow_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{3, 0}
}

func (m *Workflow_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow_Parameter.Unmarshal(m, b)
}
func (m *Workflow_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow_Parameter.Marshal(b, m, deterministic)
}
func (m *Workflow_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow_Parameter.Merge(m, src)
}
func (m *Workflow_Parameter) XXX_Size() int {
	return xxx_messageInfo_Workflow_Parameter.Size(m)
}
func (m *Workflow_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow_Parameter proto.InternalMessageInfo

const Default_Workflow_Parameter_Type string = "String"
const Default_Workflow_Parameter_Mandatory bool = true

func (m *Workflow_Parameter) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Workflow_Parameter) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Workflow_Parameter) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_Workflow_Parameter_Type
}

func (m *Workflow_Parameter) GetMandatory() bool {
	if m != nil && m.Mandatory != nil {
		return *m.Mandatory
	}
	return Default_Workflow_Parameter_Mandatory
}

type Workflow_Property struct {
	Name                 *string  `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Value                *string  `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow_Property) Reset()         { *m = Workflow_Property{} }
func (m *Workflow_Property) String() string { return proto.CompactTextString(m) }
func (*Workflow_Property) ProtoMessage()    {}
func (*Workflow_Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{3, 1}
}

func (m *Workflow_Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow_Property.Unmarshal(m, b)
}
func (m *Workflow_Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow_Property.Marshal(b, m, deterministic)
}
func (m *Workflow_Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow_Property.Merge(m, src)
}
func (m *Workflow_Property) XXX_Size() int {
	return xxx_messageInfo_Workflow_Property.Size(m)
}
func (m *Workflow_Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow_Property proto.InternalMessageInfo

func (m *Workflow_Property) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Workflow_Property) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

// Errpr describing some problems in reporting action to action approval backend.
type ActionErrorDTO struct {
	// OID of the action error is reported for.
	ActionOid *int64 `protobuf:"varint,1,req,name=actionOid" json:"actionOid,omitempty"`
	// Error message (description)
	Message              *string  `protobuf:"bytes,2,req,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionErrorDTO) Reset()         { *m = ActionErrorDTO{} }
func (m *ActionErrorDTO) String() string { return proto.CompactTextString(m) }
func (*ActionErrorDTO) ProtoMessage()    {}
func (*ActionErrorDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{4}
}

func (m *ActionErrorDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionErrorDTO.Unmarshal(m, b)
}
func (m *ActionErrorDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionErrorDTO.Marshal(b, m, deterministic)
}
func (m *ActionErrorDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionErrorDTO.Merge(m, src)
}
func (m *ActionErrorDTO) XXX_Size() int {
	return xxx_messageInfo_ActionErrorDTO.Size(m)
}
func (m *ActionErrorDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionErrorDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionErrorDTO proto.InternalMessageInfo

func (m *ActionErrorDTO) GetActionOid() int64 {
	if m != nil && m.ActionOid != nil {
		return *m.ActionOid
	}
	return 0
}

func (m *ActionErrorDTO) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

// Description of action event to audit. It holds action representation to external world (3rd-party
// software), action state transition and event timestamp.
type ActionEventDTO struct {
	// Action representation for 3rd-party software.
	Action *ActionExecutionDTO `protobuf:"bytes,1,req,name=action" json:"action,omitempty"`
	// Previous action state - before the event.
	OldState *ActionResponseState `protobuf:"varint,2,req,name=oldState,enum=common_dto.ActionResponseState" json:"oldState,omitempty"`
	// New action state - after the event.
	NewState *ActionResponseState `protobuf:"varint,3,req,name=newState,enum=common_dto.ActionResponseState" json:"newState,omitempty"`
	// Timestamp of action event.
	Timestamp *int64 `protobuf:"varint,4,req,name=timestamp" json:"timestamp,omitempty"`
	// Information about who accepted the action.
	// Maybe accepted :
	// 1. manually in Turbonomic
	// 2. automated in Turbonomic
	// 3. in third-party platform (ServiceNow)
	AcceptedBy           *string  `protobuf:"bytes,5,opt,name=acceptedBy" json:"acceptedBy,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionEventDTO) Reset()         { *m = ActionEventDTO{} }
func (m *ActionEventDTO) String() string { return proto.CompactTextString(m) }
func (*ActionEventDTO) ProtoMessage()    {}
func (*ActionEventDTO) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{5}
}

func (m *ActionEventDTO) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionEventDTO.Unmarshal(m, b)
}
func (m *ActionEventDTO) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionEventDTO.Marshal(b, m, deterministic)
}
func (m *ActionEventDTO) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionEventDTO.Merge(m, src)
}
func (m *ActionEventDTO) XXX_Size() int {
	return xxx_messageInfo_ActionEventDTO.Size(m)
}
func (m *ActionEventDTO) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionEventDTO.DiscardUnknown(m)
}

var xxx_messageInfo_ActionEventDTO proto.InternalMessageInfo

func (m *ActionEventDTO) GetAction() *ActionExecutionDTO {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ActionEventDTO) GetOldState() ActionResponseState {
	if m != nil && m.OldState != nil {
		return *m.OldState
	}
	return ActionResponseState_PENDING_ACCEPT
}

func (m *ActionEventDTO) GetNewState() ActionResponseState {
	if m != nil && m.NewState != nil {
		return *m.NewState
	}
	return ActionResponseState_PENDING_ACCEPT
}

func (m *ActionEventDTO) GetTimestamp() int64 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *ActionEventDTO) GetAcceptedBy() string {
	if m != nil && m.AcceptedBy != nil {
		return *m.AcceptedBy
	}
	return ""
}

// This class holds response information about executing action via a third party integration.
type ExternalActionInfo struct {
	// URL to actual change request in thirdParty
	Url *string `protobuf:"bytes,2,req,name=url" json:"url,omitempty"`
	// short name or ID of change request in thirdParty
	ShortName            *string  `protobuf:"bytes,3,req,name=shortName" json:"shortName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExternalActionInfo) Reset()         { *m = ExternalActionInfo{} }
func (m *ExternalActionInfo) String() string { return proto.CompactTextString(m) }
func (*ExternalActionInfo) ProtoMessage()    {}
func (*ExternalActionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_01258f62f785f2d6, []int{6}
}

func (m *ExternalActionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExternalActionInfo.Unmarshal(m, b)
}
func (m *ExternalActionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExternalActionInfo.Marshal(b, m, deterministic)
}
func (m *ExternalActionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExternalActionInfo.Merge(m, src)
}
func (m *ExternalActionInfo) XXX_Size() int {
	return xxx_messageInfo_ExternalActionInfo.Size(m)
}
func (m *ExternalActionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ExternalActionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ExternalActionInfo proto.InternalMessageInfo

func (m *ExternalActionInfo) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *ExternalActionInfo) GetShortName() string {
	if m != nil && m.ShortName != nil {
		return *m.ShortName
	}
	return ""
}

func init() {
	proto.RegisterEnum("common_dto.ActionResponseState", ActionResponseState_name, ActionResponseState_value)
	proto.RegisterEnum("common_dto.ActionPolicyDTO_ActionCapability", ActionPolicyDTO_ActionCapability_name, ActionPolicyDTO_ActionCapability_value)
	proto.RegisterEnum("common_dto.ActionItemDTO_ActionType", ActionItemDTO_ActionType_name, ActionItemDTO_ActionType_value)
	proto.RegisterEnum("common_dto.ActionItemDTO_CommodityAttribute", ActionItemDTO_CommodityAttribute_name, ActionItemDTO_CommodityAttribute_value)
	proto.RegisterEnum("common_dto.Workflow_ActionScriptPhase", Workflow_ActionScriptPhase_name, Workflow_ActionScriptPhase_value)
	proto.RegisterType((*ActionPolicyDTO)(nil), "common_dto.ActionPolicyDTO")
	proto.RegisterType((*ActionPolicyDTO_ActionPolicyElement)(nil), "common_dto.ActionPolicyDTO.ActionPolicyElement")
	proto.RegisterType((*ActionExecutionDTO)(nil), "common_dto.ActionExecutionDTO")
	proto.RegisterType((*ActionItemDTO)(nil), "common_dto.ActionItemDTO")
	proto.RegisterType((*ActionItemDTO_ProviderInfo)(nil), "common_dto.ActionItemDTO.ProviderInfo")
	proto.RegisterType((*Workflow)(nil), "common_dto.Workflow")
	proto.RegisterType((*Workflow_Parameter)(nil), "common_dto.Workflow.Parameter")
	proto.RegisterType((*Workflow_Property)(nil), "common_dto.Workflow.Property")
	proto.RegisterType((*ActionErrorDTO)(nil), "common_dto.ActionErrorDTO")
	proto.RegisterType((*ActionEventDTO)(nil), "common_dto.ActionEventDTO")
	proto.RegisterType((*ExternalActionInfo)(nil), "common_dto.ExternalActionInfo")
}

func init() { proto.RegisterFile("ActionExecution.proto", fileDescriptor_01258f62f785f2d6) }

var fileDescriptor_01258f62f785f2d6 = []byte{
	// 1478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xdb, 0x46,
	0x16, 0x8e, 0xfe, 0x2c, 0xf2, 0xc8, 0x3f, 0xe3, 0x49, 0xbc, 0xcb, 0xd5, 0x66, 0x13, 0x41, 0x58,
	0x04, 0x42, 0x76, 0xe1, 0xdd, 0x75, 0xb2, 0x05, 0x92, 0x16, 0x45, 0x64, 0x72, 0x62, 0xab, 0xb0,
	0x25, 0x75, 0x48, 0xa5, 0x69, 0x51, 0x40, 0xa0, 0xc9, 0xb1, 0x4d, 0x94, 0x7f, 0x20, 0x47, 0xb6,
	0x75, 0xd7, 0x3e, 0x48, 0x1f, 0xa0, 0x40, 0x6f, 0xfb, 0x1e, 0x7d, 0x85, 0x3e, 0x45, 0x6f, 0x8b,
	0x19, 0x52, 0x12, 0x2d, 0xc9, 0x49, 0x03, 0xe4, 0x6e, 0xe6, 0xcc, 0xf7, 0x9d, 0x99, 0x39, 0xe7,
	0xcc, 0x77, 0x06, 0xf6, 0xba, 0x0e, 0xf7, 0xa2, 0x90, 0xdc, 0x30, 0x67, 0x22, 0x06, 0xfb, 0x71,
	0x12, 0xf1, 0x08, 0x83, 0x13, 0x05, 0x41, 0x14, 0x8e, 0x5d, 0x1e, 0x35, 0x77, 0x74, 0x39, 0x36,
	0xac, 0x41, 0xb6, 0xd8, 0x44, 0xc3, 0x24, 0x3a, 0xf7, 0x7c, 0x36, 0xb7, 0xb4, 0x7f, 0xae, 0xc0,
	0x4e, 0xe6, 0x68, 0x18, 0xf9, 0x9e, 0x33, 0x35, 0xac, 0x01, 0x7e, 0x05, 0xc0, 0x42, 0xee, 0xf1,
	0xa9, 0x35, 0x8d, 0x99, 0x56, 0x6a, 0x95, 0x3b, 0xdb, 0x07, 0xad, 0xfd, 0x85, 0xdf, 0x7d, 0x22,
	0x57, 0x85, 0x13, 0x32, 0xc7, 0xd1, 0x02, 0x07, 0x8f, 0x60, 0x2b, 0x96, 0xee, 0x88, 0xcf, 0x02,
	0x16, 0x72, 0xad, 0xdc, 0xaa, 0x74, 0x1a, 0x07, 0xff, 0x29, 0x3a, 0x59, 0xda, 0xf5, 0xd6, 0x3c,
	0xa7, 0xd1, 0xdb, 0x5e, 0x9a, 0xbf, 0x94, 0xe0, 0xfe, 0x1a, 0x18, 0x36, 0x00, 0x6c, 0x69, 0x2e,
	0x1c, 0xf8, 0x9f, 0xab, 0x7b, 0xf5, 0x38, 0x0b, 0x16, 0x3b, 0x65, 0x87, 0x5e, 0xf0, 0xf0, 0x5b,
	0x40, 0xd9, 0x4c, 0xb7, 0x63, 0xfb, 0xcc, 0xf3, 0x3d, 0x3e, 0xd5, 0xca, 0xd2, 0xd7, 0xbf, 0xdf,
	0x7f, 0xee, 0x05, 0x87, 0xae, 0x78, 0x69, 0x1f, 0x03, 0x5a, 0x46, 0xe1, 0x5d, 0xd8, 0xea, 0x0f,
	0xac, 0xb1, 0x39, 0x1a, 0x0e, 0x07, 0xd4, 0x22, 0x06, 0x2a, 0x61, 0x0c, 0xdb, 0xc2, 0x44, 0xde,
	0x12, 0x7d, 0x64, 0x75, 0x0f, 0x4f, 0x08, 0x2a, 0xe3, 0x2d, 0x50, 0x17, 0x90, 0x4a, 0xfb, 0xb7,
	0x32, 0xe0, 0xa5, 0xbc, 0x8b, 0x8c, 0x7d, 0x9c, 0x00, 0xbc, 0x98, 0x79, 0x11, 0xb8, 0x3c, 0x65,
	0x7f, 0xbb, 0xd3, 0x0b, 0x2d, 0x80, 0x71, 0x13, 0x94, 0x38, 0x89, 0x2e, 0x12, 0x96, 0xa6, 0x5a,
	0xa5, 0x55, 0xea, 0x54, 0xe8, 0x7c, 0x8e, 0xff, 0x0b, 0xca, 0x75, 0x94, 0x7c, 0x77, 0xee, 0x47,
	0xd7, 0x5a, 0xb5, 0x55, 0xea, 0x34, 0x0e, 0x1e, 0x14, 0x9d, 0x7e, 0x95, 0xaf, 0xd1, 0x39, 0x0a,
	0x3f, 0x04, 0x35, 0xf3, 0x3d, 0xf0, 0x5c, 0xad, 0xd6, 0x2a, 0x75, 0xaa, 0x74, 0x61, 0x10, 0x7b,
	0xa5, 0xec, 0x8a, 0x25, 0x22, 0x3f, 0x1b, 0xad, 0x52, 0x47, 0xa5, 0xf3, 0x39, 0x6e, 0x41, 0x23,
	0x9d, 0x9c, 0xe9, 0x36, 0x67, 0x17, 0x51, 0x32, 0xd5, 0xea, 0x72, 0xb9, 0x68, 0x12, 0x08, 0x76,
	0x13, 0xfb, 0x76, 0x68, 0x0b, 0x7f, 0x9a, 0x92, 0x21, 0x0a, 0xa6, 0xf6, 0x8f, 0x00, 0x5b, 0xb7,
	0x6e, 0xfa, 0x91, 0xc2, 0x8b, 0xa1, 0x3a, 0x99, 0x78, 0xae, 0xac, 0x29, 0x95, 0xca, 0x31, 0xfe,
	0x1f, 0x28, 0xdc, 0x4e, 0x2e, 0x18, 0x37, 0x89, 0x56, 0x69, 0x95, 0x3b, 0x8d, 0x83, 0xbd, 0xb5,
	0x0f, 0x8d, 0xce, 0x61, 0xf8, 0xff, 0x00, 0x97, 0x51, 0xca, 0x99, 0x7b, 0x38, 0x35, 0x49, 0x1e,
	0xd0, 0x3b, 0x48, 0x05, 0x20, 0x7e, 0x06, 0xaa, 0x33, 0x49, 0x12, 0x16, 0x8a, 0xad, 0x6a, 0xef,
	0x62, 0x2d, 0x70, 0xf8, 0x5f, 0x50, 0x0b, 0xd9, 0xb5, 0x49, 0x64, 0x9c, 0xef, 0x24, 0x64, 0x18,
	0xfc, 0x12, 0x1a, 0x39, 0x53, 0xc8, 0x8e, 0x8c, 0x7d, 0xe3, 0x40, 0x2b, 0x52, 0xa4, 0x1c, 0xb9,
	0x39, 0xab, 0x08, 0xc6, 0x07, 0x50, 0x0f, 0xd9, 0xb5, 0xe4, 0x29, 0xef, 0xe1, 0xcd, 0x80, 0xf8,
	0x5b, 0xc0, 0xce, 0x6c, 0xa1, 0xcb, 0x79, 0xe2, 0x9d, 0x4d, 0x38, 0xd3, 0xa0, 0x55, 0x5a, 0xff,
	0x62, 0x67, 0xd9, 0xd1, 0x57, 0x38, 0x74, 0x8d, 0x1f, 0x6c, 0x80, 0x1a, 0x27, 0xd1, 0x95, 0xe7,
	0xb2, 0x24, 0xd5, 0x1a, 0xf2, 0x2d, 0x3c, 0xb9, 0xdb, 0xe9, 0x30, 0x87, 0xf6, 0xc2, 0xf3, 0x88,
	0x2e, 0x88, 0xf8, 0x18, 0x50, 0x26, 0x8b, 0x0b, 0xe1, 0xd5, 0x36, 0xe5, 0x05, 0x1f, 0xae, 0xc6,
	0x72, 0x81, 0xa1, 0x2b, 0x2c, 0xfc, 0x02, 0x1a, 0x4e, 0x14, 0x72, 0x76, 0xc3, 0x0d, 0x9b, 0xdb,
	0xda, 0x96, 0x3c, 0xd1, 0x5f, 0x6f, 0x47, 0x69, 0xbe, 0x4c, 0x8b, 0x58, 0x91, 0xfa, 0x84, 0xf9,
	0x36, 0x67, 0x2e, 0xed, 0x69, 0xdb, 0xef, 0x4c, 0xfd, 0x1c, 0x87, 0x5f, 0xc1, 0xdf, 0x9d, 0x28,
	0x4c, 0xbd, 0x94, 0x8b, 0x52, 0x70, 0x6c, 0xdf, 0x0b, 0x2f, 0xf4, 0x28, 0x88, 0x7d, 0xcf, 0x0e,
	0x1d, 0xa6, 0xed, 0xb4, 0x4a, 0x1d, 0x85, 0xbe, 0x0b, 0x82, 0x35, 0xa8, 0xa7, 0xf6, 0x95, 0x17,
	0x5e, 0xa4, 0xda, 0x6e, 0xab, 0xd4, 0x29, 0xd3, 0xd9, 0x14, 0x3f, 0x02, 0xc8, 0x86, 0xa3, 0xd0,
	0xe3, 0x1a, 0x96, 0x4f, 0xb0, 0x60, 0x69, 0x9e, 0xc1, 0x66, 0x31, 0xa0, 0x1f, 0xa1, 0x21, 0x21,
	0xa8, 0x78, 0x6e, 0x2a, 0x35, 0x4d, 0xa5, 0x62, 0xd8, 0xfe, 0xbd, 0x04, 0xb0, 0x78, 0xa8, 0x58,
	0x81, 0x6a, 0x7f, 0xd0, 0x27, 0xe8, 0x1e, 0x56, 0xa1, 0x66, 0x5a, 0x5d, 0x6a, 0xa1, 0x92, 0x30,
	0x9e, 0x0e, 0xde, 0x08, 0x19, 0x6e, 0x40, 0xdd, 0x1c, 0x99, 0x43, 0xd2, 0x37, 0x50, 0x45, 0x68,
	0xb2, 0x45, 0xe8, 0x69, 0xaf, 0xdf, 0xb5, 0x08, 0xaa, 0x62, 0x04, 0x9b, 0x5d, 0xc3, 0x18, 0x0f,
	0xe9, 0xe0, 0x4d, 0xcf, 0x20, 0x14, 0x6d, 0x60, 0x80, 0x0d, 0xfd, 0xb8, 0xdb, 0x3f, 0x22, 0xa8,
	0x2e, 0xc0, 0x72, 0xc5, 0xec, 0x0d, 0xfa, 0x48, 0xc5, 0x3b, 0xd0, 0xa0, 0x44, 0x1f, 0xf4, 0x5f,
	0xf7, 0x8e, 0x46, 0x94, 0x20, 0x10, 0x58, 0x4a, 0xcc, 0xde, 0x37, 0x04, 0x35, 0xf0, 0x7d, 0xd8,
	0xc9, 0xc6, 0x63, 0xbd, 0x3b, 0xec, 0xea, 0x3d, 0xeb, 0x6b, 0xb4, 0x29, 0x00, 0x06, 0x39, 0x21,
	0x16, 0x41, 0x3b, 0x78, 0x1b, 0x80, 0xf6, 0x8e, 0x8e, 0xad, 0xb1, 0x24, 0x20, 0xbc, 0x07, 0xbb,
	0x3a, 0x1d, 0x98, 0xe6, 0xd8, 0xea, 0xd2, 0x23, 0x62, 0x8d, 0xe5, 0x69, 0xf7, 0x44, 0x6f, 0x11,
	0xa3, 0xb1, 0x35, 0x38, 0x22, 0xd6, 0x31, 0xa1, 0xe8, 0x2f, 0xf2, 0x56, 0x7a, 0xf7, 0x84, 0x20,
	0xad, 0xfd, 0x39, 0xe0, 0xd5, 0x37, 0x80, 0x37, 0x41, 0x11, 0xdd, 0xc9, 0xf1, 0xf8, 0x34, 0x0b,
	0xc2, 0x89, 0x17, 0x78, 0x1c, 0x95, 0xe4, 0x89, 0x59, 0xca, 0x92, 0x2b, 0xa9, 0x8e, 0xa8, 0xdc,
	0xfe, 0xb5, 0x06, 0xca, 0x4c, 0xb4, 0xf1, 0x36, 0x94, 0x3d, 0x57, 0xa6, 0x44, 0xa5, 0x65, 0xcf,
	0x15, 0xf2, 0xea, 0x7a, 0x69, 0xec, 0xdb, 0xd3, 0xbe, 0x1d, 0x30, 0xad, 0x9c, 0xc9, 0x6b, 0xc1,
	0x24, 0x11, 0x2c, 0x75, 0x12, 0x2f, 0x96, 0x02, 0x5c, 0xc9, 0x11, 0x0b, 0x13, 0x7e, 0x0e, 0xb5,
	0xd8, 0x4e, 0xec, 0x40, 0xab, 0xca, 0x22, 0x7f, 0xb4, 0xae, 0x5b, 0xec, 0x0f, 0x05, 0x82, 0x71,
	0x96, 0xd0, 0x0c, 0x8c, 0x5f, 0xc8, 0x16, 0x14, 0xb3, 0x84, 0x4f, 0xb5, 0x9a, 0x24, 0xfe, 0x63,
	0x3d, 0x31, 0x07, 0xd1, 0x39, 0x7c, 0xa9, 0xbe, 0x36, 0xa4, 0x82, 0x7c, 0x58, 0x7d, 0x89, 0x8a,
	0x96, 0xe7, 0x1f, 0xda, 0xfc, 0x32, 0x6f, 0x3b, 0x05, 0xcb, 0x52, 0x07, 0x51, 0xe4, 0x0e, 0x1f,
	0xde, 0x41, 0x3e, 0x83, 0x5a, 0x7c, 0x69, 0xa7, 0x4c, 0x53, 0xa5, 0x83, 0x27, 0x6b, 0xef, 0x97,
	0x71, 0xcd, 0x6c, 0x6f, 0x81, 0xa6, 0x19, 0x09, 0x3f, 0x05, 0xc4, 0xbd, 0x80, 0xc9, 0xbc, 0x9a,
	0xcc, 0x89, 0x42, 0x37, 0x95, 0x6a, 0x59, 0xa1, 0x2b, 0xf6, 0xe6, 0x0f, 0x25, 0x50, 0xe7, 0x11,
	0x16, 0x9d, 0x2b, 0x14, 0xd9, 0xcc, 0xd2, 0x2c, 0xc7, 0xcb, 0x69, 0x2c, 0xaf, 0xa6, 0xb1, 0x09,
	0x55, 0x2e, 0x6e, 0x2b, 0xfa, 0x9a, 0xfa, 0x72, 0xc3, 0xe4, 0x89, 0x17, 0x5e, 0x50, 0x69, 0xc3,
	0x6d, 0x50, 0x03, 0x3b, 0x74, 0x6d, 0x2e, 0xba, 0xb4, 0xe8, 0x61, 0xca, 0xcb, 0x2a, 0x4f, 0x26,
	0x8c, 0x2e, 0xcc, 0xcd, 0xe7, 0xa0, 0xcc, 0x72, 0xb5, 0xf6, 0x04, 0x0f, 0xa0, 0x76, 0x65, 0xfb,
	0x13, 0x96, 0x37, 0xd4, 0x6c, 0xd2, 0x7e, 0x06, 0xbb, 0x2b, 0x11, 0xc0, 0x75, 0xa8, 0x0c, 0x29,
	0x41, 0x25, 0xf1, 0x8e, 0x29, 0x19, 0x9e, 0x74, 0x75, 0xf1, 0xa8, 0x15, 0xa8, 0x0e, 0x07, 0xa6,
	0x85, 0x2a, 0xed, 0x63, 0xd8, 0xce, 0x7f, 0x55, 0x49, 0x12, 0x25, 0x42, 0x6e, 0x6f, 0x7d, 0x41,
	0xc4, 0xae, 0x95, 0xe2, 0x17, 0x44, 0x83, 0x7a, 0xc0, 0xd2, 0xd4, 0xbe, 0x98, 0x6d, 0x3e, 0x9b,
	0xb6, 0xbf, 0x2f, 0xcf, 0x5d, 0x5d, 0xb1, 0x90, 0x0b, 0x57, 0x9f, 0xc0, 0x46, 0xc6, 0x94, 0x7e,
	0x96, 0xea, 0x79, 0xf5, 0x33, 0x47, 0x73, 0x34, 0xfe, 0x14, 0x94, 0xc8, 0x77, 0x4d, 0x6e, 0x73,
	0x96, 0xff, 0x43, 0x1f, 0xaf, 0x32, 0x29, 0x4b, 0xe3, 0x28, 0x4c, 0x99, 0x84, 0xd1, 0x39, 0x41,
	0x90, 0x45, 0x57, 0x96, 0xe4, 0xca, 0x9f, 0x24, 0xcf, 0x08, 0xe2, 0xf2, 0xa2, 0x22, 0x52, 0x6e,
	0x07, 0xb1, 0x56, 0xcd, 0x2e, 0x3f, 0x37, 0x88, 0x5a, 0xb7, 0x1d, 0x87, 0xc5, 0xf2, 0x67, 0x21,
	0xbf, 0x12, 0x2a, 0x2d, 0x58, 0xda, 0x06, 0x60, 0x72, 0xc3, 0x59, 0x12, 0xda, 0x7e, 0x5e, 0xd5,
	0x42, 0xc3, 0x11, 0x54, 0x26, 0x89, 0x9f, 0x87, 0x4b, 0x0c, 0xc5, 0x2e, 0xe9, 0x65, 0x94, 0x70,
	0x29, 0x14, 0xb2, 0x48, 0xe8, 0xc2, 0xf0, 0xf4, 0xa7, 0xf9, 0x5f, 0xff, 0xd6, 0x29, 0xc5, 0x27,
	0x59, 0xc8, 0x70, 0xaf, 0x7f, 0x34, 0xee, 0xea, 0x3a, 0x19, 0x5a, 0xe8, 0x9e, 0xd0, 0xae, 0x6c,
	0x2c, 0xbf, 0xd1, 0x9b, 0xa0, 0x50, 0xf2, 0x05, 0xd1, 0xc5, 0xac, 0x2c, 0xe4, 0xab, 0xd7, 0x17,
	0xe2, 0x7c, 0x44, 0x89, 0x69, 0x66, 0xea, 0x6d, 0x8e, 0x74, 0x9d, 0x10, 0x83, 0x18, 0xa8, 0x2a,
	0xe4, 0xf5, 0x75, 0xb7, 0x77, 0x42, 0x0c, 0x54, 0x9b, 0x89, 0xf3, 0xe9, 0x29, 0xe9, 0x8b, 0xc5,
	0x0d, 0xe1, 0xca, 0xe8, 0x99, 0xe2, 0x2b, 0x6e, 0xa0, 0xba, 0x80, 0x7e, 0x39, 0x22, 0x23, 0x62,
	0x20, 0x45, 0x14, 0x92, 0x7e, 0x42, 0xba, 0x94, 0x18, 0x48, 0x3d, 0x3c, 0x80, 0xc7, 0x4e, 0x14,
	0xec, 0x5f, 0x05, 0x7c, 0x92, 0x9c, 0x45, 0xfb, 0xb1, 0x6f, 0xf3, 0xf3, 0x28, 0x09, 0xf2, 0x80,
	0xef, 0xbb, 0x3c, 0x3a, 0xdc, 0x59, 0x4a, 0xf4, 0x1f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x74, 0x83,
	0x94, 0x40, 0xbf, 0x0d, 0x00, 0x00,
}
