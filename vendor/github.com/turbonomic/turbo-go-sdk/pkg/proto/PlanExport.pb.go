// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: PlanExport.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Indicates the current export status of an export operation.
type PlanExportResponse_PlanExportResponseState int32

const (
	// No export had been attempted yet.
	PlanExportResponse_NONE PlanExportResponse_PlanExportResponseState = 0
	// Export request was rejected.
	PlanExportResponse_REJECTED PlanExportResponse_PlanExportResponseState = 1
	// Export is in progress.
	PlanExportResponse_IN_PROGRESS PlanExportResponse_PlanExportResponseState = 2
	// Export finished successfully.
	PlanExportResponse_SUCCEEDED PlanExportResponse_PlanExportResponseState = 3
	// Export terminated due to error.
	PlanExportResponse_FAILED PlanExportResponse_PlanExportResponseState = 4
)

// Enum value maps for PlanExportResponse_PlanExportResponseState.
var (
	PlanExportResponse_PlanExportResponseState_name = map[int32]string{
		0: "NONE",
		1: "REJECTED",
		2: "IN_PROGRESS",
		3: "SUCCEEDED",
		4: "FAILED",
	}
	PlanExportResponse_PlanExportResponseState_value = map[string]int32{
		"NONE":        0,
		"REJECTED":    1,
		"IN_PROGRESS": 2,
		"SUCCEEDED":   3,
		"FAILED":      4,
	}
)

func (x PlanExportResponse_PlanExportResponseState) Enum() *PlanExportResponse_PlanExportResponseState {
	p := new(PlanExportResponse_PlanExportResponseState)
	*p = x
	return p
}

func (x PlanExportResponse_PlanExportResponseState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlanExportResponse_PlanExportResponseState) Descriptor() protoreflect.EnumDescriptor {
	return file_PlanExport_proto_enumTypes[0].Descriptor()
}

func (PlanExportResponse_PlanExportResponseState) Type() protoreflect.EnumType {
	return &file_PlanExport_proto_enumTypes[0]
}

func (x PlanExportResponse_PlanExportResponseState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PlanExportResponse_PlanExportResponseState) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PlanExportResponse_PlanExportResponseState(num)
	return nil
}

// Deprecated: Use PlanExportResponse_PlanExportResponseState.Descriptor instead.
func (PlanExportResponse_PlanExportResponseState) EnumDescriptor() ([]byte, []int) {
	return file_PlanExport_proto_rawDescGZIP(), []int{1, 0}
}

type PlanExportDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The ID of the market from which the plan export was created.
	MarketId *string `protobuf:"bytes,1,req,name=marketId" json:"marketId,omitempty"`
	// The human readable name for this plan as seen in the UI (eg "Migrate to Public Cloud 8")
	PlanName *string `protobuf:"bytes,2,req,name=planName" json:"planName,omitempty"`
	// Actions generated by the plan
	Actions []*ActionExecutionDTO `protobuf:"bytes,3,rep,name=actions" json:"actions,omitempty"`
}

func (x *PlanExportDTO) Reset() {
	*x = PlanExportDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PlanExport_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanExportDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanExportDTO) ProtoMessage() {}

func (x *PlanExportDTO) ProtoReflect() protoreflect.Message {
	mi := &file_PlanExport_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanExportDTO.ProtoReflect.Descriptor instead.
func (*PlanExportDTO) Descriptor() ([]byte, []int) {
	return file_PlanExport_proto_rawDescGZIP(), []int{0}
}

func (x *PlanExportDTO) GetMarketId() string {
	if x != nil && x.MarketId != nil {
		return *x.MarketId
	}
	return ""
}

func (x *PlanExportDTO) GetPlanName() string {
	if x != nil && x.PlanName != nil {
		return *x.PlanName
	}
	return ""
}

func (x *PlanExportDTO) GetActions() []*ActionExecutionDTO {
	if x != nil {
		return x.Actions
	}
	return nil
}

// This class holds response information about an plan export operation. It contains: state: the
// PlanExportState code representing the state of the export, progress: a percentage complete
// indicator, description: a message notifying detailed information about the current status.
type PlanExportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// current action state
	State *PlanExportResponse_PlanExportResponseState `protobuf:"varint,1,req,name=state,enum=common_dto.PlanExportResponse_PlanExportResponseState" json:"state,omitempty"`
	// current action progress (0..100)
	Progress *int32 `protobuf:"varint,2,req,name=progress" json:"progress,omitempty"`
	// action state description, for example ("Moving VM...")
	Description *string `protobuf:"bytes,3,req,name=description" json:"description,omitempty"`
}

func (x *PlanExportResponse) Reset() {
	*x = PlanExportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_PlanExport_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanExportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanExportResponse) ProtoMessage() {}

func (x *PlanExportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_PlanExport_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanExportResponse.ProtoReflect.Descriptor instead.
func (*PlanExportResponse) Descriptor() ([]byte, []int) {
	return file_PlanExport_proto_rawDescGZIP(), []int{1}
}

func (x *PlanExportResponse) GetState() PlanExportResponse_PlanExportResponseState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return PlanExportResponse_NONE
}

func (x *PlanExportResponse) GetProgress() int32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

func (x *PlanExportResponse) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

var File_PlanExport_proto protoreflect.FileDescriptor

var file_PlanExport_proto_rawDesc = []byte{
	0x0a, 0x10, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x1a, 0x15,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x6e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x6e, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x54,
	0x4f, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xff, 0x01, 0x0a, 0x12, 0x50,
	0x6c, 0x61, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e,
	0x32, 0x36, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x50, 0x6c,
	0x61, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5d, 0x0a,
	0x17, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10,
	0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x42, 0x5b, 0x0a, 0x1f,
	0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6d, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x2e, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x74, 0x6f, 0x42,
	0x0a, 0x50, 0x6c, 0x61, 0x6e, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x5a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x6e, 0x6f, 0x6d,
	0x69, 0x63, 0x2f, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
}

var (
	file_PlanExport_proto_rawDescOnce sync.Once
	file_PlanExport_proto_rawDescData = file_PlanExport_proto_rawDesc
)

func file_PlanExport_proto_rawDescGZIP() []byte {
	file_PlanExport_proto_rawDescOnce.Do(func() {
		file_PlanExport_proto_rawDescData = protoimpl.X.CompressGZIP(file_PlanExport_proto_rawDescData)
	})
	return file_PlanExport_proto_rawDescData
}

var file_PlanExport_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_PlanExport_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_PlanExport_proto_goTypes = []interface{}{
	(PlanExportResponse_PlanExportResponseState)(0), // 0: common_dto.PlanExportResponse.PlanExportResponseState
	(*PlanExportDTO)(nil),                           // 1: common_dto.PlanExportDTO
	(*PlanExportResponse)(nil),                      // 2: common_dto.PlanExportResponse
	(*ActionExecutionDTO)(nil),                      // 3: common_dto.ActionExecutionDTO
}
var file_PlanExport_proto_depIdxs = []int32{
	3, // 0: common_dto.PlanExportDTO.actions:type_name -> common_dto.ActionExecutionDTO
	0, // 1: common_dto.PlanExportResponse.state:type_name -> common_dto.PlanExportResponse.PlanExportResponseState
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_PlanExport_proto_init() }
func file_PlanExport_proto_init() {
	if File_PlanExport_proto != nil {
		return
	}
	file_ActionExecution_proto_init()
	file_Discovery_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_PlanExport_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanExportDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_PlanExport_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanExportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_PlanExport_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_PlanExport_proto_goTypes,
		DependencyIndexes: file_PlanExport_proto_depIdxs,
		EnumInfos:         file_PlanExport_proto_enumTypes,
		MessageInfos:      file_PlanExport_proto_msgTypes,
	}.Build()
	File_PlanExport_proto = out.File
	file_PlanExport_proto_rawDesc = nil
	file_PlanExport_proto_goTypes = nil
	file_PlanExport_proto_depIdxs = nil
}
