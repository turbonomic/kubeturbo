// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: Discovery.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The types of discovery supported by SDK framework. FULL discovery is supported by default.
type DiscoveryType int32

const (
	// Full discovery which discovers everything
	DiscoveryType_FULL DiscoveryType = 0
	// Incremetal discovery which discovers changed entities (removed, added, etc.)
	DiscoveryType_INCREMENTAL DiscoveryType = 1
	// Performance discovery which discovers utilization data - obsolete in XL
	// Only used as dummy value in some platform tests
	//
	// Deprecated: Do not use.
	DiscoveryType_PERFORMANCE DiscoveryType = 2
)

// Enum value maps for DiscoveryType.
var (
	DiscoveryType_name = map[int32]string{
		0: "FULL",
		1: "INCREMENTAL",
		2: "PERFORMANCE",
	}
	DiscoveryType_value = map[string]int32{
		"FULL":        0,
		"INCREMENTAL": 1,
		"PERFORMANCE": 2,
	}
)

func (x DiscoveryType) Enum() *DiscoveryType {
	p := new(DiscoveryType)
	*p = x
	return p
}

func (x DiscoveryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveryType) Descriptor() protoreflect.EnumDescriptor {
	return file_Discovery_proto_enumTypes[0].Descriptor()
}

func (DiscoveryType) Type() protoreflect.EnumType {
	return &file_Discovery_proto_enumTypes[0]
}

func (x DiscoveryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DiscoveryType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DiscoveryType(num)
	return nil
}

// Deprecated: Use DiscoveryType.Descriptor instead.
func (DiscoveryType) EnumDescriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{0}
}

// the enum that represent state of a stage after validation/discovery finished.
type ProbeStageDetails_StageStatus int32

const (
	// stage did not run because another stage that this stage depend on failed.
	ProbeStageDetails_DID_NOT_RUN ProbeStageDetails_StageStatus = 0
	// the stage finished with success or with partial success.
	ProbeStageDetails_SUCCESS ProbeStageDetails_StageStatus = 1
	// The stage failed.
	ProbeStageDetails_FAILURE ProbeStageDetails_StageStatus = 2
)

// Enum value maps for ProbeStageDetails_StageStatus.
var (
	ProbeStageDetails_StageStatus_name = map[int32]string{
		0: "DID_NOT_RUN",
		1: "SUCCESS",
		2: "FAILURE",
	}
	ProbeStageDetails_StageStatus_value = map[string]int32{
		"DID_NOT_RUN": 0,
		"SUCCESS":     1,
		"FAILURE":     2,
	}
)

func (x ProbeStageDetails_StageStatus) Enum() *ProbeStageDetails_StageStatus {
	p := new(ProbeStageDetails_StageStatus)
	*p = x
	return p
}

func (x ProbeStageDetails_StageStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProbeStageDetails_StageStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_Discovery_proto_enumTypes[1].Descriptor()
}

func (ProbeStageDetails_StageStatus) Type() protoreflect.EnumType {
	return &file_Discovery_proto_enumTypes[1]
}

func (x ProbeStageDetails_StageStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ProbeStageDetails_StageStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ProbeStageDetails_StageStatus(num)
	return nil
}

// Deprecated: Use ProbeStageDetails_StageStatus.Descriptor instead.
func (ProbeStageDetails_StageStatus) EnumDescriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{2, 0}
}

// Enum, determining the type of primitive value. All the primitive values are
// always stored in string value holder, but are interpreted differently
type CustomAccountDefEntry_PrimitiveValue int32

const (
	// Value should be interpreted as string
	CustomAccountDefEntry_STRING CustomAccountDefEntry_PrimitiveValue = 1
	// Value should be interpreted as numeric
	CustomAccountDefEntry_NUMERIC CustomAccountDefEntry_PrimitiveValue = 2
	// Value should be interpreted as boolean
	CustomAccountDefEntry_BOOLEAN CustomAccountDefEntry_PrimitiveValue = 3
)

// Enum value maps for CustomAccountDefEntry_PrimitiveValue.
var (
	CustomAccountDefEntry_PrimitiveValue_name = map[int32]string{
		1: "STRING",
		2: "NUMERIC",
		3: "BOOLEAN",
	}
	CustomAccountDefEntry_PrimitiveValue_value = map[string]int32{
		"STRING":  1,
		"NUMERIC": 2,
		"BOOLEAN": 3,
	}
)

func (x CustomAccountDefEntry_PrimitiveValue) Enum() *CustomAccountDefEntry_PrimitiveValue {
	p := new(CustomAccountDefEntry_PrimitiveValue)
	*p = x
	return p
}

func (x CustomAccountDefEntry_PrimitiveValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomAccountDefEntry_PrimitiveValue) Descriptor() protoreflect.EnumDescriptor {
	return file_Discovery_proto_enumTypes[2].Descriptor()
}

func (CustomAccountDefEntry_PrimitiveValue) Type() protoreflect.EnumType {
	return &file_Discovery_proto_enumTypes[2]
}

func (x CustomAccountDefEntry_PrimitiveValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CustomAccountDefEntry_PrimitiveValue) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CustomAccountDefEntry_PrimitiveValue(num)
	return nil
}

// Deprecated: Use CustomAccountDefEntry_PrimitiveValue.Descriptor instead.
func (CustomAccountDefEntry_PrimitiveValue) EnumDescriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{3, 0}
}

// Error types.
type ErrorDTO_ErrorType int32

const (
	// Default error type. Used when error can't be assigned to different type.
	//
	// Deprecated: Do not use.
	ErrorDTO_OTHER ErrorDTO_ErrorType = 0
	// Connection timeout.
	//
	// Deprecated: Do not use.
	ErrorDTO_CONNECTION_TIMEOUT ErrorDTO_ErrorType = 1
	// Authentification error.
	//
	// Deprecated: Do not use.
	ErrorDTO_UNAUTHENTICATED ErrorDTO_ErrorType = 2
	// Authorization error.
	//
	// Deprecated: Do not use.
	ErrorDTO_UNAUTHORIZED ErrorDTO_ErrorType = 3
	// Token / cookies / account key is unavailable.
	//
	// Deprecated: Do not use.
	ErrorDTO_TOKEN_UNAVAILABLE ErrorDTO_ErrorType = 4
	// Token / cookies / account key is expired.
	//
	// Deprecated: Do not use.
	ErrorDTO_TOKEN_EXPIRED ErrorDTO_ErrorType = 5
	// Response from target is missing required data.
	//
	// Deprecated: Do not use.
	ErrorDTO_DATA_IS_MISSING ErrorDTO_ErrorType = 6
	// API version that is used to get access to the target is not supported.
	//
	// Deprecated: Do not use.
	ErrorDTO_VERSION_NOT_SUPPORTED ErrorDTO_ErrorType = 7
	// Error during parsing responses. Can occur if response contains unexpected values.
	//
	// Deprecated: Do not use.
	ErrorDTO_PROBE_PARSING_ERROR ErrorDTO_ErrorType = 8
	// Internal probe error. Probe encountered unexpected exception during processing.
	//
	// Deprecated: Do not use.
	ErrorDTO_INTERNAL_PROBE_ERROR ErrorDTO_ErrorType = 9
	// Duplication of targets (there're targets with matching content).
	//
	// Deprecated: Do not use.
	ErrorDTO_DUPLICATION ErrorDTO_ErrorType = 10
	// The discovered data is delayed, too old.
	//
	// Deprecated: Do not use.
	ErrorDTO_DELAYED_DATA ErrorDTO_ErrorType = 11
)

// Enum value maps for ErrorDTO_ErrorType.
var (
	ErrorDTO_ErrorType_name = map[int32]string{
		0:  "OTHER",
		1:  "CONNECTION_TIMEOUT",
		2:  "UNAUTHENTICATED",
		3:  "UNAUTHORIZED",
		4:  "TOKEN_UNAVAILABLE",
		5:  "TOKEN_EXPIRED",
		6:  "DATA_IS_MISSING",
		7:  "VERSION_NOT_SUPPORTED",
		8:  "PROBE_PARSING_ERROR",
		9:  "INTERNAL_PROBE_ERROR",
		10: "DUPLICATION",
		11: "DELAYED_DATA",
	}
	ErrorDTO_ErrorType_value = map[string]int32{
		"OTHER":                 0,
		"CONNECTION_TIMEOUT":    1,
		"UNAUTHENTICATED":       2,
		"UNAUTHORIZED":          3,
		"TOKEN_UNAVAILABLE":     4,
		"TOKEN_EXPIRED":         5,
		"DATA_IS_MISSING":       6,
		"VERSION_NOT_SUPPORTED": 7,
		"PROBE_PARSING_ERROR":   8,
		"INTERNAL_PROBE_ERROR":  9,
		"DUPLICATION":           10,
		"DELAYED_DATA":          11,
	}
)

func (x ErrorDTO_ErrorType) Enum() *ErrorDTO_ErrorType {
	p := new(ErrorDTO_ErrorType)
	*p = x
	return p
}

func (x ErrorDTO_ErrorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorDTO_ErrorType) Descriptor() protoreflect.EnumDescriptor {
	return file_Discovery_proto_enumTypes[3].Descriptor()
}

func (ErrorDTO_ErrorType) Type() protoreflect.EnumType {
	return &file_Discovery_proto_enumTypes[3]
}

func (x ErrorDTO_ErrorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ErrorDTO_ErrorType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ErrorDTO_ErrorType(num)
	return nil
}

// Deprecated: Use ErrorDTO_ErrorType.Descriptor instead.
func (ErrorDTO_ErrorType) EnumDescriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{5, 0}
}

type ErrorDTO_ErrorSeverity int32

const (
	ErrorDTO_CRITICAL ErrorDTO_ErrorSeverity = 0
	ErrorDTO_WARNING  ErrorDTO_ErrorSeverity = 1
)

// Enum value maps for ErrorDTO_ErrorSeverity.
var (
	ErrorDTO_ErrorSeverity_name = map[int32]string{
		0: "CRITICAL",
		1: "WARNING",
	}
	ErrorDTO_ErrorSeverity_value = map[string]int32{
		"CRITICAL": 0,
		"WARNING":  1,
	}
)

func (x ErrorDTO_ErrorSeverity) Enum() *ErrorDTO_ErrorSeverity {
	p := new(ErrorDTO_ErrorSeverity)
	*p = x
	return p
}

func (x ErrorDTO_ErrorSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorDTO_ErrorSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_Discovery_proto_enumTypes[4].Descriptor()
}

func (ErrorDTO_ErrorSeverity) Type() protoreflect.EnumType {
	return &file_Discovery_proto_enumTypes[4]
}

func (x ErrorDTO_ErrorSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ErrorDTO_ErrorSeverity) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ErrorDTO_ErrorSeverity(num)
	return nil
}

// Deprecated: Use ErrorDTO_ErrorSeverity.Descriptor instead.
func (ErrorDTO_ErrorSeverity) EnumDescriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{5, 1}
}

// Type of the serialized data
type CustomMetadataDTO_Type int32

const (
	CustomMetadataDTO_JSON CustomMetadataDTO_Type = 0
	CustomMetadataDTO_XML  CustomMetadataDTO_Type = 1
)

// Enum value maps for CustomMetadataDTO_Type.
var (
	CustomMetadataDTO_Type_name = map[int32]string{
		0: "JSON",
		1: "XML",
	}
	CustomMetadataDTO_Type_value = map[string]int32{
		"JSON": 0,
		"XML":  1,
	}
)

func (x CustomMetadataDTO_Type) Enum() *CustomMetadataDTO_Type {
	p := new(CustomMetadataDTO_Type)
	*p = x
	return p
}

func (x CustomMetadataDTO_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CustomMetadataDTO_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_Discovery_proto_enumTypes[5].Descriptor()
}

func (CustomMetadataDTO_Type) Type() protoreflect.EnumType {
	return &file_Discovery_proto_enumTypes[5]
}

func (x CustomMetadataDTO_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CustomMetadataDTO_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CustomMetadataDTO_Type(num)
	return nil
}

// Deprecated: Use CustomMetadataDTO_Type.Descriptor instead.
func (CustomMetadataDTO_Type) EnumDescriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{7, 0}
}

// ValidateResponse is the response of a ValidateRequest message.
// It contains the response, and any errors encountered during the target validation attempt.
type ValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Errors, discovered during external probe operation
	ErrorDTO []*ErrorDTO `protobuf:"bytes,1,rep,name=errorDTO" json:"errorDTO,omitempty"`
	// The stages that was taken that resulted in the validation status. This provides
	// additional granularity on how the probe came up with successful or failed validation.
	StagesDetail []*ProbeStageDetails `protobuf:"bytes,2,rep,name=stages_detail,json=stagesDetail" json:"stages_detail,omitempty"`
}

func (x *ValidationResponse) Reset() {
	*x = ValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationResponse) ProtoMessage() {}

func (x *ValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationResponse.ProtoReflect.Descriptor instead.
func (*ValidationResponse) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{0}
}

func (x *ValidationResponse) GetErrorDTO() []*ErrorDTO {
	if x != nil {
		return x.ErrorDTO
	}
	return nil
}

func (x *ValidationResponse) GetStagesDetail() []*ProbeStageDetails {
	if x != nil {
		return x.StagesDetail
	}
	return nil
}

// Mediation container response for target discovery request. Holds both errors and discovered
// entities. If errors occurred, any entities can be sent nevertheless. Only those entities should
// be updated in the operations manager.
//
// Errors do not prevent anything. They are just displayed to users in the UI
type DiscoveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Errors, discovered during external probe operation
	ErrorDTO []*ErrorDTO `protobuf:"bytes,1,rep,name=errorDTO" json:"errorDTO,omitempty"`
	// Entities, discovered by external probe.
	EntityDTO []*EntityDTO `protobuf:"bytes,2,rep,name=entityDTO" json:"entityDTO,omitempty"`
	// Constraints defined in external probe
	DiscoveredGroup []*GroupDTO `protobuf:"bytes,3,rep,name=discoveredGroup" json:"discoveredGroup,omitempty"`
	// ServiceEntityProfile (template)
	EntityProfile []*EntityProfileDTO `protobuf:"bytes,4,rep,name=entityProfile" json:"entityProfile,omitempty"`
	// Deployment Profile (ServiceCatalogItem)
	DeploymentProfile []*DeploymentProfileDTO `protobuf:"bytes,5,rep,name=deploymentProfile" json:"deploymentProfile,omitempty"`
	// Notifications for global (not entity-specific) events
	Notification []*NotificationDTO `protobuf:"bytes,6,rep,name=notification" json:"notification,omitempty"`
	// Custom Metadata DTO
	MetadataDTO []*CustomMetadataDTO `protobuf:"bytes,7,rep,name=metadataDTO" json:"metadataDTO,omitempty"`
	// Derived targets' creation requests
	DerivedTarget []*DerivedTargetSpecificationDTO `protobuf:"bytes,8,rep,name=derivedTarget" json:"derivedTarget,omitempty"`
	// Non market entities, discovered by external probe
	NonMarketEntityDTO []*NonMarketEntityDTO `protobuf:"bytes,9,rep,name=nonMarketEntityDTO" json:"nonMarketEntityDTO,omitempty"`
	// Flows, discovered by external probe
	FlowDTO []*FlowDTO `protobuf:"bytes,11,rep,name=flowDTO" json:"flowDTO,omitempty"`
	// Discovery context contains data that needs to be sent back to the probe in the next
	// discovery request
	DiscoveryContext *DiscoveryContextDTO `protobuf:"bytes,12,opt,name=discoveryContext" json:"discoveryContext,omitempty"`
	// Costs/Spend/Discount for Account, CloudService, Templates etc.
	CostDTO []*CostDataDTO `protobuf:"bytes,13,rep,name=costDTO" json:"costDTO,omitempty"`
	// Price table discovered by the cloud cost probes. (see PricingDTO.proto)
	// The cloud provider is giving us prices for the different services and product offerings that
	// they have available. Different products/options combination leads to a different price.
	// Those prices are used to calculate the bottom-up cost of a specific entity (by adding up
	// the different products that are part of it, like compute,storage,license,ip,...).
	PriceTable *PriceTable `protobuf:"bytes,14,opt,name=priceTable" json:"priceTable,omitempty"`
	// Workflows discovered by external probe (formerly appeared as NonMarketEntityDTOs)
	Workflow []*Workflow `protobuf:"bytes,15,rep,name=workflow" json:"workflow,omitempty"`
	// Indicates no change since the previous discovery.
	NoChange *NoChange `protobuf:"bytes,16,opt,name=no_change,json=noChange" json:"no_change,omitempty"`
	// The stages that was taken that resulted in the discovery status. This provides
	// additional granularity on how the probe comes up with successful or failed discovery.
	StagesDetail []*ProbeStageDetails `protobuf:"bytes,17,rep,name=stages_detail,json=stagesDetail" json:"stages_detail,omitempty"`
	// Top-down costs returned by Cloud billing discovery. Each CloudBillingData instance
	// represents a billing family.
	CloudBillingData []*CloudBillingData `protobuf:"bytes,18,rep,name=cloudBillingData" json:"cloudBillingData,omitempty"`
}

func (x *DiscoveryResponse) Reset() {
	*x = DiscoveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryResponse) ProtoMessage() {}

func (x *DiscoveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryResponse.ProtoReflect.Descriptor instead.
func (*DiscoveryResponse) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{1}
}

func (x *DiscoveryResponse) GetErrorDTO() []*ErrorDTO {
	if x != nil {
		return x.ErrorDTO
	}
	return nil
}

func (x *DiscoveryResponse) GetEntityDTO() []*EntityDTO {
	if x != nil {
		return x.EntityDTO
	}
	return nil
}

func (x *DiscoveryResponse) GetDiscoveredGroup() []*GroupDTO {
	if x != nil {
		return x.DiscoveredGroup
	}
	return nil
}

func (x *DiscoveryResponse) GetEntityProfile() []*EntityProfileDTO {
	if x != nil {
		return x.EntityProfile
	}
	return nil
}

func (x *DiscoveryResponse) GetDeploymentProfile() []*DeploymentProfileDTO {
	if x != nil {
		return x.DeploymentProfile
	}
	return nil
}

func (x *DiscoveryResponse) GetNotification() []*NotificationDTO {
	if x != nil {
		return x.Notification
	}
	return nil
}

func (x *DiscoveryResponse) GetMetadataDTO() []*CustomMetadataDTO {
	if x != nil {
		return x.MetadataDTO
	}
	return nil
}

func (x *DiscoveryResponse) GetDerivedTarget() []*DerivedTargetSpecificationDTO {
	if x != nil {
		return x.DerivedTarget
	}
	return nil
}

func (x *DiscoveryResponse) GetNonMarketEntityDTO() []*NonMarketEntityDTO {
	if x != nil {
		return x.NonMarketEntityDTO
	}
	return nil
}

func (x *DiscoveryResponse) GetFlowDTO() []*FlowDTO {
	if x != nil {
		return x.FlowDTO
	}
	return nil
}

func (x *DiscoveryResponse) GetDiscoveryContext() *DiscoveryContextDTO {
	if x != nil {
		return x.DiscoveryContext
	}
	return nil
}

func (x *DiscoveryResponse) GetCostDTO() []*CostDataDTO {
	if x != nil {
		return x.CostDTO
	}
	return nil
}

func (x *DiscoveryResponse) GetPriceTable() *PriceTable {
	if x != nil {
		return x.PriceTable
	}
	return nil
}

func (x *DiscoveryResponse) GetWorkflow() []*Workflow {
	if x != nil {
		return x.Workflow
	}
	return nil
}

func (x *DiscoveryResponse) GetNoChange() *NoChange {
	if x != nil {
		return x.NoChange
	}
	return nil
}

func (x *DiscoveryResponse) GetStagesDetail() []*ProbeStageDetails {
	if x != nil {
		return x.StagesDetail
	}
	return nil
}

func (x *DiscoveryResponse) GetCloudBillingData() []*CloudBillingData {
	if x != nil {
		return x.CloudBillingData
	}
	return nil
}

// ProbeStageDetails is used for reporting on different stages of discovery and validation.
// E.g. discovery process consists of several stages, so this message can be used for reporting
// details of individual stages. These reports can be used for detailed understanding of probe
// validation/discovery process state.
type ProbeStageDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The description of what this stage is doing (ideally in less that 70 characters). Example
	// of description are "validating credentials" or "retrieving business applications".
	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	// The status of this stage after validation/discovery finished.
	Status *ProbeStageDetails_StageStatus `protobuf:"varint,2,opt,name=status,enum=common_dto.ProbeStageDetails_StageStatus" json:"status,omitempty"`
	// The short message (ideally 70 characters or less) explaining the stage status. Example of
	// such messages are "invalid credentials" or "4 business application retrieved".
	StatusShortExplanation *string `protobuf:"bytes,3,opt,name=statusShortExplanation" json:"statusShortExplanation,omitempty"`
	// The full message explaining the stage status. This explanation may include the instructions
	// or hints on how to address issue if there is one.
	StatusLongExplanation *string `protobuf:"bytes,4,opt,name=statusLongExplanation" json:"statusLongExplanation,omitempty"`
}

func (x *ProbeStageDetails) Reset() {
	*x = ProbeStageDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProbeStageDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProbeStageDetails) ProtoMessage() {}

func (x *ProbeStageDetails) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProbeStageDetails.ProtoReflect.Descriptor instead.
func (*ProbeStageDetails) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{2}
}

func (x *ProbeStageDetails) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ProbeStageDetails) GetStatus() ProbeStageDetails_StageStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ProbeStageDetails_DID_NOT_RUN
}

func (x *ProbeStageDetails) GetStatusShortExplanation() string {
	if x != nil && x.StatusShortExplanation != nil {
		return *x.StatusShortExplanation
	}
	return ""
}

func (x *ProbeStageDetails) GetStatusLongExplanation() string {
	if x != nil && x.StatusLongExplanation != nil {
		return *x.StatusLongExplanation
	}
	return ""
}

// Custom user-defined account values. These construction is used, when SDK probe writers
// define their own account values, instead of reusing existing ones.
// Custom fields should be used, when there is not predefined field to match the purpose
// of the field required by the probe.
type CustomAccountDefEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of this entry field. The name must be unique for all of the entries you
	// define for this probe.
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The display name of this entry. This is the name that appears in the user interface.
	DisplayName *string `protobuf:"bytes,2,req,name=displayName" json:"displayName,omitempty"`
	// Optional description of what this entry represents.
	Description *string `protobuf:"bytes,3,req,name=description" json:"description,omitempty"`
	// A regular expression to validate a field. If the user's input matches the
	// regular expression, then the entry is valid.
	// For example, you can validate that the entered text is only numbers and period characters
	// for an IP address. To disable validation (allow any text), pass {@code ".*"}.
	VerificationRegex *string `protobuf:"bytes,4,opt,name=verificationRegex,def=.*" json:"verificationRegex,omitempty"`
	// Specifies if the value for the entry can be disclosed (in the log file or wherever else).
	IsSecret *bool `protobuf:"varint,5,opt,name=isSecret,def=0" json:"isSecret,omitempty"`
	// Field type describes, what data type is expected to be put into this field
	//
	// Types that are assignable to FieldType:
	//	*CustomAccountDefEntry_PrimitiveValue_
	//	*CustomAccountDefEntry_GroupScope
	//	*CustomAccountDefEntry_EntityScope
	FieldType isCustomAccountDefEntry_FieldType `protobuf_oneof:"fieldType"`
	// Specifies if the value for the entry can have multiple lines.
	IsMultiline *bool `protobuf:"varint,9,opt,name=isMultiline,def=0" json:"isMultiline,omitempty"`
}

// Default values for CustomAccountDefEntry fields.
const (
	Default_CustomAccountDefEntry_VerificationRegex = string(".*")
	Default_CustomAccountDefEntry_IsSecret          = bool(false)
	Default_CustomAccountDefEntry_IsMultiline       = bool(false)
)

func (x *CustomAccountDefEntry) Reset() {
	*x = CustomAccountDefEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAccountDefEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAccountDefEntry) ProtoMessage() {}

func (x *CustomAccountDefEntry) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAccountDefEntry.ProtoReflect.Descriptor instead.
func (*CustomAccountDefEntry) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{3}
}

func (x *CustomAccountDefEntry) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CustomAccountDefEntry) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *CustomAccountDefEntry) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CustomAccountDefEntry) GetVerificationRegex() string {
	if x != nil && x.VerificationRegex != nil {
		return *x.VerificationRegex
	}
	return Default_CustomAccountDefEntry_VerificationRegex
}

func (x *CustomAccountDefEntry) GetIsSecret() bool {
	if x != nil && x.IsSecret != nil {
		return *x.IsSecret
	}
	return Default_CustomAccountDefEntry_IsSecret
}

func (m *CustomAccountDefEntry) GetFieldType() isCustomAccountDefEntry_FieldType {
	if m != nil {
		return m.FieldType
	}
	return nil
}

func (x *CustomAccountDefEntry) GetPrimitiveValue() CustomAccountDefEntry_PrimitiveValue {
	if x, ok := x.GetFieldType().(*CustomAccountDefEntry_PrimitiveValue_); ok {
		return x.PrimitiveValue
	}
	return CustomAccountDefEntry_STRING
}

func (x *CustomAccountDefEntry) GetGroupScope() *CustomAccountDefEntry_GroupScopePropertySet {
	if x, ok := x.GetFieldType().(*CustomAccountDefEntry_GroupScope); ok {
		return x.GroupScope
	}
	return nil
}

func (x *CustomAccountDefEntry) GetEntityScope() *CustomAccountDefEntry_GroupScopePropertySet {
	if x, ok := x.GetFieldType().(*CustomAccountDefEntry_EntityScope); ok {
		return x.EntityScope
	}
	return nil
}

func (x *CustomAccountDefEntry) GetIsMultiline() bool {
	if x != nil && x.IsMultiline != nil {
		return *x.IsMultiline
	}
	return Default_CustomAccountDefEntry_IsMultiline
}

type isCustomAccountDefEntry_FieldType interface {
	isCustomAccountDefEntry_FieldType()
}

type CustomAccountDefEntry_PrimitiveValue_ struct {
	// Field just holds a value of primitive type
	PrimitiveValue CustomAccountDefEntry_PrimitiveValue `protobuf:"varint,6,opt,name=primitive_value,json=primitiveValue,enum=common_dto.CustomAccountDefEntry_PrimitiveValue,oneof"`
}

type CustomAccountDefEntry_GroupScope struct {
	// Set of entity properties (e.g. IP addresses) for group scope target discovery
	GroupScope *CustomAccountDefEntry_GroupScopePropertySet `protobuf:"bytes,7,opt,name=group_scope,json=groupScope,oneof"`
}

type CustomAccountDefEntry_EntityScope struct {
	// Set of entity properties (e.g. BusinessAccount Offer ID) for entity scope target
	// discovery.  Supported only in XL.  An entity property can scope to 1 or multiple entities
	// in the topology.
	EntityScope *CustomAccountDefEntry_GroupScopePropertySet `protobuf:"bytes,8,opt,name=entity_scope,json=entityScope,oneof"`
}

func (*CustomAccountDefEntry_PrimitiveValue_) isCustomAccountDefEntry_FieldType() {}

func (*CustomAccountDefEntry_GroupScope) isCustomAccountDefEntry_FieldType() {}

func (*CustomAccountDefEntry_EntityScope) isCustomAccountDefEntry_FieldType() {}

// The AccountDefinitionEntry class defines a single field that is part of the account credentials
// a user must specify to connect to a target of this probe type. Note that for every probe, the
// 'TARGET_IDENTIFIER' is a mandatory field.
//
// It's the responsibility of your probe to define the credentials it needs to attach to a target. When adding an associated target to
// Operations Manager via the REST API, the API call includes parameters for each of the credentials defined here.
// When attaching via the Operations Manager GUI, the credentials defined here appear in the GUI as individual fields.
// For a given probe, you define the credentials as a Set of AccountDefinitionEntry objects.
type AccountDefEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of account definition
	//
	// Types that are assignable to Definition:
	//	*AccountDefEntry_PredefinedDefinition
	//	*AccountDefEntry_CustomDefinition
	Definition isAccountDefEntry_Definition `protobuf_oneof:"definition"`
	// Whether this field is mandatory (true) or optional (false). Default is mandatory
	Mandatory *bool `protobuf:"varint,4,opt,name=mandatory,def=1" json:"mandatory,omitempty"`
	// Default value the probe declares for this field. This can only be set if the field is
	// optional.
	DefaultValue *string `protobuf:"bytes,5,opt,name=defaultValue" json:"defaultValue,omitempty"`
	// Whether this field should be used as the display name.
	// If multiple fields have this attribute, the target display name will be the concatenation of them.
	// If no field has this attribute, the identifying fields in the probe info will be used.
	IsTargetDisplayName *bool `protobuf:"varint,6,opt,name=isTargetDisplayName,def=0" json:"isTargetDisplayName,omitempty"`
	// Values to which this field is allowed to be set. If empty, the field can be set to any value.
	AllowedValues []string `protobuf:"bytes,7,rep,name=allowed_values,json=allowedValues" json:"allowed_values,omitempty"`
	// Reference to a field name that this field is dependent upon - the named field can enable or
	// disable this field based on the named field's value.
	DependencyKey *string `protobuf:"bytes,8,opt,name=dependencyKey" json:"dependencyKey,omitempty"`
	// Regular expression for a value of field specified in dependencyKey that is used to
	// enable this field
	DependencyValue *string `protobuf:"bytes,9,opt,name=dependencyValue" json:"dependencyValue,omitempty"`
}

// Default values for AccountDefEntry fields.
const (
	Default_AccountDefEntry_Mandatory           = bool(true)
	Default_AccountDefEntry_IsTargetDisplayName = bool(false)
)

func (x *AccountDefEntry) Reset() {
	*x = AccountDefEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountDefEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountDefEntry) ProtoMessage() {}

func (x *AccountDefEntry) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountDefEntry.ProtoReflect.Descriptor instead.
func (*AccountDefEntry) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{4}
}

func (m *AccountDefEntry) GetDefinition() isAccountDefEntry_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (x *AccountDefEntry) GetPredefinedDefinition() string {
	if x, ok := x.GetDefinition().(*AccountDefEntry_PredefinedDefinition); ok {
		return x.PredefinedDefinition
	}
	return ""
}

func (x *AccountDefEntry) GetCustomDefinition() *CustomAccountDefEntry {
	if x, ok := x.GetDefinition().(*AccountDefEntry_CustomDefinition); ok {
		return x.CustomDefinition
	}
	return nil
}

func (x *AccountDefEntry) GetMandatory() bool {
	if x != nil && x.Mandatory != nil {
		return *x.Mandatory
	}
	return Default_AccountDefEntry_Mandatory
}

func (x *AccountDefEntry) GetDefaultValue() string {
	if x != nil && x.DefaultValue != nil {
		return *x.DefaultValue
	}
	return ""
}

func (x *AccountDefEntry) GetIsTargetDisplayName() bool {
	if x != nil && x.IsTargetDisplayName != nil {
		return *x.IsTargetDisplayName
	}
	return Default_AccountDefEntry_IsTargetDisplayName
}

func (x *AccountDefEntry) GetAllowedValues() []string {
	if x != nil {
		return x.AllowedValues
	}
	return nil
}

func (x *AccountDefEntry) GetDependencyKey() string {
	if x != nil && x.DependencyKey != nil {
		return *x.DependencyKey
	}
	return ""
}

func (x *AccountDefEntry) GetDependencyValue() string {
	if x != nil && x.DependencyValue != nil {
		return *x.DependencyValue
	}
	return ""
}

type isAccountDefEntry_Definition interface {
	isAccountDefEntry_Definition()
}

type AccountDefEntry_PredefinedDefinition struct {
	// predefined - used do not specify anything for the field definition
	// All the available options are defined in PredefinedAccountDefinition enum.
	// String value, put into this field should be exactly enum's name() (case
	// sensitive).
	PredefinedDefinition string `protobuf:"bytes,2,opt,name=predefined_definition,json=predefinedDefinition,oneof"`
}

type AccountDefEntry_CustomDefinition struct {
	// custom - user is free to define all the configuration for the required field.
	CustomDefinition *CustomAccountDefEntry `protobuf:"bytes,3,opt,name=custom_definition,json=customDefinition,oneof"`
}

func (*AccountDefEntry_PredefinedDefinition) isAccountDefEntry_Definition() {}

func (*AccountDefEntry_CustomDefinition) isAccountDefEntry_Definition() {}

// Error DTO. Represent some errors, occurred during operations inside the Mediation Container.
type ErrorDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Error severity. Used to specify the colour of the message, shown to the end user.
	Severity *ErrorDTO_ErrorSeverity `protobuf:"varint,1,req,name=severity,enum=common_dto.ErrorDTO_ErrorSeverity" json:"severity,omitempty"`
	// Error description. Should not be null.
	Description *string `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	// UUID of the entity the error is related to, if any.
	EntityUuid *string `protobuf:"bytes,3,opt,name=entityUuid" json:"entityUuid,omitempty"`
	// Type of the entity the error is related to, if any.
	EntityType *string `protobuf:"bytes,4,opt,name=entityType" json:"entityType,omitempty"`
	// Error type.
	//
	// Deprecated: Do not use.
	ErrorType *ErrorDTO_ErrorType `protobuf:"varint,5,opt,name=errorType,enum=common_dto.ErrorDTO_ErrorType" json:"errorType,omitempty"`
	// Error type info describing error that occurred during discovery.
	// eg: error can range from connection timeouts to third party api failures.
	// specific message may contain additional information and details related to the error.
	Error_Type_Info []*ErrorTypeInfo `protobuf:"bytes,17,rep,name=error_Type_Info,json=errorTypeInfo" json:"error_Type_Info,omitempty"`
}

func (x *ErrorDTO) Reset() {
	*x = ErrorDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorDTO) ProtoMessage() {}

func (x *ErrorDTO) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorDTO.ProtoReflect.Descriptor instead.
func (*ErrorDTO) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{5}
}

func (x *ErrorDTO) GetSeverity() ErrorDTO_ErrorSeverity {
	if x != nil && x.Severity != nil {
		return *x.Severity
	}
	return ErrorDTO_CRITICAL
}

func (x *ErrorDTO) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *ErrorDTO) GetEntityUuid() string {
	if x != nil && x.EntityUuid != nil {
		return *x.EntityUuid
	}
	return ""
}

func (x *ErrorDTO) GetEntityType() string {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return ""
}

// Deprecated: Do not use.
func (x *ErrorDTO) GetErrorType() ErrorDTO_ErrorType {
	if x != nil && x.ErrorType != nil {
		return *x.ErrorType
	}
	return ErrorDTO_OTHER
}

func (x *ErrorDTO) GetError_Type_Info() []*ErrorTypeInfo {
	if x != nil {
		return x.Error_Type_Info
	}
	return nil
}

// One of error types that caused the error.
type ErrorTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Error_Type_Info:
	//	*ErrorTypeInfo_Other_Error_Type
	//	*ErrorTypeInfo_ConnectionTimeOutErrorType_
	//	*ErrorTypeInfo_UnauthenticatedErrorType_
	//	*ErrorTypeInfo_UnauthorizedErrorType_
	//	*ErrorTypeInfo_TokenUnavailableErrorType_
	//	*ErrorTypeInfo_TokenExpiredErrorType_
	//	*ErrorTypeInfo_DataIsMissingErrorType_
	//	*ErrorTypeInfo_VersionNotSupportedErrorType_
	//	*ErrorTypeInfo_ProbeParsingErrorType_
	//	*ErrorTypeInfo_InternalProbeErrorType_
	//	*ErrorTypeInfo_DuplicationErrorType_
	//	*ErrorTypeInfo_DelayedDataErrorType_
	//	*ErrorTypeInfo_ThirdPartyApiFailureErrorType_
	Error_Type_Info isErrorTypeInfo_Error_Type_Info `protobuf_oneof:"error_Type_Info"`
}

func (x *ErrorTypeInfo) Reset() {
	*x = ErrorTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo) ProtoMessage() {}

func (x *ErrorTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6}
}

func (m *ErrorTypeInfo) GetError_Type_Info() isErrorTypeInfo_Error_Type_Info {
	if m != nil {
		return m.Error_Type_Info
	}
	return nil
}

func (x *ErrorTypeInfo) GetOther_Error_Type() *ErrorTypeInfo_OtherErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_Other_Error_Type); ok {
		return x.Other_Error_Type
	}
	return nil
}

func (x *ErrorTypeInfo) GetConnectionTimeOutErrorType() *ErrorTypeInfo_ConnectionTimeOutErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_ConnectionTimeOutErrorType_); ok {
		return x.ConnectionTimeOutErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetUnauthenticatedErrorType() *ErrorTypeInfo_UnauthenticatedErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_UnauthenticatedErrorType_); ok {
		return x.UnauthenticatedErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetUnauthorizedErrorType() *ErrorTypeInfo_UnauthorizedErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_UnauthorizedErrorType_); ok {
		return x.UnauthorizedErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetTokenUnavailableErrorType() *ErrorTypeInfo_TokenUnavailableErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_TokenUnavailableErrorType_); ok {
		return x.TokenUnavailableErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetTokenExpiredErrorType() *ErrorTypeInfo_TokenExpiredErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_TokenExpiredErrorType_); ok {
		return x.TokenExpiredErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetDataIsMissingErrorType() *ErrorTypeInfo_DataIsMissingErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_DataIsMissingErrorType_); ok {
		return x.DataIsMissingErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetVersionNotSupportedErrorType() *ErrorTypeInfo_VersionNotSupportedErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_VersionNotSupportedErrorType_); ok {
		return x.VersionNotSupportedErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetProbeParsingErrorType() *ErrorTypeInfo_ProbeParsingErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_ProbeParsingErrorType_); ok {
		return x.ProbeParsingErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetInternalProbeErrorType() *ErrorTypeInfo_InternalProbeErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_InternalProbeErrorType_); ok {
		return x.InternalProbeErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetDuplicationErrorType() *ErrorTypeInfo_DuplicationErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_DuplicationErrorType_); ok {
		return x.DuplicationErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetDelayedDataErrorType() *ErrorTypeInfo_DelayedDataErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_DelayedDataErrorType_); ok {
		return x.DelayedDataErrorType
	}
	return nil
}

func (x *ErrorTypeInfo) GetThirdPartyApiFailureErrorType() *ErrorTypeInfo_ThirdPartyApiFailureErrorType {
	if x, ok := x.GetError_Type_Info().(*ErrorTypeInfo_ThirdPartyApiFailureErrorType_); ok {
		return x.ThirdPartyApiFailureErrorType
	}
	return nil
}

type isErrorTypeInfo_Error_Type_Info interface {
	isErrorTypeInfo_Error_Type_Info()
}

type ErrorTypeInfo_Other_Error_Type struct {
	Other_Error_Type *ErrorTypeInfo_OtherErrorType `protobuf:"bytes,1,opt,name=other_Error_Type,json=otherErrorType,oneof"`
}

type ErrorTypeInfo_ConnectionTimeOutErrorType_ struct {
	ConnectionTimeOutErrorType *ErrorTypeInfo_ConnectionTimeOutErrorType `protobuf:"bytes,2,opt,name=connection_time_out_error_type,json=connectionTimeOutErrorType,oneof"`
}

type ErrorTypeInfo_UnauthenticatedErrorType_ struct {
	UnauthenticatedErrorType *ErrorTypeInfo_UnauthenticatedErrorType `protobuf:"bytes,3,opt,name=unauthenticated_error_type,json=unauthenticatedErrorType,oneof"`
}

type ErrorTypeInfo_UnauthorizedErrorType_ struct {
	UnauthorizedErrorType *ErrorTypeInfo_UnauthorizedErrorType `protobuf:"bytes,4,opt,name=unauthorized_error_type,json=unauthorizedErrorType,oneof"`
}

type ErrorTypeInfo_TokenUnavailableErrorType_ struct {
	TokenUnavailableErrorType *ErrorTypeInfo_TokenUnavailableErrorType `protobuf:"bytes,5,opt,name=token_unavailable_error_type,json=tokenUnavailableErrorType,oneof"`
}

type ErrorTypeInfo_TokenExpiredErrorType_ struct {
	TokenExpiredErrorType *ErrorTypeInfo_TokenExpiredErrorType `protobuf:"bytes,6,opt,name=token_expired_error_type,json=tokenExpiredErrorType,oneof"`
}

type ErrorTypeInfo_DataIsMissingErrorType_ struct {
	DataIsMissingErrorType *ErrorTypeInfo_DataIsMissingErrorType `protobuf:"bytes,7,opt,name=data_is_missing_error_type,json=dataIsMissingErrorType,oneof"`
}

type ErrorTypeInfo_VersionNotSupportedErrorType_ struct {
	VersionNotSupportedErrorType *ErrorTypeInfo_VersionNotSupportedErrorType `protobuf:"bytes,8,opt,name=version_not_supported_error_type,json=versionNotSupportedErrorType,oneof"`
}

type ErrorTypeInfo_ProbeParsingErrorType_ struct {
	ProbeParsingErrorType *ErrorTypeInfo_ProbeParsingErrorType `protobuf:"bytes,9,opt,name=probe_parsing_error_type,json=probeParsingErrorType,oneof"`
}

type ErrorTypeInfo_InternalProbeErrorType_ struct {
	InternalProbeErrorType *ErrorTypeInfo_InternalProbeErrorType `protobuf:"bytes,10,opt,name=internal_probe_error_type,json=internalProbeErrorType,oneof"`
}

type ErrorTypeInfo_DuplicationErrorType_ struct {
	DuplicationErrorType *ErrorTypeInfo_DuplicationErrorType `protobuf:"bytes,11,opt,name=duplication_error_type,json=duplicationErrorType,oneof"`
}

type ErrorTypeInfo_DelayedDataErrorType_ struct {
	DelayedDataErrorType *ErrorTypeInfo_DelayedDataErrorType `protobuf:"bytes,12,opt,name=delayed_data_error_type,json=delayedDataErrorType,oneof"`
}

type ErrorTypeInfo_ThirdPartyApiFailureErrorType_ struct {
	ThirdPartyApiFailureErrorType *ErrorTypeInfo_ThirdPartyApiFailureErrorType `protobuf:"bytes,13,opt,name=third_party_api_failure_error_type,json=thirdPartyApiFailureErrorType,oneof"`
}

func (*ErrorTypeInfo_Other_Error_Type) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_ConnectionTimeOutErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_UnauthenticatedErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_UnauthorizedErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_TokenUnavailableErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_TokenExpiredErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_DataIsMissingErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_VersionNotSupportedErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_ProbeParsingErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_InternalProbeErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_DuplicationErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_DelayedDataErrorType_) isErrorTypeInfo_Error_Type_Info() {}

func (*ErrorTypeInfo_ThirdPartyApiFailureErrorType_) isErrorTypeInfo_Error_Type_Info() {}

// Custom Metadata DTO.
// Represents custom data that will used by the Operations Manager server for different features.
// Example : for injecting metadata for computing custom pricing for certain commodities.
type CustomMetadataDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Namespace of the handler for this DTO in the server to handle the metadata
	Namespace *CustomTypeDef_MetadataNamespace `protobuf:"varint,1,req,name=namespace,enum=common_dto.CustomTypeDef_MetadataNamespace" json:"namespace,omitempty"`
	// Key in the namespace for the data
	Key *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	// Type of data
	DataType *CustomMetadataDTO_Type `protobuf:"varint,3,req,name=dataType,enum=common_dto.CustomMetadataDTO_Type" json:"dataType,omitempty"`
	// Serializable Data
	Payload *string `protobuf:"bytes,4,req,name=payload" json:"payload,omitempty"`
}

func (x *CustomMetadataDTO) Reset() {
	*x = CustomMetadataDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomMetadataDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomMetadataDTO) ProtoMessage() {}

func (x *CustomMetadataDTO) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomMetadataDTO.ProtoReflect.Descriptor instead.
func (*CustomMetadataDTO) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{7}
}

func (x *CustomMetadataDTO) GetNamespace() CustomTypeDef_MetadataNamespace {
	if x != nil && x.Namespace != nil {
		return *x.Namespace
	}
	return CustomTypeDef_UNKNOWN
}

func (x *CustomMetadataDTO) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *CustomMetadataDTO) GetDataType() CustomMetadataDTO_Type {
	if x != nil && x.DataType != nil {
		return *x.DataType
	}
	return CustomMetadataDTO_JSON
}

func (x *CustomMetadataDTO) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

// Structure to hold account parameters, passed to probe to connect and authenticate
// to target.
type AccountValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the parameter. Should refer to the "name" field of AccountDefEntry message,
	// which is returned by the probe in registration phase, for example "userName",
	// "password" and so on.
	Key *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	// String representation of the parameter value, for example "secretpassword",
	// "192.168.111.3" and so on.
	StringValue *string `protobuf:"bytes,2,opt,name=stringValue" json:"stringValue,omitempty"`
	// Set of property value lists
	GroupScopePropertyValues []*AccountValue_PropertyValueList `protobuf:"bytes,3,rep,name=groupScopePropertyValues" json:"groupScopePropertyValues,omitempty"`
}

func (x *AccountValue) Reset() {
	*x = AccountValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountValue) ProtoMessage() {}

func (x *AccountValue) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountValue.ProtoReflect.Descriptor instead.
func (*AccountValue) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{8}
}

func (x *AccountValue) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *AccountValue) GetStringValue() string {
	if x != nil && x.StringValue != nil {
		return *x.StringValue
	}
	return ""
}

func (x *AccountValue) GetGroupScopePropertyValues() []*AccountValue_PropertyValueList {
	if x != nil {
		return x.GroupScopePropertyValues
	}
	return nil
}

// Use to create (or update) derived targets as a result of certain discovery.
type DerivedTargetSpecificationDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// String identifier to define the type of the probe.
	// If a probe of that type is not registered with the mediation container of current probe,
	// the derived target creation should fail.
	ProbeType *string `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	// Account values provide entry data to the probe.
	// If for any of the keys of these values there is no account definition in the probe registered with probeType,
	// or this set is missing some mandatory account values, the derived target creation should fail.
	// When updating an existing target, all the values that do not constitute target identifier, should be updated.
	AccountValue []*AccountValue `protobuf:"bytes,2,rep,name=accountValue" json:"accountValue,omitempty"`
	// Whether the target should be visible in UI.
	// When an existing target is updated, this should be updated too.
	Hidden *bool `protobuf:"varint,3,opt,name=hidden,def=1" json:"hidden,omitempty"`
	// Whether the target should be created with dependence on the target being discovered.
	// When updating an existing target, it can change from independent to dependent.
	// But not from dependent to independent, or to dependent from another target.
	Dependent *bool `protobuf:"varint,4,opt,name=dependent,def=1" json:"dependent,omitempty"`
	// Whether the target cannot be changed through public APIs.
	Readonly *bool `protobuf:"varint,5,opt,name=readonly,def=0" json:"readonly,omitempty"`
}

// Default values for DerivedTargetSpecificationDTO fields.
const (
	Default_DerivedTargetSpecificationDTO_Hidden    = bool(true)
	Default_DerivedTargetSpecificationDTO_Dependent = bool(true)
	Default_DerivedTargetSpecificationDTO_Readonly  = bool(false)
)

func (x *DerivedTargetSpecificationDTO) Reset() {
	*x = DerivedTargetSpecificationDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DerivedTargetSpecificationDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DerivedTargetSpecificationDTO) ProtoMessage() {}

func (x *DerivedTargetSpecificationDTO) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DerivedTargetSpecificationDTO.ProtoReflect.Descriptor instead.
func (*DerivedTargetSpecificationDTO) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{9}
}

func (x *DerivedTargetSpecificationDTO) GetProbeType() string {
	if x != nil && x.ProbeType != nil {
		return *x.ProbeType
	}
	return ""
}

func (x *DerivedTargetSpecificationDTO) GetAccountValue() []*AccountValue {
	if x != nil {
		return x.AccountValue
	}
	return nil
}

func (x *DerivedTargetSpecificationDTO) GetHidden() bool {
	if x != nil && x.Hidden != nil {
		return *x.Hidden
	}
	return Default_DerivedTargetSpecificationDTO_Hidden
}

func (x *DerivedTargetSpecificationDTO) GetDependent() bool {
	if x != nil && x.Dependent != nil {
		return *x.Dependent
	}
	return Default_DerivedTargetSpecificationDTO_Dependent
}

func (x *DerivedTargetSpecificationDTO) GetReadonly() bool {
	if x != nil && x.Readonly != nil {
		return *x.Readonly
	}
	return Default_DerivedTargetSpecificationDTO_Readonly
}

// Per entity data to be placed in the discovery context.
type EntityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used when an entity in a scoped target has multiple IPs to indicate one of them
	// that was successfully used to connect to the entity.
	Ip *uint32 `protobuf:"fixed32,1,opt,name=ip" json:"ip,omitempty"`
}

func (x *EntityData) Reset() {
	*x = EntityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityData) ProtoMessage() {}

func (x *EntityData) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityData.ProtoReflect.Descriptor instead.
func (*EntityData) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{10}
}

func (x *EntityData) GetIp() uint32 {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return 0
}

// Discovery context is sent by the probe to the server and then returned back to the probe
// in the next discovery request. Discovery context contains two maps. One is a list of properties
// represented as key-value pairs. The other is per-entity data.
type DiscoveryContextDTO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextEntry map[string]string `protobuf:"bytes,1,rep,name=contextEntry" json:"contextEntry,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Entity data keyed by oid.
	EntityContextEntry map[uint64]*EntityData `protobuf:"bytes,2,rep,name=entityContextEntry" json:"entityContextEntry,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *DiscoveryContextDTO) Reset() {
	*x = DiscoveryContextDTO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryContextDTO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryContextDTO) ProtoMessage() {}

func (x *DiscoveryContextDTO) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryContextDTO.ProtoReflect.Descriptor instead.
func (*DiscoveryContextDTO) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{11}
}

func (x *DiscoveryContextDTO) GetContextEntry() map[string]string {
	if x != nil {
		return x.ContextEntry
	}
	return nil
}

func (x *DiscoveryContextDTO) GetEntityContextEntry() map[uint64]*EntityData {
	if x != nil {
		return x.EntityContextEntry
	}
	return nil
}

type NoChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoChange) Reset() {
	*x = NoChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoChange) ProtoMessage() {}

func (x *NoChange) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoChange.ProtoReflect.Descriptor instead.
func (*NoChange) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{12}
}

// Entity type with a set of properties for group scope account definition
type CustomAccountDefEntry_GroupScopePropertySet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entity type
	EntityType *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// Set of properties
	Property []*CustomAccountDefEntry_GroupScopeProperty `protobuf:"bytes,2,rep,name=property" json:"property,omitempty"`
}

func (x *CustomAccountDefEntry_GroupScopePropertySet) Reset() {
	*x = CustomAccountDefEntry_GroupScopePropertySet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAccountDefEntry_GroupScopePropertySet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAccountDefEntry_GroupScopePropertySet) ProtoMessage() {}

func (x *CustomAccountDefEntry_GroupScopePropertySet) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAccountDefEntry_GroupScopePropertySet.ProtoReflect.Descriptor instead.
func (*CustomAccountDefEntry_GroupScopePropertySet) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CustomAccountDefEntry_GroupScopePropertySet) GetEntityType() EntityDTO_EntityType {
	if x != nil && x.EntityType != nil {
		return *x.EntityType
	}
	return EntityDTO_SWITCH
}

func (x *CustomAccountDefEntry_GroupScopePropertySet) GetProperty() []*CustomAccountDefEntry_GroupScopeProperty {
	if x != nil {
		return x.Property
	}
	return nil
}

// Entity property for group scope selection
type CustomAccountDefEntry_GroupScopeProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the property
	PropertyName *string `protobuf:"bytes,1,req,name=propertyName" json:"propertyName,omitempty"`
	// Checks if property is mandatory or optional
	IsMandatory *bool `protobuf:"varint,2,opt,name=isMandatory,def=1" json:"isMandatory,omitempty"`
}

// Default values for CustomAccountDefEntry_GroupScopeProperty fields.
const (
	Default_CustomAccountDefEntry_GroupScopeProperty_IsMandatory = bool(true)
)

func (x *CustomAccountDefEntry_GroupScopeProperty) Reset() {
	*x = CustomAccountDefEntry_GroupScopeProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomAccountDefEntry_GroupScopeProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomAccountDefEntry_GroupScopeProperty) ProtoMessage() {}

func (x *CustomAccountDefEntry_GroupScopeProperty) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomAccountDefEntry_GroupScopeProperty.ProtoReflect.Descriptor instead.
func (*CustomAccountDefEntry_GroupScopeProperty) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{3, 1}
}

func (x *CustomAccountDefEntry_GroupScopeProperty) GetPropertyName() string {
	if x != nil && x.PropertyName != nil {
		return *x.PropertyName
	}
	return ""
}

func (x *CustomAccountDefEntry_GroupScopeProperty) GetIsMandatory() bool {
	if x != nil && x.IsMandatory != nil {
		return *x.IsMandatory
	}
	return Default_CustomAccountDefEntry_GroupScopeProperty_IsMandatory
}

// Default error type. Used when error can't be assigned to different type.
type ErrorTypeInfo_OtherErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_OtherErrorType) Reset() {
	*x = ErrorTypeInfo_OtherErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_OtherErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_OtherErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_OtherErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_OtherErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_OtherErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 0}
}

// Connection timeout while retrieving responses.
type ErrorTypeInfo_ConnectionTimeOutErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_ConnectionTimeOutErrorType) Reset() {
	*x = ErrorTypeInfo_ConnectionTimeOutErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_ConnectionTimeOutErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_ConnectionTimeOutErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_ConnectionTimeOutErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_ConnectionTimeOutErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_ConnectionTimeOutErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 1}
}

// Authentication error type.
type ErrorTypeInfo_UnauthenticatedErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_UnauthenticatedErrorType) Reset() {
	*x = ErrorTypeInfo_UnauthenticatedErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_UnauthenticatedErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_UnauthenticatedErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_UnauthenticatedErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_UnauthenticatedErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_UnauthenticatedErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 2}
}

//Unauthorized error type
type ErrorTypeInfo_UnauthorizedErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_UnauthorizedErrorType) Reset() {
	*x = ErrorTypeInfo_UnauthorizedErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_UnauthorizedErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_UnauthorizedErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_UnauthorizedErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_UnauthorizedErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_UnauthorizedErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 3}
}

// Token Unavailable error type.
type ErrorTypeInfo_TokenUnavailableErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_TokenUnavailableErrorType) Reset() {
	*x = ErrorTypeInfo_TokenUnavailableErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_TokenUnavailableErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_TokenUnavailableErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_TokenUnavailableErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_TokenUnavailableErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_TokenUnavailableErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 4}
}

// Token Expired error type.
type ErrorTypeInfo_TokenExpiredErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_TokenExpiredErrorType) Reset() {
	*x = ErrorTypeInfo_TokenExpiredErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_TokenExpiredErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_TokenExpiredErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_TokenExpiredErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_TokenExpiredErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_TokenExpiredErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 5}
}

//Data is missing error type.
type ErrorTypeInfo_DataIsMissingErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_DataIsMissingErrorType) Reset() {
	*x = ErrorTypeInfo_DataIsMissingErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_DataIsMissingErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_DataIsMissingErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_DataIsMissingErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_DataIsMissingErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_DataIsMissingErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 6}
}

//External api version is not supported by the mediation layer.
type ErrorTypeInfo_VersionNotSupportedErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_VersionNotSupportedErrorType) Reset() {
	*x = ErrorTypeInfo_VersionNotSupportedErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_VersionNotSupportedErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_VersionNotSupportedErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_VersionNotSupportedErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_VersionNotSupportedErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_VersionNotSupportedErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 7}
}

// Error during parsing responses. Can occur if response contains unexpected values.
type ErrorTypeInfo_ProbeParsingErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_ProbeParsingErrorType) Reset() {
	*x = ErrorTypeInfo_ProbeParsingErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_ProbeParsingErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_ProbeParsingErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_ProbeParsingErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_ProbeParsingErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_ProbeParsingErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 8}
}

// Internal probe error. Probe encountered unexpected exception during processing.
type ErrorTypeInfo_InternalProbeErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_InternalProbeErrorType) Reset() {
	*x = ErrorTypeInfo_InternalProbeErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_InternalProbeErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_InternalProbeErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_InternalProbeErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_InternalProbeErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_InternalProbeErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 9}
}

// Duplication of targets (there're targets with matching content).
type ErrorTypeInfo_DuplicationErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_DuplicationErrorType) Reset() {
	*x = ErrorTypeInfo_DuplicationErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_DuplicationErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_DuplicationErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_DuplicationErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_DuplicationErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_DuplicationErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 10}
}

// The discovered data is delayed, too old.
type ErrorTypeInfo_DelayedDataErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ErrorTypeInfo_DelayedDataErrorType) Reset() {
	*x = ErrorTypeInfo_DelayedDataErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_DelayedDataErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_DelayedDataErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_DelayedDataErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_DelayedDataErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_DelayedDataErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 11}
}

// Error type caused when a third party api fails to respond or returns incorrect response.
// eg: cloud provider api failure.
type ErrorTypeInfo_ThirdPartyApiFailureErrorType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Endpoint which led to the api failure.
	EndPoint *string `protobuf:"bytes,1,opt,name=end_point,json=endPoint" json:"end_point,omitempty"`
	// error code from the api call made. eg: HTTP.STATUS_CODE, AADSTS50027(Azure error codes).
	ErrorCode *string `protobuf:"bytes,2,opt,name=error_code,json=errorCode" json:"error_code,omitempty"`
}

func (x *ErrorTypeInfo_ThirdPartyApiFailureErrorType) Reset() {
	*x = ErrorTypeInfo_ThirdPartyApiFailureErrorType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorTypeInfo_ThirdPartyApiFailureErrorType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorTypeInfo_ThirdPartyApiFailureErrorType) ProtoMessage() {}

func (x *ErrorTypeInfo_ThirdPartyApiFailureErrorType) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorTypeInfo_ThirdPartyApiFailureErrorType.ProtoReflect.Descriptor instead.
func (*ErrorTypeInfo_ThirdPartyApiFailureErrorType) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{6, 12}
}

func (x *ErrorTypeInfo_ThirdPartyApiFailureErrorType) GetEndPoint() string {
	if x != nil && x.EndPoint != nil {
		return *x.EndPoint
	}
	return ""
}

func (x *ErrorTypeInfo_ThirdPartyApiFailureErrorType) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

type AccountValue_PropertyValueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (x *AccountValue_PropertyValueList) Reset() {
	*x = AccountValue_PropertyValueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Discovery_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountValue_PropertyValueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountValue_PropertyValueList) ProtoMessage() {}

func (x *AccountValue_PropertyValueList) ProtoReflect() protoreflect.Message {
	mi := &file_Discovery_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountValue_PropertyValueList.ProtoReflect.Descriptor instead.
func (*AccountValue_PropertyValueList) Descriptor() ([]byte, []int) {
	return file_Discovery_proto_rawDescGZIP(), []int{8, 0}
}

func (x *AccountValue_PropertyValueList) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_Discovery_proto protoreflect.FileDescriptor

var file_Discovery_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x1a, 0x0f, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x43, 0x6f, 0x73, 0x74, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x10, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x54, 0x4f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x50,
	0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x44, 0x54, 0x4f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x56, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x54, 0x4f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x44, 0x54, 0x4f, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x54, 0x4f, 0x12,
	0x42, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x64, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0xcb, 0x08, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x08, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x44, 0x54, 0x4f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x54,
	0x4f, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x54, 0x4f, 0x12, 0x33, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x44, 0x54, 0x4f, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f,
	0x12, 0x3e, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x54, 0x4f, 0x52,
	0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x42, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x44, 0x54, 0x4f, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x4e, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x44, 0x54,
	0x4f, 0x52, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x44, 0x54, 0x4f, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x44, 0x54, 0x4f, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x44, 0x54, 0x4f, 0x12, 0x4f, 0x0a, 0x0d, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65,
	0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x72, 0x69, 0x76,
	0x65, 0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x54, 0x4f, 0x52, 0x0d, 0x64, 0x65, 0x72, 0x69, 0x76, 0x65,
	0x64, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x4e, 0x0a, 0x12, 0x6e, 0x6f, 0x6e, 0x4d, 0x61,
	0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f,
	0x2e, 0x4e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x54, 0x4f, 0x52, 0x12, 0x6e, 0x6f, 0x6e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f, 0x12, 0x2d, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x44,
	0x54, 0x4f, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x66,
	0x6c, 0x6f, 0x77, 0x44, 0x54, 0x4f, 0x12, 0x4b, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x54,
	0x4f, 0x52, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x31, 0x0a, 0x07, 0x63, 0x6f, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74,
	0x6f, 0x2e, 0x43, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x54, 0x4f, 0x52, 0x07, 0x63,
	0x6f, 0x73, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x36, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x30,
	0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x12, 0x31, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f,
	0x2e, 0x4e, 0x6f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x08, 0x6e, 0x6f, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x48, 0x0a, 0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x18, 0x12, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x10, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xa0, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x36, 0x0a, 0x16,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6c, 0x61,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x6f,
	0x6e, 0x67, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x6f, 0x6e, 0x67, 0x45,
	0x78, 0x70, 0x6c, 0x61, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0b, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x49, 0x44,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49, 0x4c, 0x55,
	0x52, 0x45, 0x10, 0x02, 0x22, 0xd9, 0x06, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x3a, 0x02, 0x2e, 0x2a, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x08, 0x69, 0x73, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x08, 0x69, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x5b, 0x0a, 0x0f, 0x70,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74,
	0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44,
	0x65, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74,
	0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5a, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x5c, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x27, 0x0a, 0x0b, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x69, 0x6e,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x0b,
	0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x69, 0x6e, 0x65, 0x1a, 0xab, 0x01, 0x0a, 0x15,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x53, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x54, 0x4f,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x50, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a, 0x60, 0x0a, 0x12, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0b, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0b,
	0x69, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x36, 0x0a, 0x0e, 0x50,
	0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x55, 0x4d,
	0x45, 0x52, 0x49, 0x43, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41,
	0x4e, 0x10, 0x03, 0x42, 0x0b, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x22, 0xa0, 0x03, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x66, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e,
	0x65, 0x64, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x70, 0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65,
	0x64, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x11, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x64, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x44, 0x65, 0x66, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x48, 0x00, 0x52, 0x10, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a,
	0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x09, 0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x13, 0x69, 0x73, 0x54, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x13, 0x69, 0x73, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x63, 0x79, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x95, 0x05, 0x0a, 0x08, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x54, 0x4f,
	0x12, 0x3e, 0x0a, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x54, 0x4f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52, 0x08, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64,
	0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x54, 0x4f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x54, 0x79,
	0x70, 0x65, 0x5f, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xb5, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x00,
	0x1a, 0x02, 0x08, 0x01, 0x12, 0x1a, 0x0a, 0x12, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x1a, 0x02, 0x08, 0x01,
	0x12, 0x17, 0x0a, 0x0f, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x14, 0x0a, 0x0c, 0x55, 0x4e, 0x41,
	0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10, 0x03, 0x1a, 0x02, 0x08, 0x01, 0x12,
	0x19, 0x0a, 0x11, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x15, 0x0a, 0x0d, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x05, 0x1a, 0x02, 0x08,
	0x01, 0x12, 0x17, 0x0a, 0x0f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x49, 0x53, 0x5f, 0x4d, 0x49, 0x53,
	0x53, 0x49, 0x4e, 0x47, 0x10, 0x06, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x1d, 0x0a, 0x15, 0x56, 0x45,
	0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f, 0x52,
	0x54, 0x45, 0x44, 0x10, 0x07, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x1b, 0x0a, 0x13, 0x50, 0x52, 0x4f,
	0x42, 0x45, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x10, 0x08, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x1c, 0x0a, 0x14, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x42, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x09,
	0x1a, 0x02, 0x08, 0x01, 0x12, 0x13, 0x0a, 0x0b, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x14, 0x0a, 0x0c, 0x44, 0x45, 0x4c,
	0x41, 0x59, 0x45, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x10, 0x0b, 0x1a, 0x02, 0x08, 0x01, 0x22,
	0x2a, 0x0a, 0x0d, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x0c, 0x0a, 0x08, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x22, 0xf2, 0x0e, 0x0a, 0x0d,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x54, 0x0a,
	0x10, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x7a, 0x0a, 0x1e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x48, 0x00, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x72, 0x0a, 0x1a, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x55,
	0x6e, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x18, 0x75, 0x6e, 0x61, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x69, 0x0a, 0x17, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69,
	0x7a, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x75, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x76,
	0x0a, 0x1c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x75, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x19, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a, 0x18, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x6e, 0x0a, 0x1a, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x73, 0x5f, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x49, 0x73, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x16, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x73, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e,
	0x6f, 0x74, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x1c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x6a, 0x0a, 0x18, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x50, 0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x15, 0x70, 0x72, 0x6f, 0x62,
	0x65, 0x50, 0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x6d, 0x0a, 0x19, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x6f, 0x62, 0x65, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74,
	0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x66, 0x0a, 0x16, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x75, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x00, 0x52, 0x14, 0x64, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x67, 0x0a, 0x17, 0x64, 0x65, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x14, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x84, 0x01, 0x0a, 0x22, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x69, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x69, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x10, 0x0a, 0x0e, 0x4f, 0x74, 0x68, 0x65,
	0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1c, 0x0a, 0x1a, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x4f, 0x75, 0x74, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1a, 0x0a, 0x18, 0x55, 0x6e, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x1a, 0x17, 0x0a, 0x15, 0x55, 0x6e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1b, 0x0a,
	0x19, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x55, 0x6e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x17, 0x0a, 0x15, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x1a, 0x18, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x49, 0x73, 0x4d, 0x69, 0x73,
	0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x1e, 0x0a,
	0x1c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x17, 0x0a,
	0x15, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x50, 0x61, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x18, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0x16, 0x0a, 0x14, 0x44, 0x75, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x61,
	0x79, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x1a, 0x5b, 0x0a, 0x1d, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70,
	0x69, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x11, 0x0a,
	0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x54, 0x79, 0x70, 0x65, 0x5f, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xe5, 0x01, 0x0a, 0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x44, 0x54, 0x4f, 0x12, 0x49, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x65, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x3e, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64,
	0x74, 0x6f, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x44, 0x54, 0x4f, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x04,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x19, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4a, 0x53, 0x4f, 0x4e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x58, 0x4d, 0x4c, 0x10, 0x01, 0x22, 0xd5, 0x01, 0x0a, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x66, 0x0a,
	0x18, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x18, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x29, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0xe0, 0x01, 0x0a, 0x1d, 0x44, 0x65, 0x72, 0x69, 0x76, 0x65, 0x64, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x54, 0x4f, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x62, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3c, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x64, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c,
	0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04,
	0x74, 0x72, 0x75, 0x65, 0x52, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x09,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a,
	0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x09, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x61, 0x64, 0x6f,
	0x6e, 0x6c, 0x79, 0x22, 0x1c, 0x0a, 0x0a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x02, 0x69,
	0x70, 0x22, 0xf5, 0x02, 0x0a, 0x13, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x54, 0x4f, 0x12, 0x55, 0x0a, 0x0c, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x54, 0x4f,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x67, 0x0a, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x44, 0x54, 0x4f, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x12, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x1a, 0x3f, 0x0a, 0x11, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5d, 0x0a, 0x17, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x64, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x0a, 0x0a, 0x08, 0x4e, 0x6f, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x2a, 0x3f, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x55, 0x4c, 0x4c, 0x10, 0x00,
	0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x41, 0x4c, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0b, 0x50, 0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x02, 0x1a, 0x02, 0x08, 0x01, 0x42, 0x5a, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6d,
	0x74, 0x75, 0x72, 0x62, 0x6f, 0x2e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x64, 0x74, 0x6f, 0x42, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x79, 0x5a, 0x2c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x75, 0x72, 0x62, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x2f, 0x74, 0x75, 0x72, 0x62,
	0x6f, 0x2d, 0x67, 0x6f, 0x2d, 0x73, 0x64, 0x6b, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f,
}

var (
	file_Discovery_proto_rawDescOnce sync.Once
	file_Discovery_proto_rawDescData = file_Discovery_proto_rawDesc
)

func file_Discovery_proto_rawDescGZIP() []byte {
	file_Discovery_proto_rawDescOnce.Do(func() {
		file_Discovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_Discovery_proto_rawDescData)
	})
	return file_Discovery_proto_rawDescData
}

var file_Discovery_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_Discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_Discovery_proto_goTypes = []interface{}{
	(DiscoveryType)(0),                                  // 0: common_dto.DiscoveryType
	(ProbeStageDetails_StageStatus)(0),                  // 1: common_dto.ProbeStageDetails.StageStatus
	(CustomAccountDefEntry_PrimitiveValue)(0),           // 2: common_dto.CustomAccountDefEntry.PrimitiveValue
	(ErrorDTO_ErrorType)(0),                             // 3: common_dto.ErrorDTO.ErrorType
	(ErrorDTO_ErrorSeverity)(0),                         // 4: common_dto.ErrorDTO.ErrorSeverity
	(CustomMetadataDTO_Type)(0),                         // 5: common_dto.CustomMetadataDTO.Type
	(*ValidationResponse)(nil),                          // 6: common_dto.ValidationResponse
	(*DiscoveryResponse)(nil),                           // 7: common_dto.DiscoveryResponse
	(*ProbeStageDetails)(nil),                           // 8: common_dto.ProbeStageDetails
	(*CustomAccountDefEntry)(nil),                       // 9: common_dto.CustomAccountDefEntry
	(*AccountDefEntry)(nil),                             // 10: common_dto.AccountDefEntry
	(*ErrorDTO)(nil),                                    // 11: common_dto.ErrorDTO
	(*ErrorTypeInfo)(nil),                               // 12: common_dto.ErrorTypeInfo
	(*CustomMetadataDTO)(nil),                           // 13: common_dto.CustomMetadataDTO
	(*AccountValue)(nil),                                // 14: common_dto.AccountValue
	(*DerivedTargetSpecificationDTO)(nil),               // 15: common_dto.DerivedTargetSpecificationDTO
	(*EntityData)(nil),                                  // 16: common_dto.EntityData
	(*DiscoveryContextDTO)(nil),                         // 17: common_dto.DiscoveryContextDTO
	(*NoChange)(nil),                                    // 18: common_dto.NoChange
	(*CustomAccountDefEntry_GroupScopePropertySet)(nil), // 19: common_dto.CustomAccountDefEntry.GroupScopePropertySet
	(*CustomAccountDefEntry_GroupScopeProperty)(nil),    // 20: common_dto.CustomAccountDefEntry.GroupScopeProperty
	(*ErrorTypeInfo_OtherErrorType)(nil),                // 21: common_dto.ErrorTypeInfo.OtherErrorType
	(*ErrorTypeInfo_ConnectionTimeOutErrorType)(nil),    // 22: common_dto.ErrorTypeInfo.ConnectionTimeOutErrorType
	(*ErrorTypeInfo_UnauthenticatedErrorType)(nil),      // 23: common_dto.ErrorTypeInfo.UnauthenticatedErrorType
	(*ErrorTypeInfo_UnauthorizedErrorType)(nil),         // 24: common_dto.ErrorTypeInfo.UnauthorizedErrorType
	(*ErrorTypeInfo_TokenUnavailableErrorType)(nil),     // 25: common_dto.ErrorTypeInfo.TokenUnavailableErrorType
	(*ErrorTypeInfo_TokenExpiredErrorType)(nil),         // 26: common_dto.ErrorTypeInfo.TokenExpiredErrorType
	(*ErrorTypeInfo_DataIsMissingErrorType)(nil),        // 27: common_dto.ErrorTypeInfo.DataIsMissingErrorType
	(*ErrorTypeInfo_VersionNotSupportedErrorType)(nil),  // 28: common_dto.ErrorTypeInfo.VersionNotSupportedErrorType
	(*ErrorTypeInfo_ProbeParsingErrorType)(nil),         // 29: common_dto.ErrorTypeInfo.ProbeParsingErrorType
	(*ErrorTypeInfo_InternalProbeErrorType)(nil),        // 30: common_dto.ErrorTypeInfo.InternalProbeErrorType
	(*ErrorTypeInfo_DuplicationErrorType)(nil),          // 31: common_dto.ErrorTypeInfo.DuplicationErrorType
	(*ErrorTypeInfo_DelayedDataErrorType)(nil),          // 32: common_dto.ErrorTypeInfo.DelayedDataErrorType
	(*ErrorTypeInfo_ThirdPartyApiFailureErrorType)(nil), // 33: common_dto.ErrorTypeInfo.ThirdPartyApiFailureErrorType
	(*AccountValue_PropertyValueList)(nil),              // 34: common_dto.AccountValue.PropertyValueList
	nil,                                                 // 35: common_dto.DiscoveryContextDTO.ContextEntryEntry
	nil,                                                 // 36: common_dto.DiscoveryContextDTO.EntityContextEntryEntry
	(*EntityDTO)(nil),                                   // 37: common_dto.EntityDTO
	(*GroupDTO)(nil),                                    // 38: common_dto.GroupDTO
	(*EntityProfileDTO)(nil),                            // 39: common_dto.EntityProfileDTO
	(*DeploymentProfileDTO)(nil),                        // 40: common_dto.DeploymentProfileDTO
	(*NotificationDTO)(nil),                             // 41: common_dto.NotificationDTO
	(*NonMarketEntityDTO)(nil),                          // 42: common_dto.NonMarketEntityDTO
	(*FlowDTO)(nil),                                     // 43: common_dto.FlowDTO
	(*CostDataDTO)(nil),                                 // 44: common_dto.CostDataDTO
	(*PriceTable)(nil),                                  // 45: common_dto.PriceTable
	(*Workflow)(nil),                                    // 46: common_dto.Workflow
	(*CloudBillingData)(nil),                            // 47: common_dto.CloudBillingData
	(CustomTypeDef_MetadataNamespace)(0),                // 48: common_dto.CustomTypeDef.MetadataNamespace
	(EntityDTO_EntityType)(0),                           // 49: common_dto.EntityDTO.EntityType
}
var file_Discovery_proto_depIdxs = []int32{
	11, // 0: common_dto.ValidationResponse.errorDTO:type_name -> common_dto.ErrorDTO
	8,  // 1: common_dto.ValidationResponse.stages_detail:type_name -> common_dto.ProbeStageDetails
	11, // 2: common_dto.DiscoveryResponse.errorDTO:type_name -> common_dto.ErrorDTO
	37, // 3: common_dto.DiscoveryResponse.entityDTO:type_name -> common_dto.EntityDTO
	38, // 4: common_dto.DiscoveryResponse.discoveredGroup:type_name -> common_dto.GroupDTO
	39, // 5: common_dto.DiscoveryResponse.entityProfile:type_name -> common_dto.EntityProfileDTO
	40, // 6: common_dto.DiscoveryResponse.deploymentProfile:type_name -> common_dto.DeploymentProfileDTO
	41, // 7: common_dto.DiscoveryResponse.notification:type_name -> common_dto.NotificationDTO
	13, // 8: common_dto.DiscoveryResponse.metadataDTO:type_name -> common_dto.CustomMetadataDTO
	15, // 9: common_dto.DiscoveryResponse.derivedTarget:type_name -> common_dto.DerivedTargetSpecificationDTO
	42, // 10: common_dto.DiscoveryResponse.nonMarketEntityDTO:type_name -> common_dto.NonMarketEntityDTO
	43, // 11: common_dto.DiscoveryResponse.flowDTO:type_name -> common_dto.FlowDTO
	17, // 12: common_dto.DiscoveryResponse.discoveryContext:type_name -> common_dto.DiscoveryContextDTO
	44, // 13: common_dto.DiscoveryResponse.costDTO:type_name -> common_dto.CostDataDTO
	45, // 14: common_dto.DiscoveryResponse.priceTable:type_name -> common_dto.PriceTable
	46, // 15: common_dto.DiscoveryResponse.workflow:type_name -> common_dto.Workflow
	18, // 16: common_dto.DiscoveryResponse.no_change:type_name -> common_dto.NoChange
	8,  // 17: common_dto.DiscoveryResponse.stages_detail:type_name -> common_dto.ProbeStageDetails
	47, // 18: common_dto.DiscoveryResponse.cloudBillingData:type_name -> common_dto.CloudBillingData
	1,  // 19: common_dto.ProbeStageDetails.status:type_name -> common_dto.ProbeStageDetails.StageStatus
	2,  // 20: common_dto.CustomAccountDefEntry.primitive_value:type_name -> common_dto.CustomAccountDefEntry.PrimitiveValue
	19, // 21: common_dto.CustomAccountDefEntry.group_scope:type_name -> common_dto.CustomAccountDefEntry.GroupScopePropertySet
	19, // 22: common_dto.CustomAccountDefEntry.entity_scope:type_name -> common_dto.CustomAccountDefEntry.GroupScopePropertySet
	9,  // 23: common_dto.AccountDefEntry.custom_definition:type_name -> common_dto.CustomAccountDefEntry
	4,  // 24: common_dto.ErrorDTO.severity:type_name -> common_dto.ErrorDTO.ErrorSeverity
	3,  // 25: common_dto.ErrorDTO.errorType:type_name -> common_dto.ErrorDTO.ErrorType
	12, // 26: common_dto.ErrorDTO.error_Type_Info:type_name -> common_dto.ErrorTypeInfo
	21, // 27: common_dto.ErrorTypeInfo.other_Error_Type:type_name -> common_dto.ErrorTypeInfo.OtherErrorType
	22, // 28: common_dto.ErrorTypeInfo.connection_time_out_error_type:type_name -> common_dto.ErrorTypeInfo.ConnectionTimeOutErrorType
	23, // 29: common_dto.ErrorTypeInfo.unauthenticated_error_type:type_name -> common_dto.ErrorTypeInfo.UnauthenticatedErrorType
	24, // 30: common_dto.ErrorTypeInfo.unauthorized_error_type:type_name -> common_dto.ErrorTypeInfo.UnauthorizedErrorType
	25, // 31: common_dto.ErrorTypeInfo.token_unavailable_error_type:type_name -> common_dto.ErrorTypeInfo.TokenUnavailableErrorType
	26, // 32: common_dto.ErrorTypeInfo.token_expired_error_type:type_name -> common_dto.ErrorTypeInfo.TokenExpiredErrorType
	27, // 33: common_dto.ErrorTypeInfo.data_is_missing_error_type:type_name -> common_dto.ErrorTypeInfo.DataIsMissingErrorType
	28, // 34: common_dto.ErrorTypeInfo.version_not_supported_error_type:type_name -> common_dto.ErrorTypeInfo.VersionNotSupportedErrorType
	29, // 35: common_dto.ErrorTypeInfo.probe_parsing_error_type:type_name -> common_dto.ErrorTypeInfo.ProbeParsingErrorType
	30, // 36: common_dto.ErrorTypeInfo.internal_probe_error_type:type_name -> common_dto.ErrorTypeInfo.InternalProbeErrorType
	31, // 37: common_dto.ErrorTypeInfo.duplication_error_type:type_name -> common_dto.ErrorTypeInfo.DuplicationErrorType
	32, // 38: common_dto.ErrorTypeInfo.delayed_data_error_type:type_name -> common_dto.ErrorTypeInfo.DelayedDataErrorType
	33, // 39: common_dto.ErrorTypeInfo.third_party_api_failure_error_type:type_name -> common_dto.ErrorTypeInfo.ThirdPartyApiFailureErrorType
	48, // 40: common_dto.CustomMetadataDTO.namespace:type_name -> common_dto.CustomTypeDef.MetadataNamespace
	5,  // 41: common_dto.CustomMetadataDTO.dataType:type_name -> common_dto.CustomMetadataDTO.Type
	34, // 42: common_dto.AccountValue.groupScopePropertyValues:type_name -> common_dto.AccountValue.PropertyValueList
	14, // 43: common_dto.DerivedTargetSpecificationDTO.accountValue:type_name -> common_dto.AccountValue
	35, // 44: common_dto.DiscoveryContextDTO.contextEntry:type_name -> common_dto.DiscoveryContextDTO.ContextEntryEntry
	36, // 45: common_dto.DiscoveryContextDTO.entityContextEntry:type_name -> common_dto.DiscoveryContextDTO.EntityContextEntryEntry
	49, // 46: common_dto.CustomAccountDefEntry.GroupScopePropertySet.entityType:type_name -> common_dto.EntityDTO.EntityType
	20, // 47: common_dto.CustomAccountDefEntry.GroupScopePropertySet.property:type_name -> common_dto.CustomAccountDefEntry.GroupScopeProperty
	16, // 48: common_dto.DiscoveryContextDTO.EntityContextEntryEntry.value:type_name -> common_dto.EntityData
	49, // [49:49] is the sub-list for method output_type
	49, // [49:49] is the sub-list for method input_type
	49, // [49:49] is the sub-list for extension type_name
	49, // [49:49] is the sub-list for extension extendee
	0,  // [0:49] is the sub-list for field type_name
}

func init() { file_Discovery_proto_init() }
func file_Discovery_proto_init() {
	if File_Discovery_proto != nil {
		return
	}
	file_CommonDTO_proto_init()
	file_CostBilling_proto_init()
	file_ProfileDTO_proto_init()
	file_NonMarketEntityDTO_proto_init()
	file_PricingDTO_proto_init()
	file_ActionExecution_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_Discovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProbeStageDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAccountDefEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountDefEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomMetadataDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DerivedTargetSpecificationDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryContextDTO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAccountDefEntry_GroupScopePropertySet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomAccountDefEntry_GroupScopeProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_OtherErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_ConnectionTimeOutErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_UnauthenticatedErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_UnauthorizedErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_TokenUnavailableErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_TokenExpiredErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_DataIsMissingErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_VersionNotSupportedErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_ProbeParsingErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_InternalProbeErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_DuplicationErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_DelayedDataErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrorTypeInfo_ThirdPartyApiFailureErrorType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Discovery_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountValue_PropertyValueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Discovery_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*CustomAccountDefEntry_PrimitiveValue_)(nil),
		(*CustomAccountDefEntry_GroupScope)(nil),
		(*CustomAccountDefEntry_EntityScope)(nil),
	}
	file_Discovery_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*AccountDefEntry_PredefinedDefinition)(nil),
		(*AccountDefEntry_CustomDefinition)(nil),
	}
	file_Discovery_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*ErrorTypeInfo_Other_Error_Type)(nil),
		(*ErrorTypeInfo_ConnectionTimeOutErrorType_)(nil),
		(*ErrorTypeInfo_UnauthenticatedErrorType_)(nil),
		(*ErrorTypeInfo_UnauthorizedErrorType_)(nil),
		(*ErrorTypeInfo_TokenUnavailableErrorType_)(nil),
		(*ErrorTypeInfo_TokenExpiredErrorType_)(nil),
		(*ErrorTypeInfo_DataIsMissingErrorType_)(nil),
		(*ErrorTypeInfo_VersionNotSupportedErrorType_)(nil),
		(*ErrorTypeInfo_ProbeParsingErrorType_)(nil),
		(*ErrorTypeInfo_InternalProbeErrorType_)(nil),
		(*ErrorTypeInfo_DuplicationErrorType_)(nil),
		(*ErrorTypeInfo_DelayedDataErrorType_)(nil),
		(*ErrorTypeInfo_ThirdPartyApiFailureErrorType_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Discovery_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_Discovery_proto_goTypes,
		DependencyIndexes: file_Discovery_proto_depIdxs,
		EnumInfos:         file_Discovery_proto_enumTypes,
		MessageInfos:      file_Discovery_proto_msgTypes,
	}.Build()
	File_Discovery_proto = out.File
	file_Discovery_proto_rawDesc = nil
	file_Discovery_proto_goTypes = nil
	file_Discovery_proto_depIdxs = nil
}
