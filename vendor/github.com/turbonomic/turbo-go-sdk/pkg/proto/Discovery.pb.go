// Code generated by protoc-gen-go.
// source: Discovery.proto
// DO NOT EDIT!

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// The types of discovery supported by SDK framework. FULL discovery is supported by default.
type DiscoveryType int32

const (
	// Full discovery which discovers everything
	DiscoveryType_FULL DiscoveryType = 0
	// Incremetal discovery which discovers changed entities (removed, added, etc.)
	DiscoveryType_INCREMENTAL DiscoveryType = 1
	// Performance discovery which discovers utilization data
	DiscoveryType_PERFORMANCE DiscoveryType = 2
)

var DiscoveryType_name = map[int32]string{
	0: "FULL",
	1: "INCREMENTAL",
	2: "PERFORMANCE",
}
var DiscoveryType_value = map[string]int32{
	"FULL":        0,
	"INCREMENTAL": 1,
	"PERFORMANCE": 2,
}

func (x DiscoveryType) Enum() *DiscoveryType {
	p := new(DiscoveryType)
	*p = x
	return p
}
func (x DiscoveryType) String() string {
	return proto.EnumName(DiscoveryType_name, int32(x))
}
func (x *DiscoveryType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DiscoveryType_value, data, "DiscoveryType")
	if err != nil {
		return err
	}
	*x = DiscoveryType(value)
	return nil
}
func (DiscoveryType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

// Enum, determining the type of primitive value. All the primitive values are
// always stored in string value holder, but are interpreted differently
type CustomAccountDefEntry_PrimitiveValue int32

const (
	// Value should be interpreted as string
	CustomAccountDefEntry_STRING CustomAccountDefEntry_PrimitiveValue = 1
	// Value should be interpreted as numeric
	CustomAccountDefEntry_NUMERIC CustomAccountDefEntry_PrimitiveValue = 2
	// Value should be interpreted as boolean
	CustomAccountDefEntry_BOOLEAN CustomAccountDefEntry_PrimitiveValue = 3
)

var CustomAccountDefEntry_PrimitiveValue_name = map[int32]string{
	1: "STRING",
	2: "NUMERIC",
	3: "BOOLEAN",
}
var CustomAccountDefEntry_PrimitiveValue_value = map[string]int32{
	"STRING":  1,
	"NUMERIC": 2,
	"BOOLEAN": 3,
}

func (x CustomAccountDefEntry_PrimitiveValue) Enum() *CustomAccountDefEntry_PrimitiveValue {
	p := new(CustomAccountDefEntry_PrimitiveValue)
	*p = x
	return p
}
func (x CustomAccountDefEntry_PrimitiveValue) String() string {
	return proto.EnumName(CustomAccountDefEntry_PrimitiveValue_name, int32(x))
}
func (x *CustomAccountDefEntry_PrimitiveValue) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CustomAccountDefEntry_PrimitiveValue_value, data, "CustomAccountDefEntry_PrimitiveValue")
	if err != nil {
		return err
	}
	*x = CustomAccountDefEntry_PrimitiveValue(value)
	return nil
}
func (CustomAccountDefEntry_PrimitiveValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{2, 0}
}

type ErrorDTO_ErrorSeverity int32

const (
	ErrorDTO_CRITICAL ErrorDTO_ErrorSeverity = 0
	ErrorDTO_WARNING  ErrorDTO_ErrorSeverity = 1
)

var ErrorDTO_ErrorSeverity_name = map[int32]string{
	0: "CRITICAL",
	1: "WARNING",
}
var ErrorDTO_ErrorSeverity_value = map[string]int32{
	"CRITICAL": 0,
	"WARNING":  1,
}

func (x ErrorDTO_ErrorSeverity) Enum() *ErrorDTO_ErrorSeverity {
	p := new(ErrorDTO_ErrorSeverity)
	*p = x
	return p
}
func (x ErrorDTO_ErrorSeverity) String() string {
	return proto.EnumName(ErrorDTO_ErrorSeverity_name, int32(x))
}
func (x *ErrorDTO_ErrorSeverity) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ErrorDTO_ErrorSeverity_value, data, "ErrorDTO_ErrorSeverity")
	if err != nil {
		return err
	}
	*x = ErrorDTO_ErrorSeverity(value)
	return nil
}
func (ErrorDTO_ErrorSeverity) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{4, 0} }

// Type of the serialized data
type CustomMetadataDTO_Type int32

const (
	CustomMetadataDTO_JSON CustomMetadataDTO_Type = 0
	CustomMetadataDTO_XML  CustomMetadataDTO_Type = 1
)

var CustomMetadataDTO_Type_name = map[int32]string{
	0: "JSON",
	1: "XML",
}
var CustomMetadataDTO_Type_value = map[string]int32{
	"JSON": 0,
	"XML":  1,
}

func (x CustomMetadataDTO_Type) Enum() *CustomMetadataDTO_Type {
	p := new(CustomMetadataDTO_Type)
	*p = x
	return p
}
func (x CustomMetadataDTO_Type) String() string {
	return proto.EnumName(CustomMetadataDTO_Type_name, int32(x))
}
func (x *CustomMetadataDTO_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CustomMetadataDTO_Type_value, data, "CustomMetadataDTO_Type")
	if err != nil {
		return err
	}
	*x = CustomMetadataDTO_Type(value)
	return nil
}
func (CustomMetadataDTO_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{5, 0} }

// ValidateResponse is the response of a ValidateRequest message.
// It contains the response, and any errors encountered during the target validation attempt.
type ValidationResponse struct {
	// Errors, discovered during external probe operation
	ErrorDTO         []*ErrorDTO `protobuf:"bytes,1,rep,name=errorDTO" json:"errorDTO,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ValidationResponse) Reset()                    { *m = ValidationResponse{} }
func (m *ValidationResponse) String() string            { return proto.CompactTextString(m) }
func (*ValidationResponse) ProtoMessage()               {}
func (*ValidationResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *ValidationResponse) GetErrorDTO() []*ErrorDTO {
	if m != nil {
		return m.ErrorDTO
	}
	return nil
}

// Mediation container response for target discovery request. Holds both errors and discovered
// entities. If errors occurred, any entities can be sent nevertheless. Only those entities should
// be updated in the operations manager.
//
// Errors do not prevent anything. They are just displayed to users in the UI
type DiscoveryResponse struct {
	// Errors, discovered during external probe operation
	ErrorDTO []*ErrorDTO `protobuf:"bytes,1,rep,name=errorDTO" json:"errorDTO,omitempty"`
	// Entities, discovered by external probe.
	EntityDTO []*EntityDTO `protobuf:"bytes,2,rep,name=entityDTO" json:"entityDTO,omitempty"`
	// Constraints defined in external probe
	DiscoveredGroup []*GroupDTO `protobuf:"bytes,3,rep,name=discoveredGroup" json:"discoveredGroup,omitempty"`
	// ServiceEntityProfile (template)
	EntityProfile []*EntityProfileDTO `protobuf:"bytes,4,rep,name=entityProfile" json:"entityProfile,omitempty"`
	// Deployment Profile (ServiceCatalogItem)
	DeploymentProfile []*DeploymentProfileDTO `protobuf:"bytes,5,rep,name=deploymentProfile" json:"deploymentProfile,omitempty"`
	// Notifications for global (not entity-specific) events
	Notification []*NotificationDTO `protobuf:"bytes,6,rep,name=notification" json:"notification,omitempty"`
	// Custom Metadata DTO
	MetadataDTO []*CustomMetadataDTO `protobuf:"bytes,7,rep,name=metadataDTO" json:"metadataDTO,omitempty"`
	// Derived targets' creation requests
	DerivedTarget []*DerivedTargetSpecificationDTO `protobuf:"bytes,8,rep,name=derivedTarget" json:"derivedTarget,omitempty"`
	// Non market entities, discovered by external probe
	NonMarketEntityDTO []*NonMarketEntityDTO `protobuf:"bytes,9,rep,name=nonMarketEntityDTO" json:"nonMarketEntityDTO,omitempty"`
	// Reserved Instance DTO
	ReservedInstanceDTO []*ReservedInstanceDTO `protobuf:"bytes,10,rep,name=reservedInstanceDTO" json:"reservedInstanceDTO,omitempty"`
	// Flows, discovered by external probe
	FlowDTO          []*FlowDTO `protobuf:"bytes,11,rep,name=flowDTO" json:"flowDTO,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *DiscoveryResponse) Reset()                    { *m = DiscoveryResponse{} }
func (m *DiscoveryResponse) String() string            { return proto.CompactTextString(m) }
func (*DiscoveryResponse) ProtoMessage()               {}
func (*DiscoveryResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *DiscoveryResponse) GetErrorDTO() []*ErrorDTO {
	if m != nil {
		return m.ErrorDTO
	}
	return nil
}

func (m *DiscoveryResponse) GetEntityDTO() []*EntityDTO {
	if m != nil {
		return m.EntityDTO
	}
	return nil
}

func (m *DiscoveryResponse) GetDiscoveredGroup() []*GroupDTO {
	if m != nil {
		return m.DiscoveredGroup
	}
	return nil
}

func (m *DiscoveryResponse) GetEntityProfile() []*EntityProfileDTO {
	if m != nil {
		return m.EntityProfile
	}
	return nil
}

func (m *DiscoveryResponse) GetDeploymentProfile() []*DeploymentProfileDTO {
	if m != nil {
		return m.DeploymentProfile
	}
	return nil
}

func (m *DiscoveryResponse) GetNotification() []*NotificationDTO {
	if m != nil {
		return m.Notification
	}
	return nil
}

func (m *DiscoveryResponse) GetMetadataDTO() []*CustomMetadataDTO {
	if m != nil {
		return m.MetadataDTO
	}
	return nil
}

func (m *DiscoveryResponse) GetDerivedTarget() []*DerivedTargetSpecificationDTO {
	if m != nil {
		return m.DerivedTarget
	}
	return nil
}

func (m *DiscoveryResponse) GetNonMarketEntityDTO() []*NonMarketEntityDTO {
	if m != nil {
		return m.NonMarketEntityDTO
	}
	return nil
}

func (m *DiscoveryResponse) GetReservedInstanceDTO() []*ReservedInstanceDTO {
	if m != nil {
		return m.ReservedInstanceDTO
	}
	return nil
}

func (m *DiscoveryResponse) GetFlowDTO() []*FlowDTO {
	if m != nil {
		return m.FlowDTO
	}
	return nil
}

// Custom user-defined account values. These construction is used, when SDK probe writers
// define their own account values, instead of reusing existing ones.
// Custom fields should be used, when there is not predefined field to match the purpose
// of the field required by the probe.
type CustomAccountDefEntry struct {
	// The name of this entry field. The name must be unique for all of the entries you
	// define for this probe.
	Name *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	// The display name of this entry. This is the name that appears in the user interface.
	DisplayName *string `protobuf:"bytes,2,req,name=displayName" json:"displayName,omitempty"`
	// Optional description of what this entry represents.
	Description *string `protobuf:"bytes,3,req,name=description" json:"description,omitempty"`
	// A regular expression to validate a field. If the user's input matches the
	// regular expression, then the entry is valid.
	// For example, you can validate that the entered text is only numbers and period characters
	// for an IP address. To disable validation (allow any text), pass {@code ".*"}.
	VerificationRegex *string `protobuf:"bytes,4,opt,name=verificationRegex,def=.*" json:"verificationRegex,omitempty"`
	// Specifies if the value for the entry can be disclosed (in the log file or wherever else).
	IsSecret *bool `protobuf:"varint,5,opt,name=isSecret,def=0" json:"isSecret,omitempty"`
	// Field type describes, what data type is expected to be put into this field
	//
	// Types that are valid to be assigned to FieldType:
	//	*CustomAccountDefEntry_PrimitiveValue_
	//	*CustomAccountDefEntry_GroupScope
	FieldType        isCustomAccountDefEntry_FieldType `protobuf_oneof:"fieldType"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CustomAccountDefEntry) Reset()                    { *m = CustomAccountDefEntry{} }
func (m *CustomAccountDefEntry) String() string            { return proto.CompactTextString(m) }
func (*CustomAccountDefEntry) ProtoMessage()               {}
func (*CustomAccountDefEntry) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

const Default_CustomAccountDefEntry_VerificationRegex string = ".*"
const Default_CustomAccountDefEntry_IsSecret bool = false

type isCustomAccountDefEntry_FieldType interface {
	isCustomAccountDefEntry_FieldType()
}

type CustomAccountDefEntry_PrimitiveValue_ struct {
	PrimitiveValue CustomAccountDefEntry_PrimitiveValue `protobuf:"varint,6,opt,name=primitive_value,json=primitiveValue,enum=common_dto.CustomAccountDefEntry_PrimitiveValue,oneof"`
}
type CustomAccountDefEntry_GroupScope struct {
	GroupScope *CustomAccountDefEntry_GroupScopePropertySet `protobuf:"bytes,7,opt,name=group_scope,json=groupScope,oneof"`
}

func (*CustomAccountDefEntry_PrimitiveValue_) isCustomAccountDefEntry_FieldType() {}
func (*CustomAccountDefEntry_GroupScope) isCustomAccountDefEntry_FieldType()      {}

func (m *CustomAccountDefEntry) GetFieldType() isCustomAccountDefEntry_FieldType {
	if m != nil {
		return m.FieldType
	}
	return nil
}

func (m *CustomAccountDefEntry) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CustomAccountDefEntry) GetDisplayName() string {
	if m != nil && m.DisplayName != nil {
		return *m.DisplayName
	}
	return ""
}

func (m *CustomAccountDefEntry) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *CustomAccountDefEntry) GetVerificationRegex() string {
	if m != nil && m.VerificationRegex != nil {
		return *m.VerificationRegex
	}
	return Default_CustomAccountDefEntry_VerificationRegex
}

func (m *CustomAccountDefEntry) GetIsSecret() bool {
	if m != nil && m.IsSecret != nil {
		return *m.IsSecret
	}
	return Default_CustomAccountDefEntry_IsSecret
}

func (m *CustomAccountDefEntry) GetPrimitiveValue() CustomAccountDefEntry_PrimitiveValue {
	if x, ok := m.GetFieldType().(*CustomAccountDefEntry_PrimitiveValue_); ok {
		return x.PrimitiveValue
	}
	return CustomAccountDefEntry_STRING
}

func (m *CustomAccountDefEntry) GetGroupScope() *CustomAccountDefEntry_GroupScopePropertySet {
	if x, ok := m.GetFieldType().(*CustomAccountDefEntry_GroupScope); ok {
		return x.GroupScope
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CustomAccountDefEntry) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CustomAccountDefEntry_OneofMarshaler, _CustomAccountDefEntry_OneofUnmarshaler, _CustomAccountDefEntry_OneofSizer, []interface{}{
		(*CustomAccountDefEntry_PrimitiveValue_)(nil),
		(*CustomAccountDefEntry_GroupScope)(nil),
	}
}

func _CustomAccountDefEntry_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CustomAccountDefEntry)
	// fieldType
	switch x := m.FieldType.(type) {
	case *CustomAccountDefEntry_PrimitiveValue_:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.PrimitiveValue))
	case *CustomAccountDefEntry_GroupScope:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.GroupScope); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CustomAccountDefEntry.FieldType has unexpected type %T", x)
	}
	return nil
}

func _CustomAccountDefEntry_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CustomAccountDefEntry)
	switch tag {
	case 6: // fieldType.primitive_value
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FieldType = &CustomAccountDefEntry_PrimitiveValue_{CustomAccountDefEntry_PrimitiveValue(x)}
		return true, err
	case 7: // fieldType.group_scope
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomAccountDefEntry_GroupScopePropertySet)
		err := b.DecodeMessage(msg)
		m.FieldType = &CustomAccountDefEntry_GroupScope{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CustomAccountDefEntry_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CustomAccountDefEntry)
	// fieldType
	switch x := m.FieldType.(type) {
	case *CustomAccountDefEntry_PrimitiveValue_:
		n += proto.SizeVarint(6<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.PrimitiveValue))
	case *CustomAccountDefEntry_GroupScope:
		s := proto.Size(x.GroupScope)
		n += proto.SizeVarint(7<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Entity type with a set of properties for group scope account definition
type CustomAccountDefEntry_GroupScopePropertySet struct {
	// Entity type
	EntityType *EntityDTO_EntityType `protobuf:"varint,1,req,name=entityType,enum=common_dto.EntityDTO_EntityType" json:"entityType,omitempty"`
	// Set of properties
	Property         []*CustomAccountDefEntry_GroupScopeProperty `protobuf:"bytes,2,rep,name=property" json:"property,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CustomAccountDefEntry_GroupScopePropertySet) Reset() {
	*m = CustomAccountDefEntry_GroupScopePropertySet{}
}
func (m *CustomAccountDefEntry_GroupScopePropertySet) String() string {
	return proto.CompactTextString(m)
}
func (*CustomAccountDefEntry_GroupScopePropertySet) ProtoMessage() {}
func (*CustomAccountDefEntry_GroupScopePropertySet) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{2, 0}
}

func (m *CustomAccountDefEntry_GroupScopePropertySet) GetEntityType() EntityDTO_EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityDTO_SWITCH
}

func (m *CustomAccountDefEntry_GroupScopePropertySet) GetProperty() []*CustomAccountDefEntry_GroupScopeProperty {
	if m != nil {
		return m.Property
	}
	return nil
}

// Entity property for group scope selection
type CustomAccountDefEntry_GroupScopeProperty struct {
	// The name of the property
	PropertyName *string `protobuf:"bytes,1,req,name=propertyName" json:"propertyName,omitempty"`
	// Checks if property is mandatory or optional
	IsMandatory      *bool  `protobuf:"varint,2,opt,name=isMandatory,def=1" json:"isMandatory,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CustomAccountDefEntry_GroupScopeProperty) Reset() {
	*m = CustomAccountDefEntry_GroupScopeProperty{}
}
func (m *CustomAccountDefEntry_GroupScopeProperty) String() string { return proto.CompactTextString(m) }
func (*CustomAccountDefEntry_GroupScopeProperty) ProtoMessage()    {}
func (*CustomAccountDefEntry_GroupScopeProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{2, 1}
}

const Default_CustomAccountDefEntry_GroupScopeProperty_IsMandatory bool = true

func (m *CustomAccountDefEntry_GroupScopeProperty) GetPropertyName() string {
	if m != nil && m.PropertyName != nil {
		return *m.PropertyName
	}
	return ""
}

func (m *CustomAccountDefEntry_GroupScopeProperty) GetIsMandatory() bool {
	if m != nil && m.IsMandatory != nil {
		return *m.IsMandatory
	}
	return Default_CustomAccountDefEntry_GroupScopeProperty_IsMandatory
}

// The AccountDefinitionEntry class defines a single field that is part of the account credentials
// a user must specify to connect to a target of this probe type. Note that for every probe, the
// 'TARGET_IDENTIFIER' is a mandatory field.
//
// It's the responsibility of your probe to define the credentials it needs to attach to a target. When adding an associated target to
// Operations Manager via the REST API, the API call includes parameters for each of the credentials defined here.
// When attaching via the Operations Manager GUI, the credentials defined here appear in the GUI as individual fields.
// For a given probe, you define the credentials as a Set of AccountDefinitionEntry objects.
type AccountDefEntry struct {
	// Type of account definition
	//
	// Types that are valid to be assigned to Definition:
	//	*AccountDefEntry_PredefinedDefinition
	//	*AccountDefEntry_CustomDefinition
	Definition isAccountDefEntry_Definition `protobuf_oneof:"definition"`
	// Whether this field is mandatory (true) or optional (false). Default is mandatory
	Mandatory *bool `protobuf:"varint,4,opt,name=mandatory,def=1" json:"mandatory,omitempty"`
	// Default value the probe declares for this field. This can only be set if the field is
	// optional.
	DefaultValue     *string `protobuf:"bytes,5,opt,name=defaultValue" json:"defaultValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AccountDefEntry) Reset()                    { *m = AccountDefEntry{} }
func (m *AccountDefEntry) String() string            { return proto.CompactTextString(m) }
func (*AccountDefEntry) ProtoMessage()               {}
func (*AccountDefEntry) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

const Default_AccountDefEntry_Mandatory bool = true

type isAccountDefEntry_Definition interface {
	isAccountDefEntry_Definition()
}

type AccountDefEntry_PredefinedDefinition struct {
	PredefinedDefinition string `protobuf:"bytes,2,opt,name=predefined_definition,json=predefinedDefinition,oneof"`
}
type AccountDefEntry_CustomDefinition struct {
	CustomDefinition *CustomAccountDefEntry `protobuf:"bytes,3,opt,name=custom_definition,json=customDefinition,oneof"`
}

func (*AccountDefEntry_PredefinedDefinition) isAccountDefEntry_Definition() {}
func (*AccountDefEntry_CustomDefinition) isAccountDefEntry_Definition()     {}

func (m *AccountDefEntry) GetDefinition() isAccountDefEntry_Definition {
	if m != nil {
		return m.Definition
	}
	return nil
}

func (m *AccountDefEntry) GetPredefinedDefinition() string {
	if x, ok := m.GetDefinition().(*AccountDefEntry_PredefinedDefinition); ok {
		return x.PredefinedDefinition
	}
	return ""
}

func (m *AccountDefEntry) GetCustomDefinition() *CustomAccountDefEntry {
	if x, ok := m.GetDefinition().(*AccountDefEntry_CustomDefinition); ok {
		return x.CustomDefinition
	}
	return nil
}

func (m *AccountDefEntry) GetMandatory() bool {
	if m != nil && m.Mandatory != nil {
		return *m.Mandatory
	}
	return Default_AccountDefEntry_Mandatory
}

func (m *AccountDefEntry) GetDefaultValue() string {
	if m != nil && m.DefaultValue != nil {
		return *m.DefaultValue
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AccountDefEntry) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AccountDefEntry_OneofMarshaler, _AccountDefEntry_OneofUnmarshaler, _AccountDefEntry_OneofSizer, []interface{}{
		(*AccountDefEntry_PredefinedDefinition)(nil),
		(*AccountDefEntry_CustomDefinition)(nil),
	}
}

func _AccountDefEntry_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AccountDefEntry)
	// definition
	switch x := m.Definition.(type) {
	case *AccountDefEntry_PredefinedDefinition:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.PredefinedDefinition)
	case *AccountDefEntry_CustomDefinition:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CustomDefinition); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AccountDefEntry.Definition has unexpected type %T", x)
	}
	return nil
}

func _AccountDefEntry_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AccountDefEntry)
	switch tag {
	case 2: // definition.predefined_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Definition = &AccountDefEntry_PredefinedDefinition{x}
		return true, err
	case 3: // definition.custom_definition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CustomAccountDefEntry)
		err := b.DecodeMessage(msg)
		m.Definition = &AccountDefEntry_CustomDefinition{msg}
		return true, err
	default:
		return false, nil
	}
}

func _AccountDefEntry_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AccountDefEntry)
	// definition
	switch x := m.Definition.(type) {
	case *AccountDefEntry_PredefinedDefinition:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.PredefinedDefinition)))
		n += len(x.PredefinedDefinition)
	case *AccountDefEntry_CustomDefinition:
		s := proto.Size(x.CustomDefinition)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// Error DTO. Represent some errors, occurred during operations inside the Mediation Container.
type ErrorDTO struct {
	// Error severity. Used to specify the colour of the message, shown to the end user.
	Severity *ErrorDTO_ErrorSeverity `protobuf:"varint,1,req,name=severity,enum=common_dto.ErrorDTO_ErrorSeverity" json:"severity,omitempty"`
	// Error description. Should not be null.
	Description *string `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	// UUID of the entity the error is related to, if any.
	EntityUuid *string `protobuf:"bytes,3,opt,name=entityUuid" json:"entityUuid,omitempty"`
	// Type of the entity the error is related to, if any.
	EntityType       *string `protobuf:"bytes,4,opt,name=entityType" json:"entityType,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ErrorDTO) Reset()                    { *m = ErrorDTO{} }
func (m *ErrorDTO) String() string            { return proto.CompactTextString(m) }
func (*ErrorDTO) ProtoMessage()               {}
func (*ErrorDTO) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ErrorDTO) GetSeverity() ErrorDTO_ErrorSeverity {
	if m != nil && m.Severity != nil {
		return *m.Severity
	}
	return ErrorDTO_CRITICAL
}

func (m *ErrorDTO) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ErrorDTO) GetEntityUuid() string {
	if m != nil && m.EntityUuid != nil {
		return *m.EntityUuid
	}
	return ""
}

func (m *ErrorDTO) GetEntityType() string {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return ""
}

// Custom Metadata DTO.
// Represents custom data that will used by the Operations Manager server for different features.
// Example : for injecting metadata for computing custom pricing for certain commodities.
type CustomMetadataDTO struct {
	// Namespace of the handler for this DTO in the server to handle the metadata
	Namespace *CustomTypeDef_MetadataNamespace `protobuf:"varint,1,req,name=namespace,enum=common_dto.CustomTypeDef_MetadataNamespace" json:"namespace,omitempty"`
	// Key in the namespace for the data
	Key *string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	// Type of data
	DataType *CustomMetadataDTO_Type `protobuf:"varint,3,req,name=dataType,enum=common_dto.CustomMetadataDTO_Type" json:"dataType,omitempty"`
	// Serializable Data
	Payload          *string `protobuf:"bytes,4,req,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CustomMetadataDTO) Reset()                    { *m = CustomMetadataDTO{} }
func (m *CustomMetadataDTO) String() string            { return proto.CompactTextString(m) }
func (*CustomMetadataDTO) ProtoMessage()               {}
func (*CustomMetadataDTO) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *CustomMetadataDTO) GetNamespace() CustomTypeDef_MetadataNamespace {
	if m != nil && m.Namespace != nil {
		return *m.Namespace
	}
	return CustomTypeDef_UNKNOWN
}

func (m *CustomMetadataDTO) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CustomMetadataDTO) GetDataType() CustomMetadataDTO_Type {
	if m != nil && m.DataType != nil {
		return *m.DataType
	}
	return CustomMetadataDTO_JSON
}

func (m *CustomMetadataDTO) GetPayload() string {
	if m != nil && m.Payload != nil {
		return *m.Payload
	}
	return ""
}

// Structure to hold account parameters, passed to probe to connect and authenticate
// to target.
type AccountValue struct {
	// Name of the parameter. Should refer to the "name" field of AccountDefEntry message,
	// which is returned by the probe in registration phase, for example "userName",
	// "password" and so on.
	Key *string `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	// String representation of the parameter value, for example "secretpassword",
	// "192.168.111.3" and so on.
	StringValue *string `protobuf:"bytes,2,opt,name=stringValue" json:"stringValue,omitempty"`
	// Set of property value lists
	GroupScopePropertyValues []*AccountValue_PropertyValueList `protobuf:"bytes,3,rep,name=groupScopePropertyValues" json:"groupScopePropertyValues,omitempty"`
	XXX_unrecognized         []byte                            `json:"-"`
}

func (m *AccountValue) Reset()                    { *m = AccountValue{} }
func (m *AccountValue) String() string            { return proto.CompactTextString(m) }
func (*AccountValue) ProtoMessage()               {}
func (*AccountValue) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *AccountValue) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *AccountValue) GetStringValue() string {
	if m != nil && m.StringValue != nil {
		return *m.StringValue
	}
	return ""
}

func (m *AccountValue) GetGroupScopePropertyValues() []*AccountValue_PropertyValueList {
	if m != nil {
		return m.GroupScopePropertyValues
	}
	return nil
}

type AccountValue_PropertyValueList struct {
	Value            []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AccountValue_PropertyValueList) Reset()         { *m = AccountValue_PropertyValueList{} }
func (m *AccountValue_PropertyValueList) String() string { return proto.CompactTextString(m) }
func (*AccountValue_PropertyValueList) ProtoMessage()    {}
func (*AccountValue_PropertyValueList) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{6, 0}
}

func (m *AccountValue_PropertyValueList) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

// Use to create (or update) derived targets as a result of certain discovery.
type DerivedTargetSpecificationDTO struct {
	// String identifier to define the type of the probe.
	// If a probe of that type is not registered with the mediation container of current probe,
	// the derived target creation should fail.
	ProbeType *string `protobuf:"bytes,1,req,name=probeType" json:"probeType,omitempty"`
	// Account values provide entry data to the probe.
	// If for any of the keys of these values there is no account definition in the probe registered with probeType,
	// or this set is missing some mandatory account values, the derived target creation should fail.
	// When updating an existing target, all the values that do not constitute target identifier, should be updated.
	AccountValue []*AccountValue `protobuf:"bytes,2,rep,name=accountValue" json:"accountValue,omitempty"`
	// Whether the target should be visible in UI.
	// When an existing target is updated, this should be updated too.
	Hidden *bool `protobuf:"varint,3,opt,name=hidden,def=1" json:"hidden,omitempty"`
	// Whether the target should be created with dependence on the target being discovered.
	// When updating an existing target, it can change from independent to dependent.
	// But not from dependent to independent, or to dependent from another target.
	Dependent        *bool  `protobuf:"varint,4,opt,name=dependent,def=1" json:"dependent,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DerivedTargetSpecificationDTO) Reset()                    { *m = DerivedTargetSpecificationDTO{} }
func (m *DerivedTargetSpecificationDTO) String() string            { return proto.CompactTextString(m) }
func (*DerivedTargetSpecificationDTO) ProtoMessage()               {}
func (*DerivedTargetSpecificationDTO) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

const Default_DerivedTargetSpecificationDTO_Hidden bool = true
const Default_DerivedTargetSpecificationDTO_Dependent bool = true

func (m *DerivedTargetSpecificationDTO) GetProbeType() string {
	if m != nil && m.ProbeType != nil {
		return *m.ProbeType
	}
	return ""
}

func (m *DerivedTargetSpecificationDTO) GetAccountValue() []*AccountValue {
	if m != nil {
		return m.AccountValue
	}
	return nil
}

func (m *DerivedTargetSpecificationDTO) GetHidden() bool {
	if m != nil && m.Hidden != nil {
		return *m.Hidden
	}
	return Default_DerivedTargetSpecificationDTO_Hidden
}

func (m *DerivedTargetSpecificationDTO) GetDependent() bool {
	if m != nil && m.Dependent != nil {
		return *m.Dependent
	}
	return Default_DerivedTargetSpecificationDTO_Dependent
}

func init() {
	proto.RegisterType((*ValidationResponse)(nil), "common_dto.ValidationResponse")
	proto.RegisterType((*DiscoveryResponse)(nil), "common_dto.DiscoveryResponse")
	proto.RegisterType((*CustomAccountDefEntry)(nil), "common_dto.CustomAccountDefEntry")
	proto.RegisterType((*CustomAccountDefEntry_GroupScopePropertySet)(nil), "common_dto.CustomAccountDefEntry.GroupScopePropertySet")
	proto.RegisterType((*CustomAccountDefEntry_GroupScopeProperty)(nil), "common_dto.CustomAccountDefEntry.GroupScopeProperty")
	proto.RegisterType((*AccountDefEntry)(nil), "common_dto.AccountDefEntry")
	proto.RegisterType((*ErrorDTO)(nil), "common_dto.ErrorDTO")
	proto.RegisterType((*CustomMetadataDTO)(nil), "common_dto.CustomMetadataDTO")
	proto.RegisterType((*AccountValue)(nil), "common_dto.AccountValue")
	proto.RegisterType((*AccountValue_PropertyValueList)(nil), "common_dto.AccountValue.PropertyValueList")
	proto.RegisterType((*DerivedTargetSpecificationDTO)(nil), "common_dto.DerivedTargetSpecificationDTO")
	proto.RegisterEnum("common_dto.DiscoveryType", DiscoveryType_name, DiscoveryType_value)
	proto.RegisterEnum("common_dto.CustomAccountDefEntry_PrimitiveValue", CustomAccountDefEntry_PrimitiveValue_name, CustomAccountDefEntry_PrimitiveValue_value)
	proto.RegisterEnum("common_dto.ErrorDTO_ErrorSeverity", ErrorDTO_ErrorSeverity_name, ErrorDTO_ErrorSeverity_value)
	proto.RegisterEnum("common_dto.CustomMetadataDTO_Type", CustomMetadataDTO_Type_name, CustomMetadataDTO_Type_value)
}

func init() { proto.RegisterFile("Discovery.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xeb, 0x8e, 0xdb, 0x44,
	0x14, 0x5e, 0x27, 0xd9, 0xdd, 0xf8, 0x24, 0xbb, 0x49, 0xa6, 0x5d, 0xc9, 0x2c, 0xbd, 0xa4, 0xfe,
	0x81, 0xd2, 0x05, 0xa2, 0xaa, 0xdc, 0xa4, 0x82, 0x5a, 0x72, 0xdb, 0x6e, 0x50, 0xe2, 0x84, 0x49,
	0x5a, 0x10, 0xfc, 0x58, 0x5c, 0x7b, 0x12, 0xac, 0x26, 0x1e, 0x6b, 0x3c, 0x09, 0xe4, 0x99, 0x78,
	0x06, 0x5e, 0x02, 0x09, 0x89, 0x17, 0xe0, 0x3f, 0x12, 0x2f, 0x80, 0x66, 0x7c, 0x8f, 0xb7, 0x54,
	0xea, 0xaf, 0x38, 0xe7, 0xbb, 0xcc, 0x99, 0x33, 0xe7, 0x8c, 0x0d, 0xb5, 0xbe, 0xe3, 0x5b, 0x74,
	0x4b, 0xd8, 0xae, 0xed, 0x31, 0xca, 0x29, 0x02, 0x8b, 0xae, 0xd7, 0xd4, 0xbd, 0xb6, 0x39, 0x3d,
	0xaf, 0xf5, 0xe4, 0x73, 0x7f, 0x3e, 0x09, 0xc0, 0xf3, 0xfa, 0x94, 0xd1, 0x85, 0xb3, 0x22, 0x49,
	0x44, 0x33, 0xa8, 0x3b, 0x36, 0xd9, 0x6b, 0xc2, 0x07, 0x2e, 0x77, 0xf8, 0x2e, 0x46, 0xf4, 0x4b,
	0x40, 0x2f, 0xcd, 0x95, 0x63, 0x9b, 0xdc, 0xa1, 0x2e, 0x26, 0xbe, 0x47, 0x5d, 0x9f, 0xa0, 0x47,
	0x50, 0x26, 0x8c, 0x51, 0xd6, 0x9f, 0x4f, 0x34, 0xa5, 0x59, 0x6c, 0x55, 0x1e, 0xdf, 0x6e, 0x27,
	0x2b, 0xb6, 0x07, 0x21, 0x86, 0x63, 0x96, 0xfe, 0xef, 0x21, 0x34, 0xe2, 0x24, 0xdf, 0xdd, 0x07,
	0x7d, 0x02, 0x2a, 0x89, 0x52, 0xd4, 0x0a, 0x52, 0x72, 0x96, 0x91, 0x44, 0x20, 0x4e, 0x78, 0xe8,
	0x29, 0xd4, 0xec, 0x70, 0x6d, 0x62, 0x3f, 0x67, 0x74, 0xe3, 0x69, 0xc5, 0xfc, 0x6a, 0x12, 0x10,
	0xca, 0x7d, 0x32, 0xea, 0xc2, 0x49, 0x60, 0x16, 0x16, 0x4e, 0x2b, 0x49, 0xf5, 0x9d, 0xfc, 0xc2,
	0x49, 0x65, 0x71, 0x56, 0x82, 0x0c, 0x68, 0xd8, 0xc4, 0x5b, 0xd1, 0xdd, 0x9a, 0xb8, 0x3c, 0xf2,
	0x39, 0x94, 0x3e, 0xcd, 0xb4, 0x4f, 0x7f, 0x9f, 0x24, 0xbc, 0xf2, 0x52, 0xf4, 0x0c, 0xaa, 0x2e,
	0xe5, 0xce, 0xc2, 0xb1, 0xe4, 0xd1, 0x68, 0x47, 0xd2, 0xea, 0xfd, 0xb4, 0x95, 0x91, 0xc2, 0x85,
	0x4b, 0x46, 0x80, 0x9e, 0x41, 0x65, 0x4d, 0xb8, 0x69, 0x9b, 0xdc, 0x14, 0xb5, 0x3c, 0x96, 0xfa,
	0xbb, 0x69, 0x7d, 0x6f, 0xe3, 0x73, 0xba, 0x1e, 0x27, 0x24, 0x9c, 0x56, 0xa0, 0x09, 0x9c, 0xd8,
	0x84, 0x39, 0x5b, 0x62, 0xcf, 0x4d, 0xb6, 0x24, 0x5c, 0x2b, 0x4b, 0x8b, 0x87, 0xd9, 0xdd, 0xa4,
	0x08, 0x33, 0x8f, 0x58, 0x99, 0x84, 0xb2, 0x7a, 0x64, 0x00, 0x72, 0x73, 0x7d, 0xa8, 0xa9, 0xd2,
	0xf5, 0x5e, 0x76, 0x63, 0xfb, 0x2c, 0x7c, 0x83, 0x12, 0x7d, 0x0b, 0xb7, 0x18, 0xf1, 0x09, 0xdb,
	0x12, 0x7b, 0xe8, 0xfa, 0xdc, 0x74, 0x2d, 0x51, 0x4c, 0x0d, 0xa4, 0xe1, 0xfd, 0xb4, 0x21, 0xce,
	0xd3, 0xf0, 0x4d, 0x5a, 0xf4, 0x31, 0x1c, 0x2f, 0x56, 0xf4, 0x17, 0x61, 0x53, 0x91, 0x36, 0xb7,
	0xd2, 0x36, 0x97, 0x01, 0x84, 0x23, 0x8e, 0xfe, 0xc7, 0x21, 0x9c, 0x05, 0x55, 0xec, 0x58, 0x16,
	0xdd, 0xb8, 0xbc, 0x4f, 0x16, 0x03, 0x97, 0xb3, 0x1d, 0x42, 0x50, 0x72, 0xcd, 0x35, 0xd1, 0x94,
	0x66, 0xa1, 0xa5, 0x62, 0xf9, 0x8c, 0x9a, 0x50, 0xb1, 0x1d, 0xdf, 0x5b, 0x99, 0x3b, 0x43, 0x40,
	0x05, 0x09, 0xa5, 0x43, 0x92, 0x41, 0x7c, 0x8b, 0x39, 0x9e, 0x3c, 0xf3, 0x62, 0xc8, 0x48, 0x42,
	0xe8, 0x11, 0x34, 0xb6, 0x84, 0xc5, 0x55, 0xc6, 0x64, 0x49, 0x7e, 0xd5, 0x4a, 0x4d, 0xa5, 0xa5,
	0x3e, 0x29, 0xb4, 0x2f, 0x70, 0x1e, 0x44, 0x0f, 0xa0, 0xec, 0xf8, 0x33, 0x62, 0x31, 0xc2, 0xb5,
	0xc3, 0xa6, 0xd2, 0x2a, 0x3f, 0x39, 0x5c, 0x98, 0x2b, 0x9f, 0xe0, 0x38, 0x8c, 0x7e, 0x84, 0x9a,
	0xc7, 0x9c, 0xb5, 0xc3, 0x9d, 0x2d, 0xb9, 0xde, 0x9a, 0xab, 0x0d, 0xd1, 0x8e, 0x9a, 0x4a, 0xeb,
	0xf4, 0xf1, 0xa3, 0x7c, 0xbb, 0xec, 0x6d, 0xb4, 0x3d, 0x8d, 0x84, 0x2f, 0x85, 0xee, 0xea, 0x00,
	0x9f, 0x7a, 0x99, 0x08, 0xfa, 0x01, 0x2a, 0x4b, 0x31, 0x65, 0xd7, 0xbe, 0x45, 0x3d, 0xa2, 0x1d,
	0x37, 0x95, 0x56, 0xe5, 0xf1, 0x17, 0x6f, 0x37, 0x96, 0xa3, 0x39, 0x13, 0x9a, 0x29, 0xa3, 0x1e,
	0x61, 0x7c, 0x37, 0x23, 0xfc, 0xea, 0x00, 0xc3, 0x32, 0x06, 0xce, 0x7f, 0x53, 0xe0, 0xec, 0x46,
	0x1e, 0xfa, 0x1a, 0x20, 0x98, 0xcf, 0xf9, 0xce, 0x0b, 0x4e, 0xe1, 0x34, 0x3b, 0x87, 0xc9, 0x45,
	0x38, 0x88, 0x79, 0x38, 0xa5, 0x41, 0x53, 0x28, 0x7b, 0xa1, 0x61, 0x78, 0x11, 0x7d, 0xfa, 0x2e,
	0x49, 0xe3, 0xd8, 0xe5, 0xfc, 0x27, 0x40, 0x79, 0x1c, 0xe9, 0x50, 0x8d, 0x18, 0x46, 0xd2, 0x31,
	0x99, 0x18, 0xfa, 0x00, 0x2a, 0x8e, 0x3f, 0x36, 0x5d, 0xdb, 0xe4, 0x94, 0x89, 0x74, 0xc4, 0x31,
	0x96, 0x38, 0xdb, 0x10, 0x9c, 0x06, 0xf4, 0xcf, 0xe1, 0x34, 0x7b, 0x1e, 0x08, 0xe0, 0x68, 0x36,
	0xc7, 0x43, 0xe3, 0x79, 0x5d, 0x41, 0x15, 0x38, 0x36, 0x5e, 0x8c, 0x07, 0x78, 0xd8, 0xab, 0x17,
	0xc4, 0x9f, 0xee, 0x64, 0x32, 0x1a, 0x74, 0x8c, 0x7a, 0xb1, 0x5b, 0x01, 0x75, 0xe1, 0x90, 0x95,
	0x2d, 0x36, 0xae, 0xff, 0xa3, 0x40, 0x6d, 0xbf, 0x9d, 0x3f, 0x83, 0x33, 0x8f, 0x11, 0x9b, 0x2c,
	0x1c, 0x97, 0xd8, 0xd7, 0xf2, 0xd7, 0x91, 0x2d, 0x2a, 0x52, 0x51, 0xaf, 0x0e, 0xf0, 0xed, 0x04,
	0xee, 0xc7, 0x28, 0x9a, 0x42, 0xc3, 0x92, 0x75, 0x4a, 0x4b, 0x8a, 0xb2, 0x03, 0x1e, 0xbc, 0xb5,
	0x98, 0x57, 0x07, 0xb8, 0x1e, 0xa8, 0x53, 0x8e, 0x3a, 0xa8, 0xeb, 0xb8, 0x0e, 0xa5, 0x54, 0x1d,
	0x92, 0xb0, 0xa8, 0xa8, 0x4d, 0x16, 0xe6, 0x66, 0xc5, 0x65, 0x0d, 0x64, 0xd7, 0xab, 0x38, 0x13,
	0xeb, 0x56, 0x01, 0x92, 0x94, 0xf4, 0xbf, 0x14, 0x28, 0x47, 0x2f, 0x23, 0xf4, 0x14, 0xca, 0x3e,
	0x11, 0x73, 0xc4, 0x77, 0x61, 0xe3, 0xe8, 0x37, 0xbd, 0xb4, 0x82, 0x87, 0x59, 0xc8, 0xc4, 0xb1,
	0x66, 0x7f, 0x88, 0x0b, 0xf9, 0x21, 0xbe, 0x17, 0x35, 0xe7, 0x8b, 0x8d, 0x63, 0xcb, 0x7a, 0xa8,
	0x38, 0x15, 0x49, 0x70, 0xd9, 0xbc, 0xa5, 0x34, 0x2e, 0x4f, 0xe8, 0x02, 0x4e, 0x32, 0x8b, 0xa3,
	0x2a, 0x94, 0x7b, 0x78, 0x38, 0x1f, 0xf6, 0x3a, 0xa3, 0xfa, 0x81, 0x38, 0xda, 0xef, 0x3a, 0xd8,
	0x90, 0x87, 0xae, 0xff, 0xad, 0x40, 0x23, 0x77, 0xd1, 0xa3, 0x21, 0xa8, 0xe2, 0x4a, 0xf2, 0x3d,
	0xd3, 0x8a, 0xa6, 0xe3, 0xc3, 0xfc, 0x81, 0x88, 0xc5, 0xfa, 0x64, 0xd1, 0x8e, 0x94, 0x46, 0x24,
	0xc1, 0x89, 0x1a, 0xd5, 0xa1, 0xf8, 0x9a, 0x04, 0x3d, 0xa9, 0x62, 0xf1, 0x28, 0x0a, 0x28, 0xd8,
	0x32, 0xf9, 0x62, 0xbe, 0x80, 0xb9, 0x6c, 0xda, 0x72, 0xf6, 0x62, 0x0d, 0xd2, 0xe0, 0xd8, 0x33,
	0x77, 0x2b, 0x6a, 0xda, 0x5a, 0x49, 0x16, 0x2f, 0xfa, 0xab, 0xbf, 0x07, 0x25, 0xc9, 0x28, 0x43,
	0xe9, 0x9b, 0xd9, 0xc4, 0xa8, 0x1f, 0xa0, 0x63, 0x28, 0x7e, 0x3f, 0x1e, 0xd5, 0x15, 0xfd, 0x4f,
	0x05, 0xaa, 0x61, 0x03, 0x05, 0x9d, 0x1f, 0xe6, 0x15, 0x8c, 0x93, 0xcc, 0xab, 0x09, 0x15, 0x9f,
	0x33, 0xc7, 0x5d, 0x06, 0x6d, 0x11, 0x64, 0x9c, 0x0e, 0xa1, 0x05, 0x68, 0xcb, 0xdc, 0x84, 0x4a,
	0xc8, 0x0f, 0xbf, 0x28, 0x2e, 0xd2, 0x3b, 0x49, 0xaf, 0xd7, 0xce, 0xd0, 0x47, 0x8e, 0xcf, 0xf1,
	0x1b, 0xbd, 0xce, 0x1f, 0x42, 0x23, 0x47, 0x47, 0xb7, 0xe1, 0x30, 0xb8, 0x7b, 0xc5, 0x97, 0x92,
	0x8a, 0x83, 0x3f, 0xfa, 0xef, 0x0a, 0xdc, 0xfd, 0xdf, 0xb7, 0x2c, 0xba, 0x03, 0xaa, 0xc7, 0xe8,
	0x2b, 0x12, 0xdf, 0x74, 0x2a, 0x4e, 0x02, 0xe8, 0x2b, 0xa8, 0x9a, 0xa9, 0x34, 0xc3, 0xab, 0x4c,
	0x7b, 0xd3, 0x36, 0x70, 0x86, 0x8d, 0xee, 0xc0, 0xd1, 0xcf, 0x8e, 0x6d, 0x93, 0x60, 0x6a, 0xa3,
	0x59, 0x0b, 0x63, 0x62, 0x18, 0x6d, 0xe2, 0x11, 0xd7, 0x26, 0x2e, 0xcf, 0x0e, 0x63, 0x1c, 0xbe,
	0xf8, 0x12, 0x4e, 0xe2, 0xef, 0xc2, 0xe8, 0xec, 0x2e, 0x5f, 0x8c, 0x44, 0x9f, 0xd6, 0xa0, 0x32,
	0x34, 0x7a, 0x78, 0x30, 0x1e, 0x18, 0xf3, 0xce, 0xa8, 0xae, 0x88, 0xc0, 0x74, 0x80, 0x2f, 0x27,
	0x78, 0xdc, 0x31, 0x7a, 0x83, 0x7a, 0xa1, 0xfb, 0x11, 0xdc, 0xb7, 0xe8, 0xba, 0xbd, 0x5d, 0xf3,
	0x0d, 0x7b, 0x45, 0xdb, 0xde, 0xca, 0xe4, 0x0b, 0xca, 0xd6, 0x61, 0xf2, 0x6d, 0x9b, 0xd3, 0xae,
	0x1a, 0xbb, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xff, 0x4f, 0xbd, 0x66, 0x26, 0x0b, 0x00, 0x00,
}
